Query: Read JSON Array
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/36290229)
 Reading from JsonFile 

  public static ArrayList<Employee> readFromJsonFile(String fileName){
        ArrayList<Employee> result = new ArrayList<Employee>();

        try{
            String text = new String(Files.readAllBytes(Paths.get(fileName)), StandardCharsets.UTF_8);

            JSONObject obj = new JSONObject(text);
            JSONArray arr = obj.getJSONArray("employees");

            for(int i = 0; i < arr.length(); i++){
                String name = arr.getJSONObject(i).getString("name");
                short salary = Short.parseShort(arr.getJSONObject(i).getString("salary"));
                String position = arr.getJSONObject(i).getString("position");
                byte years_in_company = Byte.parseByte(arr.getJSONObject(i).getString("years_in_company")); 
                if (position.compareToIgnoreCase("manager") == 0){
                    result.add(new Manager(name, salary, position, years_in_company));
                }
                else{
                    result.add(new OrdinaryEmployee(name, salary, position, years_in_company));
                }
            }           
        }
        catch(Exception ex){
            System.out.println(ex.toString());
        }
        return result;
    }
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/10926379)
 
     The whole file is an array and there are objects and other arrays (e.g. cars) in the whole array of the file.   
 

 As you say, the outermost layer of your JSON blob is an array.  Therefore, your parser will return a  JSONArray .  You can then get  JSONObject s from the array ... 

    JSONArray a = (JSONArray) parser.parse(new FileReader("c:\\exer4-courses.json"));

  for (Object o : a)
  {
    JSONObject person = (JSONObject) o;

    String name = (String) person.get("name");
    System.out.println(name);

    String city = (String) person.get("city");
    System.out.println(city);

    String job = (String) person.get("job");
    System.out.println(job);

    JSONArray cars = (JSONArray) person.get("cars");

    for (Object c : cars)
    {
      System.out.println(c+"");
    }
  }
  

 For reference, see "Example 1" on the http://code.google.com/p/json-simple/wiki/DecodingExamples page. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19115485)
 This is an approach.  

  JsonElement jsonElement = new JsonParser().parse(new FileReader("D:/jdemo.json"));
JsonObject  jsonObject  = jsonElement.getAsJsonObject();
JsonArray   jsonArray   = jsonObject.getAsJsonArray("body_stats");

 for(JsonElement body_stats : jsonArray) {
     JsonElement girths = body_stats.getAsJsonObject().get("girths");
     if(griths !=null) {
          //The logic
     }
  }
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/33486481)
 
   Use gson library to read and write json: 
 

   try {
            JsonReader reader = new JsonReader(new FileReader("json_file_path.json"));

            reader.beginArray();
            while (reader.hasNext()) {

                reader.beginObject();
                while (reader.hasNext()) {

                    String name = reader.nextName();

                    if (name.equals("idProducto")) {

                        System.out.println(reader.nextInt());

                    } else if (name.equals("Nombre")) {

                        System.out.println(reader.nextString());

                    } else if (name.equals("Precio")) {

                        System.out.println(reader.nextDouble());

                    } else if (name.equals("Cantidad")) {
                        System.out.println(reader.nextInt());
                    } else {
                        reader.skipValue();
                    }
                }
                reader.endObject();
            }
            reader.endArray();

            reader.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
  

 download http://www.java2s.com/Code/JarDownload/gson/gson-2.2.2.jar.zip 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/43045241)
 Add Jackson databind: 

  <dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.9.0.pr2</version>
</dependency>
  

 Create DTO class with related fields and read JSON file: 

  ObjectMapper objectMapper = new ObjectMapper();
ExampleClass example = objectMapper.readValue(new File("example.json"), ExampleClass.class);
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/15999290)
 You can use jackson library and simply use these 3 lines to convert your json file to Java Object. 

  ObjectMapper mapper = new ObjectMapper();
InputStream is = Test.class.getResourceAsStream("/test.json");
testObj = mapper.readValue(is, Test.class);
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/25352198)
 I think what you mean is your Json strings are stored in a text file and you need to read them in to a Json objects. If that's the case use BufferedReader or Scanner to read the file line by line and parse each line to a Json object using https://code.google.com/p/json-simple/  

 JsonReader is use to Read One Json Object. Use Scanner or BufferedReader to Read File Line By Line as String and then Parse it to a Json Object.Here is  an Example 

  import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class JSONExample{
public static void main(String x[]){
    String FileName="C:\\Users\\Prasad\\Desktop\\JSONExample.txt";
    try {
        ArrayList<JSONObject> jsons=ReadJSON(new File(FileName),"UTF-8");
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (ParseException e) {
        e.printStackTrace();
    }
}
public static synchronized ArrayList<JSONObject> ReadJSON(File MyFile,String Encoding) throws FileNotFoundException, ParseException {
    Scanner scn=new Scanner(MyFile,Encoding);
    ArrayList<JSONObject> json=new ArrayList<JSONObject>();
//Reading and Parsing Strings to Json
    while(scn.hasNext()){
        JSONObject obj= (JSONObject) new JSONParser().parse(scn.nextLine());
        json.add(obj);
    }
//Here Printing Json Objects
    for(JSONObject obj : json){
        System.out.println((String)obj.get("id_user")+" : "+(String)obj.get("level")+" : "+(String)obj.get("text"));
    }
    return json;
}

}
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/24342377)
  Results  is not a  JSONArray  but a  JSONObject : 

  JSONObject results = json.getJSONObject("food");
String name = results.getString("name");
JSONObject details = results.getJSONObject("details");
String price = details.getString("price");
  

 You can read more about JSON at http://json.org. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/34923247)
 running code.  

  import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

    public class Test {

        public static void main(String[] args) throws FileNotFoundException, IOException, ParseException {

             JSONParser parser = new JSONParser();
              Object obj = parser.parse(new FileReader("/home/stpl/NIKHIL/text.json"));
              JSONArray array = (JSONArray) obj;
              for(int i = 0; i < array.size(); i++)
              {
                 JSONObject objects = (JSONObject)array.get(i);
                 System.out.println(objects.get("Submission ID")+" "+objects.get("Lat")+" "+objects.get("Long"));
              }   
        }
    } 
  

 my text.json  

  [{
 "Submission ID": "9938306",
 "Lat": "17.447191666666665",
 "Long": "78.38849"
 },
 {
  "Submission ID": "9938306",
 "Lat": "17.447191666666665",
 "Long": "78.38849"
}]
  



