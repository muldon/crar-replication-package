Query: How do I get the primary key of any JPA entity?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/3884258)
 
   Reason for that is to get an attached copy of detached entity: 
 

 Why don't you just use http://download.oracle.com/javaee/6/api/javax/persistence/EntityManager.html#merge%28T%29?? 

  MyEntity detached = ...
MyEntity attached = em.merge(detached);
  

  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/3883753)
 Perhaps this will work: 

  em.getEntityManagerFactory().getPersistenceUnitUtil().getIdentifier(obj);
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/3328953)
 Read an article about http://www.ibm.com/developerworks/java/library/j-genericdao.html. 

 I don't clearly understand your problem, but if you want to get entity id - just get it. Its available after persist method is complete i.e.  

  em.persist(entity);
et.commit();
int id = entity.getId()
  

 I usually make a class  AbstractEntity  with field  id  and its accessors and inherit all my other entities from this class.  

 The only problem with this approach is that if you'll need to make any of your entities Serializable, you'll have to make  AbstractEntity  serializable i.e. all other entities will become serializable. Otherwise field  id  will not be serialized in the entity which should be serializable. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3335062)
 This functionality was added in JPA 2.0.   

  Object id = entityManagerFactory.getPersistenceUnitUtil().getIdentifier(entity);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/3820974)
 I guess your  entity_property  has a composite key  (entity_id, name)  where  entity_id  is a foreign key to  entity . If so, you can map it as follows: 

  @Embeddable
public class EntityPropertyPK {
    @Column(name = "name")
    private String name;

    @ManyToOne
    @JoinColumn(name = "entity_id")
    private Entity entity;

    ...
}

@Entity 
@Table(name="entity_property") 
public class EntityProperty { 
    @EmbeddedId
    private EntityPropertyPK id;

    @Column(name = "value")
    private String value; 

    ...
}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/46073932)
 Another way of fetching entity ID is: 

  Session session = entityManager.unwrap(Session.class);
Object entityId = session.getId(entity);
  

 This approach uses   extractPrimaryKeyFromObject()   method from  ObjectBuilder  class.  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/21398886)
 http://download.oracle.com/otndocs/jcp/persistence-2.0-fr-eval-oth-JSpec/ 

 
 Entity class must be annotated with the  Entity  annotation. 
 Entity class must have a no-arg constructor. 
 Entity class must not be final 
 Entity class must implement the  Serializable  interfaces. 
 Entity class must have a unique, immutable  ID  
 

 Otherwise, you cannot. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/3820938)
 If there is a one to one mapping between entity and entity_property you can use entity_id as the identifier. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/3820935)
 I guess you can use http://docs.jboss.org/hibernate/core/3.5/api/org/hibernate/annotations/CollectionOfElements.html (for hibernate/jpa 1) / http://download.oracle.com/javaee/6/api/javax/persistence/ElementCollection.html (jpa 2) to map a collection of "entity properties" to a  List  in  entity . 

 You can create the  EntityProperty  type and annotate it with  @Embeddable  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/3328918)
 The common interface approach is what I use and it works fine.  Using pure JPA I don't see a way of getting the identifier. 

 Have a look at  merge() .  I've not used it much myself but I think  

 Hibernate has ways of doing this  

  Serializable id = session.getIdentifier(entity);
  

 But this is not JPA standard. 



