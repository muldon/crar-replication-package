Query: Change a string of integers separated by spaces to a list of int
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/19557475)
 No need to worry, because python provide split() function to change string into a list. 

  x='1 2 3 4 67 8 9'
x.split()
  

 
   ['1', '2', '3', '4', '67', '8'] 
 

 or if you want output in integer form then you can use map function 

  map(int ,x.split(' '))
  

 
   [1, 2, 3, 4, 67, 8] 
 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19555487)
 You can use a list comprehension in combination with the http://docs.python.org/2/library/string.html method: 

  x = [int(i) for i in x.split()]
  

 Alternatively you can use  map  aswell: 

  x = list(map(int, x.split()))
  

 This will create a  list  of  int 's if you want integers. 

 or just use  .split()  for a list of strings: 

  x = x.split()
  

 If you want to create a list of  str  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19555947)
 A simple line can be... 

  print (map(int, x.split()))  
  

 As some one wisely corrected me, in python >=3, it shall become, 

  print(list(map(int,x.split())))  
  

 It can also be user in earlier versions. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/28175921)
 You need to split on the delimiter not the newline: 

  var_array += map(int, line.strip().split())
  

 If they are separated by empty spaces just split, if each number is separated by a  ,  use  split(",")  etc.. 

 If they are all on individual lines just use a list comp and cast as int: 

  with open("IntegerArray.txt") as my_file:
        var_array = [int(line.rstrip()) for line in my_file]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/33433776)
 Just use  split ,  int , and a simple list comprehension. 

  In [1]: s = "0,1,2"

In [2]: t = s.split(",")

In [3]: t
Out[3]: ['0', '1', '2']

In [4]: v = [int(u) for u in t]

In [5]: v
Out[5]: [0, 1, 2]
  

  

  In [7]: v = [int(u) for u in s.split(",")]; v
Out[7]: [0, 1, 2]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/959425)
 I'm not sure I understood your problem very well, it seems you want to parse two int separated from a space. 

  

  s = raw_input('Insert 2 integers separated by a space: ')
a,b = [int(i) for i in s.split(' ')]
print a*b
  

  

  s = raw_input('Insert 2 integers separated by a space: ')
  

 raw_input takes everything you type (until you press enter) and returns it as a string, so: 

  >>> raw_input('Insert 2 integers separated by a space: ')
Insert 2 integers separated by a space: 10 12
'10 12'
  

 In s you have now '10 12', the two int are separated by a space, we split the string at the space with 

  >>> s.split(' ')
['10', '12']
  

 now you have a list of strings, you want to convert them in int, so: 

  >>> [int(i) for i in s.split(' ')]
[10, 12]
  

 then you assign each member of the list to a variable (a and b) and then you do the product a*b 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/29354615)
  s = input('Gimme numbers! ') # '1 2 3'
s = list(map(int, s.split()))
print(s) # [1, 2, 3]
  

 This generates a list of strings which contain the numbers ( s.split(' ') ), which are in turn converted to ints by the map. 

 Finally, to sort the list, use  sort(s) . 

 Edit: as stated in the https://docs.python.org/3.4/library/stdtypes.html#str.split, using  split(sep=' ')  would throw an exception if some numbers were separated by two spaces, because in that case an empty string would be generated by the split ( '1  2'.split(' ') == ['1', '', '2'] ), and the  int()  would fail to convert it. 

 Thanks to Padraic Cunningham for pointing this out! 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/47872317)
 You are trying to turn a  string  with  spaces  in it, into an  integer . 

 What you want to do is use the  split  method (here, it would be  items.split(' ') , that will return a  list  of strings, containing numbers, without any space this time. You will then iterate through this list, convert each element to an  int  as you are already trying to do. 

 . :) 

 

 Here is a short code example, with more pythonic methods to achieve what you are trying to do. 

  # The `with` statement is the proper way to open a file.
# It opens the file, and closes it accordingly when you leave it.
with open('foo.txt', 'r') as file:
    # You can directly iterate your lines through the file.
    for line in file:
        # You want a new sum number for each line.
        sum_2 = 0
        # Creating your list of numbers from your string.
        lineNumbers = line.split(' ')
        for number in lineNumbers:
            # Casting EACH number that is still a string to an integer...
            sum_2 += int(number) ** 2
        print 'For this line, the sum of the squares is {}.'.format(sum_2)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/28337811)
  

  >>> import re
>>> I='bar 1 15 foo 163 132 foo bar'
>>> [int(i) for i in I.split() if re.match(r'^\d+$', i)]
[1, 15, 163, 132]
  

    

  >>> I='bar 1 15 foo 163 132 foo bar'
>>> [int(i) for i in I.split() if i.isdigit()]
[1, 15, 163, 132]
  

  i.isdigit()  returns true only for the strings which contain only digits. 



