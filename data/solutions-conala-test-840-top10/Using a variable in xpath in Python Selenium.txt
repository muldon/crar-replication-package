Query: Using a variable in xpath in Python Selenium
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51240445)
 Use string formatting. Put a placeholder into the xpath string and fill it with a variable value: 

  name_list = ["Kate", "David"]

for name in name_list:
    xpath = "//*[contains(text(),'{}')]".format(name)  
    driver.find_element_by_xpath(xpath).click()
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/23111752)
 Use https://docs.python.org/2/library/stdtypes.html#string-formatting-operations. Put a placeholder  %s  into the xpath string and fill it with a variable value: 

  xpath = "//label[contains(text(),'%s')]/.." % newrooomtime
box = driver.find_element_by_xpath(xpath)
  

  

  >>> newrooomtime = 'Room 228 1:00 AM'
>>> xpath = "//label[contains(text(),'%s')]/.." % newrooomtime
>>> xpath
"//label[contains(text(),'Room 228 1:00 AM')]/.."
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/29528328)
 The reason the xpath doesn't work is due to two reasons:  

 
 In python the selenium xpath method doesn't support '/text()' in the xpath statement. I think you can use it as a condition to select the DOM element but not to return the text. 
 The xpath is too broad for your use case. You need to deselect the children from the parent div. 
 

 However, we can try to get the individual text without changing your code like this: 

      val =
    self.driver.find_element_by_xpath('//div[@id="description"]').get_attribute('textContent')
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/53737788)
 It is not clear from the question how the method  get_data()  is defined. 

 However, to extract the  pageID  you can use  find_element_by_xpath()  along with https://seleniumhq.github.io/selenium/docs/api/py/webdriver_remote/selenium.webdriver.remote.webelement.html#selenium.webdriver.remote.webelement.WebElement.get_attribute method as follows: 

  pageID = driver.find_element_by_xpath("//meta[@property='og:url']").get_attribute("content")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/11535349)
 To read this table using selenium webdriver, xpath seems to be the easy way -  

 I'm do not know python properly so the code might be wrong but the idea seems to be right  -  

 To find out the number of div tags with in the  general_table  we use the xpath -  

  driver.find_elements_by_xpath(("//*[@class='general_table']/div")  which will return a List with  size -  6 . 

 Then you can loop through each of the elements using a loop -  

  for(int i=1;i<=list.length;i++){
    String text1 = driver.find_element_by_xpath("//*[@class='general_table']/div["+i+"]/div[1]").text;
    String text2 = driver.find_element_by_xpath("//*[@class='general_table']/div["+i+"]/div[2]").text;
}
  

 You can read all the tags in the table by this way.  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/44458062)
 In  selenium   find_element_by_xpath()  method should return  WebElement , but not text content. 

 Try to replace  

  xval = driver.find_element_by_xpath('.div/text()')
  

  

  xval = driver.find_element_by_xpath('./div').text
  

 Also note that you should use  ./div  instead of  .div  to match  div  that is direct child of current element 

  Update  

 If your loop make no iteration try to wait until required  div  appears in  DOM  as it might be generated dynamically: 

  from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

WebDriverWait(driver, 10).until(EC.presence_of_element_located((By. XPATH, "//div[@class="one" and ./ul/li])))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/49411281)
 You have to format your string to put inside  i  value: 

  for i in range(2,21):
    un = browser.find_element_by_xpath("(//div[@class='cname'])[{0}]".format(i)).text
    print(un)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/51637910)
 you can try with this  xpath  :   

  wait = WebDriverWait(driver,30)
wait.until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(),'Click This') and @class='b1']"))).click()
  

 Note that you will have to import :   

  from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC 
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/36617668)
 Use below:- 

  arrow = driver.find_element_by_xpath('//div[@id="abc" and @class="xyz"]')
arrow.click()
  

  



