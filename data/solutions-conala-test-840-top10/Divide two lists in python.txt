Query: Divide two lists in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/16418478)
 Use  zip  and a list comprehension: 

  >>> a = [3,6,8,65,3]
>>> b = [34,2,5,3,5]
>>> [(x*1.0)/y for x, y in zip(a, b)]
[0.08823529411764706, 3.0, 1.6, 21.666666666666668, 0.6]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/16418471)
 You can do this using list comprehension (element by element): 

  div = [ai/bi for ai,bi in zip(a,b)]
  

 Note that if you want float division, you need to specify this (or make the original values floats): 

  fdiv = [float(ai)/bi for ai,bi in zip(a,b)]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/16418739)
 The built-in http://docs.python.org/2.7/library/functions.html#map function makes short work of these kinds of problems: 

  >>> from operator import truediv
>>> a=[3,6,8,65,3]
>>> b=[34,2,5,3,5]
>>> map(truediv, a, b)
[0.08823529411764706, 3.0, 1.6, 21.666666666666668, 0.6]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/17831668)
 Use https://stackoverflow.com/q/509211/190597: 

  a = ['name', '2', 3, 4, 5, 'a', 'b', 'c', 'd', 10, 4, 'lol', '3']
n = len(a)
print(n)
mid = n // 2
list1, list2 = a[:mid], a[mid:]
print(list1)
print(list2)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/11840146)
  d1 = { 'a':12 , 'b':10 , 'c':2 }
d2 = { 'a':0 , 'c':2 , 'b':5}
d3={x:float(d2[x])/d1[x] for x in d1}
print d3
  

  output:  

  {'a': 0.0, 'c': 1.0, 'b': 0.5}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/30725494)
 Zip the two lists and use a list comprehension: 

  from __future__ import division   # in python2 only
result = [[x/y for x,y in zip(xs, ys)] for xs, ys in zip(a, b)]
  

 

  

  In [1]: a = [[1, 0, 2], [0, 0, 0], [1], [1]]
   ...: b = [[5, 6, 4], [6, 6, 6], [3], [3]]
   ...: 

In [2]: result = [[x/y for x,y in zip(xs, ys)] for xs, ys in zip(a, b)]

In [3]: result
Out[3]: [[0.2, 0.0, 0.5], [0.0, 0.0, 0.0], [0.3333333333333333], [0.3333333333333333]]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/32308463)
 If you want to record the divisions by zero as  NaN  then you could use your own custom division function as follows: 

  import numpy as np

def divide(a, b):
    if b == 0:
        return np.nan
    else: 
        return a/b

list1 = [1, 2, 3]
list2 = [1, 0, 2]
result_list = map(divide, [i for i in list1], [j for j in list2])
  



