Query: Get HTML Source of WebElement in Selenium WebDriver using Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/36295375)
 Java with Selenium 2.53.0 

  driver.getPageSource();
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/15531471)
 Sure we can get all HTML source code with this script below in Selenium Python: 

  elem = driver.find_element_by_xpath("//*")
source_code = elem.get_attribute("outerHTML")
  

  

  f = open('c:/html_source_code.html', 'w')
f.write(source_code.encode('utf-8'))
f.close()
  

 I suggest saving to a file because source code is very very long. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/8575709)
 You can read  innerHTML  attribute to get source of the  content  of the element or  outerHTML  for source  with  the current element. 

 Python: 

  element.get_attribute('innerHTML')
  

 Java: 

  elem.getAttribute("innerHTML");
  

  

  element.GetAttribute("innerHTML");
  

  

  element.attribute("innerHTML")
  

  

  element.getAttribute('innerHTML');
  

  

  $elem.getAttribute('innerHTML');
  

 Tested and works with the  ChromeDriver . 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/16024599)
 In Ruby, using selenium-webdriver (2.32.1), there is a  page_source  method that contains the entire page source. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/22227980)
 . The crect way to do it in your case: 

  elem = wd.find_element_by_css_select('#my-id')
html = wd.execute_script("return arguments[0].innerHTML;", elem)
  

  

  html = elem.get_attribute('innerHTML')
  

 Both are wking f me (selenium-server-standalone-2.35.0) 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/7290968)
 There is not really a straight-forward way of getting the html source code of a webelement. You will have to use JS. I am not too sure about python bindings but you can easily do like this in Java. I am sure there must be something similar to  JavascriptExecutor  class in Python. 

   WebElement element = driver.findElement(By.id("foo"));
 String contents = (String)((JavascriptExecutor)driver).executeScript("return arguments[0].innerHTML;", element); 
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/7335513)
 I hope this could help:
http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html 

 Here is described Java method: 

  java.lang.String    getText() 
  

 But unfortunately it's not available in Python. So you can translate the method names to Python from Java and try another logic using present methods without getting the whole page source... 

 E.g. 

   my_id = elem[0].get_attribute('my-id')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/8316622)
 It's not possible to get the raw HTML from a  WebElement . 

 You can get the page source from the browser object though:  browser.page_source . 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/52235344)
 For python with input-field is like: 

  nowText = driver.find_element_by_id("source").get_attribute("value")
print(nowText)
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/27844692)
 To type a value into a WebElement, use the Selenium WebDriver method  send_keys : 

  element = self.driver.find_element_by_class_name('android.widget.EditText')
element.send_keys('qwerty')
  

 See the http://selenium-python.readthedocs.org/en/latest/api.html?highlight=send_keys#selenium.webdriver.remote.webelement.WebElement.send_keys for more details. 



