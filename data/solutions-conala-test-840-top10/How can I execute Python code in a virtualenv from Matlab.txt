Query: How can I execute Python code in a virtualenv from Matlab
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9071047)
 
    Seems to be not an answer, but still might be useful in other contexts.  
 

 Have you tried running  bin/activate_this.py  from your Python virtualenv? The comment in this file of my virtualenv reads: 

 
   By using  execfile(this_file, dict(__file__=this_file))  you will
  activate this virtualenv environment. 
  
   This can be used when you must use an existing Python interpreter, not
  the virtualenv  bin/python  
 

 You should achieve the desired result if you execute the runtime equivalent of the above code. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/39538066)
 You can either modify the  PATH  environment variable in MATLAB prior to calling python from MATLAB 

<pre class="lang-matlab prettyprint-override"> % Modify the system PATH so it finds the python executable in your venv first
setenv('PATH', ['/path/to/my/venv/bin', pathsep, getenv('PATH')])

% Call your python script
system('python myscript.py')
  

 Or the better way would be to specify the full path to the python binary 

  system('/path/to/my/venv/bin/python myscript.py')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/24015479)
 When changing the environment location we must execute  virtualenv  on the new folder.
When looking to activate file I have found this code : 

  VIRTUAL_ENV="/old/folder"
export VIRTUAL_ENV
  

 This variable will updated when we execute  virtualenv  on the new folder. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/44119962)
 I found that @dikobraz's answer did not work for me on mac OSX venvs because even after setting  PythonProgName , the prefix and then  PythonHome  were still incorrectly set to system python directories. 

   

  if (auto venv_path = std::getenv("VIRTUAL_ENV")) {
    setenv("PYTHONHOME", venv_path, true);
}
  

 before running  Py_Initialize() . 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/43928866)
  .env file in the root directory of your virtualenv and store your variables. I use it for django in this manner: 

  EMAIL_HOST_PASSWORD='some_password'
DJANGO_DEBUG=True
SECRET_KEY='a_complex_key'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/43935086)
  .double form matlab which is not define, I think you need to  import matlab  as well, from https://www.mathworks.com/help/compiler_sdk/python/matlab-arrays-as-python-variables.html. P/s: I did not use matlab before 

  import matlab.engine
import matlab
eng = matlab.engine.start_matlab()
a = matlab.double([1,4,9,16,25])
b = eng.sqrt(a)
print(b)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/31097467)
 Matlab comes with it's own python Installation which is located in your Matlab installation directory. There these 3rd party libraries are probably not installed.  

 Go to the python folder inside the Matlab installation directory, search for pip and use it to install the libraries you need.  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/29292576)
 MATLAB code detailed below 

 
 I saved the workspace using MATLAB's save function 
 Used MATLAB's system() function to execute the python script.  
 Within python, used scipy.iosavemat to save variables I wanted to access in matlab 
  Used MATLAB's load function to load the variables from python back into matlab's workspace 

  writeto=['insert path to save to here']
save(writeto)
first_Pypath=['insert path of python script here']
py_call=horzcat('python ',first_Pypath);
system(py_call);
   
 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/43935264)
 According to https://nl.mathworks.com/help/matlab/matlab_external/get-started-with-matlab-engine-for-python.html 

 The function Double is contained in the package matlab and not matlab.engine. Have you tried just importing the package matlab? 

  import matlab
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/12333019)
 You define the dependent module inside the setup.py of your own package with the "install_requires" option.  

 If your package needs to have some console script generated then you can use the "console_scripts" entry point in order to generate a wrapper script that will be placed
within the 'bin' folder (e.g. of your virtualenv environment). 



