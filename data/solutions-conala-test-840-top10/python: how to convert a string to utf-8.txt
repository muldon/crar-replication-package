Query: python: how to convert a string to utf-8
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/4182757)
 If I understand you correctly, you have a utf-8 encoded byte-string in your code. 

 Converting a byte-string to a unicode string is known as decoding (unicode -> byte-string is encoding). 

 You do that by using the http://docs.python.org/library/functions.html#unicode function or the http://docs.python.org/library/stdtypes.html#str.decode method.  

  unicodestr = unicode(bytestr, encoding)
unicodestr = unicode(bytestr, "utf-8")
  

  

  unicodestr = bytestr.decode(encoding)
unicodestr = bytestr.decode("utf-8")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19230566)
 If the methods above don't work, you can also tell Python to ignore portions of a string that it can't convert to utf-8: 

  stringnamehere.decode('utf-8', 'ignore')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/14443797)
 To decode a byte sequence from latin 1 to Unicode, use the http://docs.python.org/2/library/stdtypes.html#str.decode: 

  >>> '\xe9'.decode('latin1')
u'\xe9'
  

 Python uses  \xab  escapes for unicode codepoints below  \u00ff .  

  >>> '\xe9'.decode('latin1') == u'\u00e9'
True
  

 The above Latin-1 character can be encoded to UTF-8 as: 

  >>> '\xe9'.decode('latin1').encode('utf8')
'\xc3\xa9'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/23104460)
 in python2, try this to convert your unicode string: 

  >>> s.encode('latin-1').decode('gbk')
u"<script language=javascript>alert('\u8bf7\u8f93\u5165\u6b63\u786e\u9a8c\u8bc1\u7801,\u8c22\u8c22!');location='index.asp';</script></script>"
  

 then you can encode to utf-8 as you wish. 

  >>> s.encode('latin-1').decode('gbk').encode('utf-8')
"<script language=javascript>alert('\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe6\xad\xa3\xe7\xa1\xae\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81,\xe8\xb0\xa2\xe8\xb0\xa2!');location='index.asp';</script></script>"
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27205998)
 Might be a bit overkill, but when I work with ascii and unicode in same files, repeating decode can be a pain, this is what I use: 

  def make_unicode(input):
    if type(input) != unicode:
        input =  input.decode('utf-8')
        return input
    else:
        return input
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/4299827)
 Can you provide more details about what you are trying to do? In general, if you have a unicode string, you can use encode to convert it into string with appropriate encoding.  

  >>> a = u"\u00E1"
>>> type(a)
<type 'unicode'>
>>> a.encode('utf-8')
'\xc3\xa1'
>>> a.encode('latin-1')
'\xe1'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/4182635)
  >>> plain_string = "Hi!"
>>> unicode_string = u"Hi!"
>>> type(plain_string), type(unicode_string)
(<type 'str'>, <type 'unicode'>)
  

 ^ This is the difference between a byte string (plain_string) and a unicode string. 

  >>> s = "Hello!"
>>> u = unicode(s, "utf-8")
  

 ^ Converting to unicode and specifying the encoding. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/22615366)
 This is not utf-8: 

  print txt.decode('iso8859-1')
Out[14]: m√©dico
  

 If you want utf-8 string, use: 

  txt.decode('iso8859-1').encode('utf-8')
Out[15]: 'm\xc3\xa9dico'
  



