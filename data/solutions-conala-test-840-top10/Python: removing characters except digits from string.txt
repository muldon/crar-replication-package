Query: Python: removing characters except digits from string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1450905)
 Use a generator expression: 

  >>> s = "foo200bar"
>>> new_s = "".join(i for i in s if i in "0123456789")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/1450907)
 Ugly but works: 

  >>> s
'aaa12333bb445bb54b5b52'
>>> a = ''.join(filter(lambda x : x.isdigit(), s))
>>> a
'1233344554552'
>>>
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/39235227)
 You can easily do it using Regex 

  >>> import re
>>> re.sub("\D","","Â£70,000")
70000
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/15202183)
  x.translate(None, string.digits)
  

 will delete all digits from string. To delete letters and keep the digits, do this: 

  x.translate(None, string.letters)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/1450912)
 You can use filter: 

  filter(lambda x: x.isdigit(), "dasdasd2313dsa")
  

 On python3.0 you have to join this (kinda ugly :( ) 

  ''.join(filter(lambda x: x.isdigit(), "dasdasd2313dsa"))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/34429225)
  import re
s1=re.sub(r"[^0-9 ]"," ",s)
  

 You can use  re  here. 

   .  of floating numbers use 

  (?!(?<=\d)\.(?=\d))[^0-9 ]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/34429353)
 Instead of using a regular expression, you could simply use a list comprehension: 

  >>> s='das dad 67 8 - 11 2928  313'
>>> ''.join([c if c.isdigit() else ' ' for c in s])
'        67 8   11 2928  313'
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/1450900)
 Use  re.sub , like so: 

  >>> import re
>>> re.sub("\D", "", "aas30dsa20")
'3020'
  

  \D  matches any non-digit character so, the code above, is essentially replacing every non-digit character for the empty string. 

 Or you can use  filter , like so (in Python 2k): 

  >>> filter(lambda x: x.isdigit(), "aas30dsa20")
'3020'
  

 Since in Python 3k,  filter  returns an iterator instead of a  list , you can use the following instead: 

  >>> ''.join(filter(lambda x: x.isdigit(), "aas30dsa20"))
'3020'
  



