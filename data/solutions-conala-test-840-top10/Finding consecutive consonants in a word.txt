Query: Finding consecutive consonants in a word
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/27748492)
 Use regular expressions from https://docs.python.org/2/library/re.html built-in module: 

  import re

def find_consonants(string):
    # find all non-vovels occuring 1 or more times: 
    return re.findall(r'[^aeiou]+', string)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/27746477)
 Not that I'd recommend it for readability, but a one-line solution is: 

  In [250]: q = "concertation"
In [251]: [s for s in ''.join([l if l not in 'aeiou' else ' ' for l in q]).split()]
Out[251]: ['c', 'nc', 'rt', 't', 'n']
  

 That is: join the non-vowels with spaces and split again on whitespace. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/27745028)
 If you are up for a non-regex solution,  itertools.groupby  would work perfectly fine here, like this 

  >>> from itertools import groupby
>>> is_vowel = lambda char: char in "aAeEiIoOuU"
>>> def suiteConsonnes(in_str):
...     return ["".join(g) for v, g in groupby(in_str, key=is_vowel) if not v]
... 
>>> suiteConsonnes("concertation")
['c', 'nc', 'rt', 't', 'n']
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/27748687)
 Although I think you should go with @nu11p01n73R's answer, this will also work: 

  re.sub('[AaEeIiOoUu]+',' ','concertation').split()
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27745507)
 A really, really simple solution without importing anything is to replace the vowels with a single thing, then split on that thing: 

  def SuiteConsonnes(mot):
    consonnes = ''.join([l if l not in "aeiou" else "0" for l in mot])
    return [c for c in consonnes.split("0") if c is not '']
  

 To keep it really similar to your code - and to add generators - we get this: 

  def SuiteConsonnes(mot):
    consonnes=[]
    for x in mot:
        if x in "bcdfghjklmnprstvyz":
            consonnes.append(x)
        elif consonnes:
            yield ''.join(consonnes)
            consonnes = []
    if consonnes: yield ''.join(consonnes)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/27744910)
 You could do this with regular expressions and the  re  module's  split  function: 

  >>> import re
>>> re.split(r"[aeiou]+", "concertation", flags=re.I)
['c', 'nc', 'rt', 't', 'n']
  

 This method splits the string whenever one or more consecutive vowels are matched.  

 To explain the regular expression  "[aeiou]+" : here the vowels have been collected into a class  [aeiou]  while the  +  indicates that one or more occurrence of any character in this class can be matched. Hence the string  "concertation"  is split at  o ,  e ,  a  and  io . 

 The  re.I  flag means that the case of the letters will be ignored, effectively making the character class equal to  [aAeEiIoOuU] . 

  Edit : One thing to keep in mind is that this method implicitly assumes that the word contains only vowels and consonants. Numbers and punctuation will be treated as non-vowels/consonants. To match  only  consecutive consonants, instead use  re.findall  with the consonants listed in the character class (as noted in other answers). 

 One useful shortcut to typing out all the consonants is to use the third-party https://pypi.python.org/pypi/regex module instead of  re . 

 This module supports set operations, so the character class containing the consonants can be neatly written as the entire alphabet minus the vowels: 

  [[a-z]--[aeiou]] # equal to [bcdefghjklmnpqrstvwxyz]
  

 Where  [a-z]  is the entire alphabet,  --  is set difference and  [aeiou]  are the vowels. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/52482918)
 I would iterate through the letters keeping track of the vowels and consonants, and then use join at the end. 

  def encrypt_sentence(sentence):
    vowel_set = set("aeiouAEIOU")
    final_list=[]
    word=sentence.split()
    for i in range(0,len(word)):
        if((i%2)==0):
            final_list.append(word[i][::-1])
        else:  # do rearrangement
            vowels = list()
            consonants = list()
            for letter in word[i]:
                if letter in vowel_set:
                    vowels.append(letter)
                else:
                    consonants.append(letter)
            new_string = "".join(consonants) + "".join(vowels)
            final_list.append(new_string)
    return final_list
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/9798146)
 http://docs.python.org/library/itertools.html#itertools.product to the rescue: 

  >>> import itertools
>>> consonants = "bcdfghjklmnpqrstvwxyz"
>>> vowels = "aeiou"
>>> poss = list(itertools.product(consonants, vowels, consonants))
>>> len(poss)
2205
>>> poss[:10]
[('b', 'a', 'b'), ('b', 'a', 'c'), ('b', 'a', 'd'), ('b', 'a', 'f'), ('b', 'a', 'g'), ('b', 'a', 'h'), ('b', 'a', 'j'), ('b', 'a', 'k'), ('b', 'a', 'l'), ('b', 'a', 'm')]
  

 or if you want words specifically: 

  >>> words = list(''.join(letters) for letters in itertools.product(consonants, vowels, consonants))
>>> words[:10]
['bab', 'bac', 'bad', 'baf', 'bag', 'bah', 'baj', 'bak', 'bal', 'bam']
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/49917606)
 This is a solution which counts consonants and vowels, while excluding punctuation explicitly. 

  from string import punctuation

x = 'This is an example sentence.'

table = str.maketrans('', '', punctuation)
x = x.translate(table).lower().replace(' ', '')
vowels = set('aeiou')

consonants = sum(i not in vowels for i in x)
vowels = sum(i in vowels for i in x)

print(consonants)  # 14
print(vowels)      # 9
  



