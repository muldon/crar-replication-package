Query: How do I turn a python datetime into a string, with readable format date?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51262245)
 Using f-strings, in Python 3.6+. 

  from datetime import datetime

date_string = f'{datetime.now():%Y-%m-%d %H:%M:%S%z}'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/7679323)
  from datetime import datetime
print datetime.strptime(timestring, '%Y-%m-%dT%H:%M:%SZ')
  

 it's in http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/50449617)
 Python datetime object has a method attribute, which prints in readable format. 

  >>> a = datetime.now()
>>> a.ctime()
'Mon May 21 18:35:18 2018'
>>> 
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/2158454)
 The datetime class has a method strftime. The Python docs documents the different formats it accepts: 

 
 Python 2: https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior 
 Python 3: <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior"  
 

 For this specific example, it would look something like: 

  my_datetime.strftime("%B %d, %Y")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/51873241)
<pre class="lang-python prettyprint-override"> timestamp ="124542124"
value = datetime.datetime.fromtimestamp(timestamp)
exct_time = value.strftime('%d %B %Y %H:%M:%S')
  

 Get the readable date from timestamp with time also, also you can change the format of the date. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/44315462)
 I'd use https://pypi.python.org/pypi/parsedatetime to parse the string, and then use  datetime  to format it: 

  import parsedatetime
cal = parsedatetime.Calendar()
parsed = cal.parseDT('Tue May 16 04:10:55 PDT 2017')
formatted = parsed[0].strftime('%Y-%m-%d')
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50088451)
 Create  datetime.datetime  object from your string via  datetime.strptime , then turn it back into a string with its  strftime  method. 

  >>> from datetime import datetime
>>> s = "2018-04-27T23:59:18Z"
>>> datetime.strptime(s, '%Y-%m-%dT%XZ').strftime('%m-%d-%Y %X')
>>> '04-27-2018 23:59:18'
  

 https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior 

 (Depending on you locale you might have to use  %H ,  %M  and  %S  instead of  %X .) 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/2158364)
 Read https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime from the official docs. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/44331760)
 The built-in  dateutil.parser  can parse the text into a datetime object: 

  import dateutil.parser

datestr = 'Tue May 16 04:10:55 PDT 2017'
print dateutil.parser.parse(datestr)
  

 This will print 

  2017-05-16 04:10:55
  

 To get this into  yyyy-mm-dd , you can use the  strftime  method of a datetime object: 

  print dateutil.parser.parse(datestr).strftime('%Y-%m-%d')
  

 This will print 

  2017-05-16
  



