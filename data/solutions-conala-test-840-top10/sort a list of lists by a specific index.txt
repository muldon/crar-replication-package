Query: sort a list of lists by a specific index
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/21146286)
 You want to use the  key  argument in  list.sort : 

  import operator
mylist = [[2, 5, 3],
          [2, 4, 9],
          [0, 9, 1],
          [1, 1, 1],
          [4, 7, 5]]

mylist.sort(key=operator.itemgetter(1))
  

 Output: 

  >>> mylist = [[2, 5, 3],
...           [2, 4, 9],
...           [0, 9, 1],
...           [1, 1, 1],
...           [4, 7, 5]]
>>> 
>>> mylist.sort(key=operator.itemgetter(1))
>>> mylist
[[1, 1, 1], [2, 4, 9], [2, 5, 3], [4, 7, 5], [0, 9, 1]]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/50947068)
  array.sort(key = lambda x:x[1])
  

 You can easily sort using this snippet, where 1 is the index of the element. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1815290)
 For the sort, you should use itemgetter 

  >>> import operator
>>> L = [('ba',4), ('hh',5), ('gg', 25)]
>>> sorted(L, key=operator.itemgetter(1))
[('ba', 4), ('hh', 5), ('gg', 25)]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/1815271)
 to sort the list u can use a custom sort method some thing like this 

  x = [('ba',4), ('hh',5), ('gg', 25)]

def sortMethod(x,y):
    if x[1] < y[1]:return 1
    elif x[1] > y[1]:return -1
    else: return 0


print x         #unsorted
x.sort(sortMethod)
print x         #sorted
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/30260857)
 You could use  sorted()  on a slice and then assign the result back to the slice: 

  al[2:] = sorted(al[2:])
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/1815274)
 First of, don't use  list  as the name for a variable, as it shadows the built-in http://docs.python.org/3.1/library/functions.html#list function. 

 
  You can use http://docs.python.org/3.1/library/functions.html#enumerate to pair up list elements and their index: 

  >>> l = [('ba',4), ('hh',5), ('gg', 25)]
>>> [i for i, e in enumerate(l) if e[0] == 'hh']
[1]
   
  For sorting you can use a  lambda  expression as shown by others, or you can pass an http://docs.python.org/3.1/library/operator.html#operator.itemgetter as the  key  argument to http://docs.python.org/3.1/library/functions.html#sorted: 

  >>> from operator import itemgetter
>>> sorted(l, key=itemgetter(1))
[('ba', 4), ('hh', 5), ('gg', 25)]
   
  In-place sorting is also possible, using the http://docs.python.org/3.1/library/stdtypes.html#mutable-sequence-types method on lists: 

  >>> l.sort(key=itemgetter(1))
   
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/15544861)
 Itemgetter lets you to sort by multiple criteria / columns: 

  sorted_list = sorted(list_to_sort, key=itemgetter(2,0,1))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/40358211)
 You can flatten the list and then use it to sort and find indices. 

  a = [[5,2],[7,4],[0,3]]
c = reduce(lambda x, y: x+y, a)
b = sorted(c, reverse=True)
for i in b:
    print c.index(i)/2, c.index(i)%2
  

 Output: 

  1 0 
0 0
1 1
2 1
0 1
2 0
  



