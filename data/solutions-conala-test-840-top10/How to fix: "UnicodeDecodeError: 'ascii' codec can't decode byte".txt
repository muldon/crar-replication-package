Query: How to fix: "UnicodeDecodeError: 'ascii' codec can't decode byte"
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/43784318)
 The error occurred because of .encode which works on a unicode object. So we need to convert the byte string to unicode string using        

  .decode('unicode_escape')
  

 So the code will be: 

  #!/usr/bin/env python3.5.2

import urllib.request , urllib.parse


def start(url):
    source_code = urllib.request.urlopen(url).read()
    info = urllib.parse.parse_qs(source_code.decode('unicode_escape'))
    print(info)


start('https://www.youtube.com/watch?v=YfRLJQlpMNw')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49513358)
 replace: 

  dict = cPickle.load(fo)
  

 in  unpickle  function with: 

  dict = cPickle.load(fo, encoding='latin1')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/42940885)
 Since it fails on the encoding of the characters 

 Try using latin 

  cPickle.load(file, encoding='latin1')
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/49131427)
 I was searching to solve the following error message: 

 
   unicodedecodeerror: 'ascii' codec can't decode byte 0xe2 in position 5454: ordinal not in range(128) 
 

 I finally got it fixed by specifying 'encoding': 

  f = open('../glove/glove.6B.100d.txt', encoding="utf-8")
  

 . 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/46573736)
 you could unicode string using this function 

  def _parse_value(value):
    if type(value) == str:
        value = value.decode("utf-8", "ignore").strip()
    return value
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/20673035)
 You use  u"你好".encode('utf8')  to encode an unicode string.
But if you want to represent  "你好" , you should decode it.  

  "你好".decode("utf8")
  

 . Maybe you should learn more about encode & decode. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/22216798)
 The error is because there is some non-ascii character in the dictionary and it can't be encoded/decoded. One simple way to avoid this error is to encode such strings with  encode()  function as follows (if  a  is the string with non-ascii character): 

  a.encode('utf-8').strip()
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/30197931)
 You must be using Python 2.   .encode  can only encode Unicode strings.    .encode  a byte string, Python 2 will implicitly try to  .decode  the byte string to Unicode, using the default  ascii  codec, before using the explicit  .encode('utf-8') . 

  contents  is already a byte string.  If that byte string is encoded in UTF-8, use  .decode('utf-8')  instead to convert it to a Unicode string. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/9644116)
 If you're using Python < 3, you'll need to tell the interpreter that your http://docs.python.org/howto/unicode.html#unicode-literals-in-python-source-code: 

  Python 2.7.2 (default, Jan 14 2012, 23:14:09) 
[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> "你好".encode("utf8")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
>>> u"你好".encode("utf8")
'\xe4\xbd\xa0\xe5\xa5\xbd'
  

  Further reading : http://docs.python.org/howto/unicode.html#unicode-howto. 



