Query: Convert a list of characters into a string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/41700597)
 If the list contains numbers, you can use  map()  with  join() . 

  

      arr = [3, 30, 34, 5, 9]
    ''.join(map(str,arr))

>> 3303459
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/4481731)
 Use the  join  method of the empty string to join all of the strings together with the empty string in between, like so: 

  >>> a = ['a', 'b', 'c', 'd']
>>> ''.join(a)
'abcd'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19724820)
 use  join  with empty separator 

  h = ['a','b','c','d','e','f']
print ''.join(h)
  

 or use  reduce  with  add  operator 

  import operator
h=['a','b','c','d']
reduce(operator.add, h)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/10055869)
 This may be the fastest way: 

  >> from array import array
>> a = ['a','b','c','d']
>> array('B', map(ord,a)).tostring()
'abcd'
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7362985)
 One liner: 

  a = "1a2b3c"
print ''.join(chr(int(a[i] + a[i+1], 16)) for i in xrange(0, len(a), 2))
  

  

  xrange(0, len(a), 2) # gives alternating indecis over the string
a[i] + a[i+1]        # the pair of characters as a string
int(..., 16)         # the string interpreted as a hex number
chr(...)             # the character corresponding to the given hex number
''.join()            # obtain a single string from the sequence of characters
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/18358536)
 The reduce function also works 

  import operator
h=['a','b','c','d']
reduce(operator.add, h)
'abcd'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/2612587)
 You can convert a string to a list of characters by using  list , and to go the other way use  join : 

  >>> s = 'Hello, world!'
>>> l = list(s)
>>> l[7] = 'f'
>>> ''.join(l)
'Hello, forld!'
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/48514749)
 You can convert characters to number with  ord()  and convert numbers to characters with  chr() . A shift function may look like: 

  def shift_string(inString, inOffset):
    return "".join([chr(ord(x) + inOffset) for x in inString])
  

 Accessing array elements from list is left to the reader. ;) 

  Note:  This simple version will probably produce unwanted characters. You may simply use a modulo function to remain in the ASCII range. 

  def shift_string(inString, inOffset):
    return "".join([chr(((ord(x) - ord(' ') + inOffset) % 95) + ord(' ')) for x in inString])
  

 If your set of valid characters is more complex (e.g. letters), you should write a special function for the character transformation. 



