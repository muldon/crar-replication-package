Query: Rename Files
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/642295)
 If you have subdirectories: 

  import os
for dirpath, dirs, files in os.walk(your_path):
    for filename in files:
        if '&' in filename:
            os.rename(
                os.path.join(dirpath, filename),
                os.path.join(dirpath, filename.replace('&', '+'))
            )
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/642087)
  import os
directory = '.'
for file in os.listdir(directory):
    if '&' in file :
        os.rename(file, file.replace('&', '+'))
  

 Replace  directory  with your own path. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/38775435)
 import os
import string
def rename_files(): 

  #List all files in the directory
file_list = os.listdir("/Users/tedfuller/Desktop/prank/")
print(file_list)

#Change current working directory and print out it's location
working_location = os.chdir("/Users/tedfuller/Desktop/prank/")
working_location = os.getcwd()
print(working_location)

#Rename all the files in that directory
for file_name in file_list:
    os.rename(file_name, file_name.translate(str.maketrans("","",string.digits)))
  

 rename_files() 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/17748306)
  import os
import glob
files = glob.glob('year*.jpg')
for file in files:
    os.rename(file, 'year_{}'.format(file.split('_')[1]))
  

 The one line can be broken to: 

  for file in files:
    parts = file.split('_') #[abc, 2000.jpg]
    new_name = 'year_{}'.format(parts[1]) #year_2000.jpg
    os.rename(file, new_name)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/3364913)
 And if you want to do it the python way: 

  import os
os.rename("c:\\Program Files\\Music_Files", "c:\\Program Files\\MusicFiles")
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/4358725)
 To get the new name: 

  >>> re.sub(r'.{20}(.mkv)', r'\1', 'unique12345678901234567890.mkv')
'unique.mkv'
  

  

  >>> 'unique12345678901234567890.mkv'[:-24] + '.mkv'
'unique.mkv'
  

 To rename the file use  os.rename(old, new) : http://docs.python.org/library/os.html#os.rename 

 To get a list of the files to rename use  glob.glob('*.mkv') : http://docs.python.org/library/glob.html#glob.glob 

 Putting that all together we get: 

  for filename in glob.glob('*.mkv'):
    if len(filename) > 24:
        os.rename(filename, filename[:-24] + '.mkv'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/20371910)
 I have this to simply rename all files in subfolders of folder 

  import os

def replace(fpath, old_str, new_str):
    for path, subdirs, files in os.walk(fpath):
        for name in files:
            if(old_str.lower() in name.lower()):
                os.rename(os.path.join(path,name), os.path.join(path,
                                            name.lower().replace(old_str,new_str)))
  

 I am replacing all occurences of old_str with any case by new_str. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/47907553)
 Because I have done something similar today: 

  #!/usr/bin/env python

import os
import sys
import re

if __name__ == "__main__":
    _, indir = sys.argv

    infiles = [f for f in os.listdir(indir) if os.path.isfile(os.path.join(indir, f))]

    for infile in infiles:
        outfile = re.sub(r'abc', r'year' , infile)
        os.rename(os.path.join(indir, infile), os.path.join(indir, outfile))
  



