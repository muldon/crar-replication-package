Query: How do I url encode in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1916740)
 This works for me:     

  #!/usr/bin/env python
# define source file encoding, see: http://www.python.org/dev/peps/pep-0263/
# -*- coding: utf-8 -*-

import urllib
url = u'http://example.com/índice.html'
content = urllib.urlopen(url.encode("UTF-8")).read()
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/4389584)
 Encode the  unicode  to UTF-8, then URL-encode. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/875783)
 Are you looking to encrypt the string or encode it to remove illegal characters for urls?
If the latter, you can use http://docs.python.org/library/urllib.html#quote: 

  >>> quoted = urllib.quote("12234_1_Hello'World_34433_22acb_4554344_accCC44")
>>> quoted
'12234_1_Hello%27World_34433_22acb_4554344_accCC44'

>>> urllib.unquote(quoted)
"12234_1_Hello'World_34433_22acb_4554344_accCC44"
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/38187316)
 When you print  url_input  you get the desired  url_output  only because your terminal underst UTF-8  can represents  \xa3  correctly. 

 You can encode the string in ASCII with  str.encode , but you have to replace (with a  ? ) or ignore the chars that does not are ascii: 

  url_output = url_input.encode("ascii", "replace")
print(url_output)
  

  

  https://www.gumtree.com//p/uk-holiday-rentals/1bedroon-flat-?250pw-all-bills-included-/1174092955
  

  

  url_output = url_input.encode("ascii", "ignore")
print(url_output)
  

  

  https://www.gumtree.com//p/uk-holiday-rentals/1bedroon-flat-250pw-all-bills-included-/1174092955
  

 You can not obtain an output string with a  £  ascii character because the value of this character is greater than 127. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/5399148)
 You are looking for http://docs.python.org/library/urllib.html#urllib.quote. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/26762816)
 Encode the Unicode data to UTF-8, then URL-encode: 

  from urllib import urlencode
import urllib2

params = {'where': 'nexearch', 'query': a.encode('utf8')}
params = urlencode(params)

url = "http://search.naver.com/search.naver?" + params
response = urllib2.urlopen(url)
  

  

  >>> from urllib import urlencode
>>> a = u"바둑"
>>> params = {'where': 'nexearch', 'query': a.encode('utf8')}
>>> params = urlencode(params)
>>> params
'query=%EB%B0%94%EB%91%91&where=nexearch'
>>> url = "http://search.naver.com/search.naver?" + params
>>> url
'http://search.naver.com/search.naver?query=%EB%B0%94%EB%91%91&where=nexearch'
  

 Using https://docs.python.org/2/library/urllib.html#urllib.urlencode to build the parameters is easier, but you can also just escape the  query  value with https://docs.python.org/2/library/urllib.html#urllib.quote_plus: 

  from urllib import quote_plus
encoded_a = quote_plus(a.encode('utf8'))
url = "http://search.naver.com/search.naver?where=nexearch&query=%s" % encoded_a
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/35544538)
 To simply encode fields in a URL, you can use  urllib.urlencode . 

 In Python 2, this should do the trick: 

  import urllib
s = "https://scholar.google.com/scholar?" + urllib.urlencode({"q":"rudra banerjee"})
print(s)
# Prints: https://scholar.google.com/scholar?q=rudra+banerjee
  

 In Python 3, it lives under  urllib.parse.urlencode  instead. 



