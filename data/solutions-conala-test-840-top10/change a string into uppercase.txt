Query: change a string into uppercase
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9257122)
  >>> s = 'sdsd'
>>> s.upper()
'SDSD'
  

 See https://docs.python.org/2/library/stdtypes.html#string-methods. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/54232124)
 You can simply randomly choose for each letter in the old string if you should lowercase or uppercase it, like this: 

  import random

def myfunc2(old):
  new = ''
  for c in old:
    lower = random.randint(0, 1)
    if lower:
      new += c.lower()
    else:
      new += c.upper()
  return new
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/39276716)
 for making uppercase from lowercase to upper
just use  

  "string".upper()
  

 where  "string"  is  your string that you want to convert uppercase 

 for this question  concern it will like this: 

  s.upper()
  

 for making lowercase from uppercase string
just use  

  "string".lower()
  

 where  "string"  is  your string that you want to convert lowercase 

 for this question concern it will like this: 

  s.lower()
  

 If you want to make your whole string variable use 

  s="sadf"
# sadf

s=s.upper()
# SADF
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/54232262)
 This does the job also  

  def foo(input_message):

    c = 0 
    output_message = ""

    for m in input_message:
        if (c%2==0):
            output_message = output_message + m.lower() 
        else: 
            output_message = output_message + m.upper()
        c = c + 1 

    return output_message
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/9257158)
 To get upper case version of a string you can use http://docs.python.org/library/stdtypes.html#str.upper: 

  s = 'sdsd'
s.upper()
#=> 'SDSD'
  

 On the other hand http://docs.python.org/library/string.html#string.ascii_uppercase is a string containing all ASCII letters in upper case: 

  import string
string.ascii_uppercase
#=> 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/54232167)
 Here's one that returns a new string using with alternate caps: 

  def myfunc(x):
   seq = []
   for i, v in enumerate(x):
      seq.append(v.upper() if i % 2 == 0 else v.lower())
   return ''.join(seq)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/54232182)
 Here's a onliner 

  "".join([x.upper() if i%2 else x.lower() for i,x in enumerate(mystring)])
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/54233087)
 Here's a solution using  itertools  which utilizes string slicing: 

  from itertools import chain, zip_longest

x = 'inputstring'

zipper = zip_longest(x[::2].lower(), x[1::2].upper(), fillvalue='')
res = ''.join(chain.from_iterable(zipper))

# 'iNpUtStRiNg'
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/54232846)
 Using a string slicing: 

  from itertools import zip_longest

s = 'example'

new_s = ''.join(x.upper() + y.lower()
                for x, y in zip_longest(s[::2], s[1::2], fillvalue=''))
# ExAmPlE
  

  

  s_iter = iter(s)

new_s = ''.join(x.upper() + y.lower()
                for x, y in zip_longest(s_iter, s_iter, fillvalue=''))
# ExAmPlE
  

 Using the function  reduce() : 

  def func(x, y):
    if x[-1].islower():
        return x + y.upper()
    else:
        return x + y.lower()

new_s = reduce(func, s) # eXaMpLe
  



