Query: Merging two pandas dataframes
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51229314)
 Use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.reindex.html by index of  df2 : 

  df = df1.reindex(df2.index, fill_value=-1)
print (df)
    2014  2015  2016  2017
CA    -1    -1    -1    -1
WA    -1    -1    -1    -1
NY    90    85    84    80
VA    75    76    81    79
DE    -1    -1    -1    -1
MD    60    62    66    70
IL    88    79    72    65
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/48693043)
 Use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html + http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_index.html: 

  df = pd.concat([df1, df2]).sort_index()
print (df)
          high  low
year ind           
2000 A       9    5
     B       8    3
2001 A       5    2
     B       4    2
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/36726227)
 Concatenate the dataframes  

  import pandas as pd
pd.concat([df1,df2], axis=0)
   A     B     C
0  0   123   321
1  0  1543   432
0  1   NaN   124
1  1   NaN  1544
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/42032936)
 It's just a matter of merging: 

  pd.merge(df1,df2)
#      0  1
#0  asdf  1
#1  hjkl  3
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/38864490)
 If you merge two DataFrames on  col1  and  col2 , the resulting DataFrame will have rows where both DataFrames have the same value in those columns. However, pandas https://stackoverflow.com/questions/11976503/how-to-keep-index-when-using-pandas-merge when merging. You can use  reset_index  prior to merging to keep the index and use that index in  .loc : 

  df1.loc[df1.reset_index().merge(df2, on=['col1', 'col2'])['index'], 'col3'] = 0

df1
Out: 
   col1  col2  col3
0     1    10     0
1     2    11     0
2     3    12     0
3     4    13    -1
4     5    14     0
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/44110465)
 Unfortunately pandas merge support only equality joins. See more details at the following thread:
https://stackoverflow.com/questions/30627968/merge-pandas-dataframes-where-one-value-is-between-two-others
if you want to merge by interval you'll need to overcome the issue, for example by adding another filter after the merge: 

  joined = a.merge(b,on='id')
joined = joined[joined.ts.between(joined.ts1,joined.ts2)]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/41861822)
 The  key  column in one of your dataframes is  int  while the other is  str  

  split_df.key = split_df.key.astype(int)
csv_df.key = csv_df.key.astype(int)

pd.merge(split_df,csv_df, on=['key'], suffixes=('_left', '_right'))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/50250218)
  DataFrame joining/merging  

  pd.merge(left, right, how='inner', on=None, left_on=None, right_on=None,
         left_index=False, right_index=False, sort=True,
         suffixes=('_x', '_y'), copy=True, indicator=False,
         validate=None)
  

 https://pandas.pydata.org/pandas-docs/stable/merging.html 



