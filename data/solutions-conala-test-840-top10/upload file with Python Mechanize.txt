Query: upload file with Python Mechanize
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1305860)
 This is how to do it properly with Mechanize: 

  br.form.add_file(open(filename), 'text/plain', filename)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/15771506)
 Try to open file in binary mode: 

  br.form.add_file(open(filepath, 'rb'), 'text/plain', 'd6sEz.jpg', nr=0, name='file[]')
  

 And also, replace  text/plain  with  image/jpeg  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1299896)
 http://twill.idyll.org/ is built on  mechanize  and makes scripting web forms a breeze. See https://stackoverflow.com/questions/1294862/python-www-macro. 

  >>> from twill import commands
>>> print commands.formfile.__doc__

>> formfile <form> <field> <filename> [ <content_type> ]

Upload a file via an "upload file" form field.

>>> 
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/4382951)
 You could of course use  urllib2  to accomplish this task. Read the docs on how to deal with cookies and how to upload files. However, I think using http://wwwsearch.sourceforge.net/mechanize/ could save a lot of time. Mechanize allows you to deal with webpages as if you were using a browser: 

  import mechanize

br = mechanize.Browser()
br.open("http://www.example.com/")
br.select_form()
br['username'] = 'user'
br['password'] = 'pass'
br.submit()

etc.
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/12674639)
 You can use mechanize lib from python: 

  import mechanize
b = mechanize.Browser()

# Set any header you like:
b.addheaders = [('Content-Typoe', 'text/html; charset=utf-8')]
response = b.open('http://www.reddit.com')
data = response.read()
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/4789634)
 Mechanize seems to expect the file data as raw bytes, not Unicode data. Try opening the file using the usual  open()  function: 

  ...
xmlFile = open("MyFile.xml", "rt")
...
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/4666348)
 Community: Please fix, I'm a casual passerby who encountered this error and solved it. 

  br.form.add_file(open(filename), 'text/plain', filename, **kwargs)
  

 You need to resolve the ambiguity by passing in an extra keyword argument to identify the specific control you want to add the file to. You can add name, id, nr or label. 

  

  br.form.add_file(open(filename), 'text/plain', filename, name='file')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/33214851)
 The  CookieJar  has several subclasses that can be used to save cookies to a file. For browser compatibility use  MozillaCookieJar , for a simple human-readable format go with  LWPCookieJar , just like this (an authentication via HTTP POST): 

  import urllib
import cookielib
import mechanize

params = {'login': 'mylogin', 'passwd': 'mypasswd'}
data = urllib.urlencode(params)

br = mechanize.Browser()
cj = mechanize.LWPCookieJar("cookies.txt")
br.set_cookiejar(cj)
response = br.open("http://example.net/login", data)
cj.save()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/8386555)
 The http://wwwsearch.sourceforge.net/mechanize/ for mechanize has this sample code: 

  br = mechanize.Browser()
....
# Ignore robots.txt.  Do not do this without thought and consideration.
br.set_handle_robots(False)
  

 That does exactly what you want. 



