Query: Remove string between 2 characters from text string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/904753)
 Without a RE (which I assume is what you want): 

  def remafterellipsis(text):
  where_ellipsis = text.find('...')
  if where_ellipsis == -1:
    return text
  return text[:where_ellipsis + 3]
  

  

  import re

def remwithre(text, there=re.compile(re.escape('...')+'.*')):
  return there.sub('', text)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19616642)
 Add  [ ,  ]  to the charcter class ( [ .. ] ) with escaping. 

  re.sub(r'[^a-zA-Z0-9\[\]]',' ', text)
  

 Example: 

  >>> re.sub(r'[^a-zA-Z0-9\[\]]', ' ', 'a,b[c-d]!')
'a b[c d] '
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/14443556)
  regex = re.compile(r"""
                    \\\S+\s*
                    """, re.VERBOSE)
line = r" lorem ipsum \xe2\x80\x9csianhill7 lorem ipsum"
replaced = regex.sub("", line)
  

 Note that you need to tell python to treat the '\' as regular character not as escape character. This is done by adding the r in front of the string. 

 I also assume that you want to remove all the text beginning with '\' up to and including the next white-space characters. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/36781932)
 You could use a regular expression to remove the non digit characters and then parse the number with  float  : 

  import re

value = float(re.sub(r"[^\d.]", "", post.text))
print("value: %s" % value)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7358582)
 You could use a regular expression: 

  import re
mystring = re.sub(r"^\W+", "", mystring)
  

 This removes all non-alphanumeric characters from the start of your string: 

  Explanation:  

  ^   # Start of string
\W+ # One or more non-alphanumeric characters
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35638317)
 Find the last digit in the string and then remove all the characters after it with  re.sub : 

  import re
address = "1234 Main St Smallville, KS 92348Small County "
address = re.sub(r'(\d)\D+$', r'\1', address)
print(address) # => 1234 Main St Smallville, KS 92348
  

 See the http://ideone.com/VMYcdt 

 The regex matches and captures into Group 1 a digit (with  (\d) ) and then matches one or more characters other than a digit ( \D+ ) up to the end of the string ( $ ). The replacement pattern is a mere  \1 , a backreference to the digit we captured with Group 1 (to restore it in the resulting string). 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/22939661)
  str.strip()  removes characters from the  start and end of a string only . From the https://docs.python.org/2/library/stdtypes.html#str.strip: 

 
   Return a copy of the string with the  leading and trailing characters  removed.  
 

 . 

 Use https://docs.python.org/2/library/stdtypes.html#str.replace to remove text from everywhere in the string: 

  xxx.replace(',', '')
  

 For a  set  of characters use a regular expression: 

  import re

re.sub(r'[,!?]', '', xxx)
  

  

  >>> xxx = 'hello, world'
>>> xxx.replace(',', '')
'hello world'
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/52833718)
 You can use https://docs.python.org/2/library/stdtypes.html#str.join to insert newline characters ( \n ) between each character of the string ( my_string ). 

 If you also want to strip out the  -  symbols (which is implied in your question), you can use the https://docs.python.org/2/library/stdtypes.html#str.replace function to remove them. 

 Consider the following: 

  import matplotlib.pyplot as plt

my_string = '2018-08-11'

fig, ax = plt.subplots(1)

ax.text(0.1, 0.5, my_string, va='center')
ax.text(0.3, 0.5, my_string, rotation=90, va='center')
ax.text(0.5, 0.5, '\n'.join(my_string), va='center')
ax.text(0.7, 0.5, '\n'.join(my_string.replace('-', '')), va='center')

plt.show()
  

 https://i.stack.imgur.com/Asnfu.png 



