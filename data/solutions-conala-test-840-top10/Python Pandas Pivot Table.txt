Query: Python Pandas Pivot Table
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/37150688)
   .pivot_table , not  .pivot . 

  import pandas
from io import StringIO

x = StringIO("""\
Date    Stage   SubStage    Value
12/31/2015   1.00   a   0.896882891
1/1/2016     1.00   a   0.0458843
1/2/2016     1.00   a   0.126805588
1/3/2016     1.00   b   0.615824461
1/4/2016     1.00   b   0.245092069
1/5/2016     1.00   c   0.121936318
1/6/2016     1.00   c   0.170198128
1/7/2016     1.00   c   0.735872415
1/8/2016     1.00   c   0.542361912
1/4/2016     2.00   a   0.723769247
1/5/2016     2.00   a   0.305570257
1/6/2016     2.00   b   0.47461605
1/7/2016     2.00   b   0.173702623
1/8/2016     2.00   c   0.969260251
1/9/2016     2.00   c   0.017170798
""")

df = pandas.read_table(x, sep='\s+')
xtab = df.pivot_table(index='Date', columns=['Stage','SubStage'], values='Value')
print(xtab.to_string(na_rep='--'))
  

 And that gives me: 

  Stage            1.0                           2.0                    
SubStage           a         b         c         a         b         c
Date                                                                  
1/1/2016    0.045884        --        --        --        --        --
1/2/2016    0.126806        --        --        --        --        --
1/3/2016          --  0.615824        --        --        --        --
1/4/2016          --  0.245092        --  0.723769        --        --
1/5/2016          --        --  0.121936  0.305570        --        --
1/6/2016          --        --  0.170198        --  0.474616        --
1/7/2016          --        --  0.735872        --  0.173703        --
1/8/2016          --        --  0.542362        --        --  0.969260
1/9/2016          --        --        --        --        --  0.017171
12/31/2015  0.896883        --        --        --        --        --
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/41238821)
  pivot_table  

  df.pivot_table('B', 'A', aggfunc=','.join)

A
a    g,a,j
c        e
d        b
Name: B, dtype: object
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/47320815)
 Since you are familiar with pivot tables in Excel, I'll give you the Pandas  pivot_table  method also: 

  df.pivot_table('id','value','movie',aggfunc='count').fillna(0).astype(int)
  

 Output: 

  movie     a        b        c     
value                             
 0             4        2        0
 10            1        1        0
 20            2        0        0
 30            0        3        0
 40            0        0        2
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/18933216)
 This is a typical example of a  pivot_table : 

  >>> df.pivot_table(values='q_visits', cols='q_date', rows='q_string')
q_date     2012-10-02 00:00:00
q_string                      
current                    280
molecular                  259
neuron                     364
nucleus                   1790
stem                       201
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/47320843)
 It can be done this way with Pandas' basic  pivot_table  functionality and aggregate functions (also need to  import NumPy ). See the answer in https://stackoverflow.com/a/37840079/4057186 and Pandas https://pandas.pydata.org/pandas-docs/stable/generated/pandas.pivot_table.html#pandas-pivot-table documentation with examples: 

  import numpy as np
df = ...
ndf = df.pivot_table(index=['value'],
                     columns='movie',
                     aggfunc=np.count_nonzero).reset_index().fillna(0).astype(int)
print(ndf)

      value id      
movie        a  b  c
0         0  4  2  0
1        10  1  1  0
2        20  2  0  0
3        30  0  3  0
4        40  0  0  2
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/49155154)
 This is try to fix your pivot_table  

  pd.pivot_table(df.assign(new=df.AMOUNT.gt(0)), values =['AMOUNT'], index = ['ACCOUNT','STATUS'],columns='new',aggfunc = { 'AMOUNT': [np.sum, 'count'] } ).abs()
Out[431]: 
               AMOUNT                  
                count         sum      
new             False True  False True 
ACCOUNT STATUS                         
1       1           1     2     2     4
2       0           1     1     1     2
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/35487378)
 You can use  pivot_table : 

  a = df.pivot_table(index='Date', columns='Student', values='Grade')
  

 This returns: 

  Out[5]: 
Student   Brian  Connor  Steve
Date                          
1/1/2015   0.15    0.02   0.05
1/2/2015   0.14     NaN   0.05
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/19630379)
 I think this  will more perfect: 

  df2.pivot_table(values='X',rows=['Y','Z'],cols='X',aggfunc='count')


                 X1 X2
Y   Z       
Y1  Z1   1   1
        Z2   1  NaN
Y2  Z3   1  NaN
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/28337349)
 You can use  pivot_table : 

  pd.pivot_table(df, values = 'Value', index=['Country','Year'], columns = 'Indicator').reset_index()
  

 this outputs: 

   Indicator  Country     Year    1   2   3   4   5
 0          Angola      2005    6   13  10  11  5
 1          Angola      2006    3   2   7   3   6
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/12862240)
 You can construct a pivot table for each distinct value of  X .   

  for xval, xgroup in g:
    ptable = pd.pivot_table(xgroup, rows='Y', cols='Z', 
        margins=False, aggfunc=numpy.size)
  

 will construct a pivot table for each value of  X . You may want to index  ptable  using the  xvalue . With this code, I get (for  X1 ) 

       X        
Z   Z1  Z2  Z3
Y             
Y1   2   1 NaN
Y2 NaN NaN   1
  



