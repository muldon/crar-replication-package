Query: Python, remove all non-alphabet chars from string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/49965574)
 The fastest method is regex 

  #Try with regex first
t0 = timeit.timeit("""
s = r2.sub('', st)

""", setup = """
import re
r2 = re.compile(r'[^a-zA-Z0-9]', re.MULTILINE)
st = 'abcdefghijklmnopqrstuvwxyz123456789!@#$%^&*()-=_+'
""", number = 1000000)
print(t0)

#Try with join method on filter
t0 = timeit.timeit("""
s = ''.join(filter(str.isalnum, st))

""", setup = """
st = 'abcdefghijklmnopqrstuvwxyz123456789!@#$%^&*()-=_+'
""",
number = 1000000)
print(t0)

#Try with only join
t0 = timeit.timeit("""
s = ''.join(c for c in st if c.isalnum())

""", setup = """
st = 'abcdefghijklmnopqrstuvwxyz123456789!@#$%^&*()-=_+'
""", number = 1000000)
print(t0)


2.6002226710006653 Method 1 Regex
5.739747313000407 Method 2 Filter + Join
6.540099570000166 Method 3 Join
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/29350747)
 If you prefer not to use regex, you might try 

  ''.join([i for i in s if i.isalpha()])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/22521156)
 Use  re.sub  

  import re

regex = re.compile('[^a-zA-Z]')
#First parameter is the replacement, second parameter is your input string
regex.sub('', 'ab3d*E')
#Out: 'abdE'
  

 Alternatively, if you only want to remove a certain set of characters (as an apostrophe might be okay in your input...) 

  regex = re.compile('[,\.!?]') #etc.
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/22521235)
 You can use the re.sub() function to remove these characters: 

  >>> import re
>>> re.sub("[^a-zA-Z]+", "", "ABC12abc345def")
'ABCabcdef'
  

 re.sub(MATCH PATTERN, REPLACE STRING, STRING TO SEARCH) 

 
  "[^a-zA-Z]+"  - look for any group of characters that are NOT
a-zA-z. 
  ""  - Replace the matched characters with "" 
 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/30710282)
 From what I understand, you want to remove non-alphanumeric chars from the string. In this case, it makes more sense to list the characters you want to leave instead of trying to specify every "special" character that you want to remove. 

 You can use https://docs.python.org/2/library/re.html#re.sub: 

  >>> import re
>>> s = "sample_sample_sample_2.18.14"
>>> re.sub(r'[^a-zA-Z0-9]', '', s)
'samplesamplesample21814'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/41985316)
 Use https://docs.python.org/2/library/stdtypes.html#str.translate, 

  #!/usr/bin/env python
# -*- coding: utf-8 -*-

import string

s = "[x+]4 gur Id lú gal sik-kát ⌈ x x ⌉ [……………]"
r = s.translate(None, '…⌉⌈')

print(r)
# [x+]4 gur Id lú gal sik-kát  x x  []
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/46108747)
 You want to match the whole string for \W with  ^\W+$ . 

 Something like this will do: 

  $ cat test.py
import re

pattern = r"^\W+$"

d = {'<word>':1,'-word':12, 'word':1, '$(*#%&^#&@#':2, '!@**$12word*&':4, '::':10, '1230324':1, '+635':5}

for k in d.keys():
    matches = re.search(pattern, k)
    if (matches):
        print 'to remove: ' + k
        del d[k]

for k in d.keys():
    print k
  

  EDIT : question changed: OP wants to create dict in one go.  

  new_dict = {k:d[k] for k in d.keys() if not(re.search(pattern,k))}
  



