Query: randomly select an item from a list
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/47557650)
  foo = ['a', 'b', 'c', 'd', 'e']
number_of_samples = 1
  

 In python 2:  

  random_items = random.sample(population=foo, k=number_of_samples)
  

 In python 3: 

  random_items = random.choices(population=foo, k=number_of_samples)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/14015085)
 if you need the index just use: 

  import random
foo = ['a', 'b', 'c', 'd', 'e']
print int(random.random() * len(foo))
print foo[int(random.random() * len(foo))]
  

 random.choice does the same:) 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/25133330)
 We can also do this using randint. 

  from random import randint
l= ['a','b','c']

def get_rand_element(l):
    if l:
        return l[randint(0,len(l)-1)]
    else:
        return None

get_rand_element(l)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/12373205)
 If you also need the index, use https://docs.python.org/3/library/random.html#random.randrange 

  from random import randrange
random_index = randrange(len(foo))
print(foo[random_index])
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/44730691)
 
   How to randomly select an item from a list? 
  
   Assume I have the following list: 

  foo = ['a', 'b', 'c', 'd', 'e']  
  
  
   What is the simplest way to retrieve an item at random from this list? 
 

 If you want close to  truly random , then I suggest using a  SystemRandom  object from the  random  module with the  choice  method: 

  >>> import random
>>> sr = random.SystemRandom()
>>> foo = list('abcde')
>>> foo
['a', 'b', 'c', 'd', 'e']
  

  

  >>> sr.choice(foo)
'd'
>>> sr.choice(foo)
'e'
>>> sr.choice(foo)
'a'
>>> sr.choice(foo)
'b'
>>> sr.choice(foo)
'a'
>>> sr.choice(foo)
'c'
>>> sr.choice(foo)
'c'
  

 If you want a deterministic pseudorandom selection, use the  choice  function (which is actually a bound method on a  Random  object): 

  >>> random.choice
<bound method Random.choice of <random.Random object at 0x800c1034>>
  

  

  >>> random.seed(42); random.choice(foo), random.choice(foo), random.choice(foo)
('d', 'a', 'b')
>>> random.seed(42); random.choice(foo), random.choice(foo), random.choice(foo)
('d', 'a', 'b')
>>> random.seed(42); random.choice(foo), random.choice(foo), random.choice(foo)
('d', 'a', 'b')
>>> random.seed(42); random.choice(foo), random.choice(foo), random.choice(foo)
('d', 'a', 'b')
>>> random.seed(42); random.choice(foo), random.choice(foo), random.choice(foo)
('d', 'a', 'b')
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/306417)
 Use https://docs.python.org/2/library/random.html#random.choice: 

  import random

foo = ['a', 'b', 'c', 'd', 'e']
print(random.choice(foo))
  

 For cryptographically secure random choices (e.g. for generating a passphrase from a wordlist), use https://docs.python.org/2/library/random.html#random.SystemRandom class: 

  import random

foo = ['battery', 'correct', 'horse', 'staple']
secure_random = random.SystemRandom()
print(secure_random.choice(foo))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/53857702)
 You could use https://docs.python.org/3/library/random.html#random.choice twice: 

  import random

first = ['one', 'word']
second = ['two', 'more', 'and']

selected = random.choice(random.choice([first, second]))

print(selected)
  

  Output  

  word
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/16514203)
 I propose a script for removing randomly picked up items off a list until it is empty: 

 Maintain a  set  and remove randomly picked up element (with  choice ) until list is empty. 

  s=set(range(1,6))
import random

while len(s)>0:
  s.remove(random.choice(list(s)))
  print(s)
  

 Three runs give three different answers: 

  >>> 
set([1, 3, 4, 5])
set([3, 4, 5])
set([3, 4])
set([4])
set([])
>>> 
set([1, 2, 3, 5])
set([2, 3, 5])
set([2, 3])
set([2])
set([])

>>> 
set([1, 2, 3, 5])
set([1, 2, 3])
set([1, 2])
set([1])
set([])
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/29196938)
 Use a list comprehension as in 

  import random
choices = [random.choice(v) for k, v in your_dict.items()] # iterate over the dict items
print(choices)
  

 Output 

  ['Protein', 'Green', 'Squishy']
  



