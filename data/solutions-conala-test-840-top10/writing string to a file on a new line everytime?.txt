Query: writing string to a file on a new line everytime?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2918375)
 You can use:  

  file.write(your_string + '\n')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2918370)
 Use "\n": 

  file.write("My String\n")
  

 See http://docs.python.org/tutorial/inputoutput.html for reference. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/6016944)
 Open the file in append mode ( 'a'  instead of  'w' ). Opening in  'w'  mode truncates your file (you're now writing into an empty file) 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/40335770)
 Solution you had "w" which can only write to the file so you have to open it as "r" which reads it. 

  import string
import random

file = open('test.dat', 'r')
file=file.read()
print file

def id_generator(size=28, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))
with open("newfile.txt", "r") as f: stored = f.readline()
if stored == id_generator():
    print('success!')
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/16004070)
 Problem is that you're opening the file in write mode with each iteration, so everytime the file gets truncated first and then you write the new line. 

 Open the file outside of the loop. 

  In [18]: text=['words words','words words words','words words words words']

def pyramid(text):
    with open("abc","w") as f:
        max_width=len(text[-1])
        for line in text: 
            f.write("{0:^{1}s}\n".format(line,max_width))  #use string formatting
   ....:             

In [20]: pyramid(text)                                                

In [21]: print open("abc").read()
      words words      
   words words words   
words words words words
  

 http://docs.python.org/2/library/string.html#formatspec: 

 
   ^  :  Forces the field to be centered within the available space. 
 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/21667610)
 I believe the problem is your output contains additional new line character at the end.   .strip()  to remove those: 

  output = subprocess.check_output("./mount.sh", shell=True)
output = output.strip()
  

 Update: How to Find out If a String Ends with New Line? 

 Consider the following interactive session: 

  >>> s = '''hello\n'''
>>> s.endswith('\n')
True
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47002561)
 What you are doing with the  f = open('H.csv','w')  is that it is write to the file but also writing over your data. What you need to do is use  f =open('H.csv', 'a+')  this appends new string everytime to the file.https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files
To sort data use 

  for x in sorted(csvdict.keys()):
  

 With this code I was able to write to file what was printed on console. 

  csvfile = [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], ['2', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0'], ['3', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0']]
csvdict = {words[0]:words[1:] for words in csvfile}
for x in sorted(csvdict.keys()): # iterate over the keys '1', '2', ....
    products = [index+1 for index,v in enumerate(csvdict[x]) if v == '1' ] # create list of purchases where the '1's are indexed

    #print (products)
    f = open("H.csv", 'a+')
    hasil = ("costummer", x, "buy", products)
    hasilstr = ("costummer, %s,buy,"+','.join([str(i) for i in products])) %(x)
    print (hasilstr)
    f.write(hasilstr +"\n")
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/9256680)
  char[10] c = new char[10];
Arrays.fill(c, '*');
String str = new String(c);
  

 To avoid creating a new String everytime. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/34378673)
 Everytime you open the file with  w , the file is truncated (that is, anything in it is deleted and the pointer is set to 0). 

 Since you are opening the file in your loop - it is actually writing all the strings, but since its opened in each loop iteration, the previous string is deleted - in effect, you are only seeing the last thing it writes (because after that, the loop finishes). 

 To stop this from happening, open your file only once for writing, at the top of your loop: 

  with open('change_log.txt', 'r') as fobj, \
     open('my_log.txt', 'w') as fobj2:
    for line in fobj:
        cleaned_whitespaces= line.strip()            
        if cleaned_whitespaces:
            var = "\item " + cleaned_whitespaces
            fobj2.writelines(var)
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/48829722)
 You should check your logic and variable names. You're checking if lines[5] is not equal to line6, everytime in your loop. Which it is, because it IS that exact line. You want the check the current line: 

  if t == "dy":
    f = open("C:/Users/Sreeraj/Desktop/Thailand_Rectangle2_National Parks.txt","w")
    for line in lines:
        if line != line6: # <- Check actual line!
            f.write(line)

f.close()
  



