Query: how to convert a string date into datetime format in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/5220004)
 You can use http://docs.python.org/library/datetime.html#date-objects: 

  >>> import datetime
>>> s = '2011-03-07'
>>> datetime.date(*map(int, s.split('-')))
datetime.date(2011, 3, 7)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30819460)
 You can use  datetime.strptime  with a proper format : 

  >>> datetime.strptime('15-MARCH-2015','%d-%B-%Y')
datetime.datetime(2015, 3, 15, 0, 0)
  

 Read more about  datetime.strptime  and date formatting: https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19068355)
 The particular format for  strptime : 

  datetime.datetime.strptime(string_date, "%Y-%m-%d %H:%M:%S.%f")
#>>> datetime.datetime(2013, 9, 28, 20, 30, 55, 782000)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/7299601)
 You should use  datetime.datetime.strptime() , which converts a string and date format into a  datetime.datetime  object. 

 The format fields (e.g.,  %Y  denotes four-digit year) are specified http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior. 

  >>> import datetime
>>> s      = '2011-09-04 23:44:30.801000'
>>> format = '%Y-%m-%d %H:%M:%S.%f'
>>> date=datetime.datetime.strptime(s, format)
>>> date
datetime.datetime(2011, 9, 4, 23, 44, 30, 801000)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/30821120)
 The  datetime  module will help you here. First convert your string to a  datetime  object using  strptime , then convert this object to the required string format with  strftime : 

  from datetime import datetime
datetime.strftime(datetime.strptime('15-MARCH-2015','%d-%B-%Y'),'%Y-%m-%d')
  

 Will yield: 

  '2015-03-15'
  

 Notice the string format  '%d-%B-%Y'  conforms to the string as you have it and   '%Y-%m-%d'  to the format you want it to be in. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/15557847)
 You still use  datetime.datetime  but then request just the  .date()  portion: 

  datetime.datetime.strptime('30-01-12', '%d-%m-%y').date()
  

  

  >>> import datetime
>>> datetime.datetime.strptime('30-01-12', '%d-%m-%y').date()
datetime.date(2012, 1, 30)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/2803877)
 You can use http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior in the http://docs.python.org/library/datetime.html package of Python: 

  >>> datetime.datetime.strptime('24052010', "%d%m%Y").date()
datetime.date(2010, 5, 24)
  



