Query: How can I know python's path under windows?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/34991650)
 Using pathlib in Windows as follow: 

 
   files = (x for x in Path("your_path") if x.is_file()) 
 

 Generates error: 

 
   TypeError: 'WindowsPath' object is not iterable 
 

 You should rather use https://pathlib.readthedocs.org/en/pep428/#pathlib.Path.iterdir 

  filePath = Path("your_path")
if filePath.is_dir():
    files = list(x for x in filePath.iterdir() if x.is_file())
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/51618389)
 This works on both Windows and Linux: 

  import os
desktop = os.path.expanduser("~/Desktop")

# the above is valid on Windows (after 7) but if you want it in os normalized form:
desktop = os.path.normpath(os.path.expanduser("~/Desktop"))
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/24072969)
 To answer your question as simply as possible, just use posixpath instead of os.path. 

  

  from os.path import join
join('foo', 'bar')
# will give you either 'foo/bar' or 'foo\\bar' depending on your OS
  

 Use: 

  from posixpath import join
join('foo', 'bar')
# will always give you 'foo/bar'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/34275945)
  

  import os
desktop = os.path.join(os.path.join(os.path.expanduser('~')), 'Desktop') 
  

 on Windows: 

  import os
desktop = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop') 
  

 and to add in your command: 

  shutil.copy(txtName, desktop)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7752128)
  cygpath -w
  

 You can read the manual page for more switches. Among them 

 
 -w for windows 
 -u for unix 
 -a for absolute path 
 

 You need to be careful with escaping, make sure the path argument is a single shell word. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/12086287)
 It is all about how Python detects your os: 

  # in os.py
if 'posix' in _names:
    ...
    import posixpath as path   

elif 'nt' in _names:
    ...
    import ntpath as path
  

 So, on Windows the  ntpath  module is loaded. If you check the  ntpath.py  and  posixpath.py  modules you'd notice that  ntpath.join()  is a bit more complex and that is also because of the reason you've mentioned: Windows understands  /  as a path separator.  

 Bottomline: although you can use  posixpath.join()  in Windows (as long as the arguments are in  POSIX  format), I would not recommend doing it.  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/39959484)
 You can use https://docs.python.org/3/library/os.html#os.environ 

  import os
win_path = os.environ['WINDIR']
  

  WINDIR  is an environment variable set by windows that will point to  %SystemRoot%  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/6698971)
 The best way is to examine the actual path in your python interpreter: 

  $ python
Python 2.6.6 (r266:84297, Aug 24 2010, 18:13:38) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import pprint, sys
>>> pprint.pprint(sys.path)
['',
 'c:\\Python26\\lib\\site-packages\\setuptools-0.6c11-py2.6.egg',
 'c:\\Python26\\lib\\site-packages\\nose-1.0.0-py2.6.egg',
 'C:\\Windows\\system32\\python26.zip',
 'c:\\Python26\\DLLs',
 'c:\\Python26\\lib',
 'c:\\Python26\\lib\\plat-win',
 'c:\\Python26\\lib\\lib-tk',
 'c:\\Python26',
 'c:\\Python26\\lib\\site-packages',
 'c:\\Python26\\lib\\site-packages\\win32',
 'c:\\Python26\\lib\\site-packages\\win32\\lib',
 'c:\\Python26\\lib\\site-packages\\Pythonwin',
 'c:\\Python26\\lib\\site-packages\\wx-2.8-msw-unicode']
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/9652580)
 Just follow this tutorial. You need to add its full path to 'path' variable. 

 http://www.computerhope.com/issues/ch000549.htm 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/13654236)
  os.getlogin()  return the user that is executing the, so it can be: 

  path = os.path.join(..,Documents and Settings,os.getlogin(),Desktop)  

 or, using getpass.getuser() 

  path = os.path.join(..,Documents and Settings,getpass.getuser(),Desktop)  

 If I understand what you asked. 



