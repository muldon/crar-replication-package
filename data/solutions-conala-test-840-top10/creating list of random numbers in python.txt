Query: creating list of random numbers in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/33961412)
 Totally random then: 

  def gen_matrix():
    first_row = random.sample(range(1, 5), 4)
    tmp = first_row + first_row
    rows = []
    for i in range(4):
        rows.append(tmp[i:i+4])
    return random.sample(rows, 4)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/24108452)
 Just use  [random.random() for i in range(N)]  inside your list comprehension. 

  

  >>> import random
>>> N = 3
>>> [random.random() for i in range(N)]
[0.24578599816668256, 0.34567935734766164, 0.6482845150243465]
>>> M = 3
>>> [[random.random() for i in range(N)] for j in range(M)]
[[0.9883394519621589, 0.6533595743059281, 0.866522328922242], [0.5906410405671291,         0.4429977939796209, 0.9472377762689498], [0.6883677407216132,     0.8215813727822125, 0.9770711299473647]]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/53105280)
 The function  random.sample  does what you want: 

  import random

def generatePassword():
    numbers = range(0, 9)
    return random.sample(numbers, 5)

def main() :
    print(generatePassword())
main()
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/33961338)
 Create a list of all the elements, and as will filling the line, remove the used element. 

  import random

def fill_line(length):
    my_list = list(range(length))

    to_return = []

    for i in range(length):
        x = random.choice(my_list)

        to_return.append(x)
        my_list.remove(x)

    return to_return

x = [fill_line(4)
     for i in range(4)]

print(x)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/53105269)
 You don't want to add random, unique integers 5 times; you want to add random, unique integers until your list contains 5 elements. This'll do it: 

  import random

def generatePassword() :
    lis = []
    while len(lis) < 5:
        #This checks to see if there are duplicate numbers
        r = random.randint(1,9)
        if r not in lis :
            lis.append(r)
    return lis
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/20734341)
 A list comprehension is easier, faster: 

  randomList = [random.random() for _ in range(10)]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/24108477)
 You can use list comprehensions.  

  [[random.random() for x in xrange(N)] for y in xrange(N)]
  

 https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions 

 For large multi dimensional arrays, I suggest you use numpy though.  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/53105274)
 Use  numpy.random.permutation  if you are looking for method that works and is faster: 

  import numpy as np
your_list = list(np.random.permutation(np.arange(0,10))[:5])

>>> your_list
[6, 9, 0, 1, 4]
  

 Alternatively, you can use  np.random.choice  with  replace=False : 

  your_list = list(np.random.choice(np.arange(0,10), 5, replace=False)
  



