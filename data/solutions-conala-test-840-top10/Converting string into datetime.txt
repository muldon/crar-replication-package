Query: Converting string into datetime
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/10162985)
 Use http://docs.python.org/library/datetime.html#datetime.datetime.strptime. 

  from datetime import datetime
datetime.strptime("2012/04/08 13:31:00 UTC", "%Y/%m/%d %H:%M:%S %Z")
  

 returns the datetime object: 

  datetime.datetime(2012, 4, 8, 13, 31)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/35305826)
 https://docs.python.org/2/library/string.html#format-examples can be used as well: 

  t = datetime.datetime(2012, 2, 23, 0, 0)
"{:%m/%d/%Y}".format(t)
  

 Output: 

  '02/23/2012'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10625003)
 You could use simple string formatting methods: 

  >>> dt = datetime.datetime(2012, 2, 23, 0, 0)
>>> '{0.month}/{0.day}/{0.year}'.format(dt)
'2/23/2012'
>>> '%s/%s/%s' % (dt.month, dt.day, dt.year)
'2/23/2012'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/7299601)
 You should use  datetime.datetime.strptime() , which converts a string and date format into a  datetime.datetime  object. 

 The format fields (e.g.,  %Y  denotes four-digit year) are specified http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior. 

  >>> import datetime
>>> s      = '2011-09-04 23:44:30.801000'
>>> format = '%Y-%m-%d %H:%M:%S.%f'
>>> date=datetime.datetime.strptime(s, format)
>>> date
datetime.datetime(2011, 9, 4, 23, 44, 30, 801000)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/35894132)
 Another option: 

  import datetime
now=datetime.datetime.now()
now.isoformat()
# ouptut --> '2016-03-09T08:18:20.860968'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/10624968)
 You can use http://docs.python.org/2/library/time.html#time.strftime to help you format your date. 

 E.g., 

  import datetime
t = datetime.datetime(2012, 2, 23, 0, 0)
t.strftime('%m/%d/%Y')
  

  

  '02/23/2012'
  

 More information about formatting see http://docs.python.org/library/datetime.html#strftime-strptime-behavior 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/15661036)
 Use http://docs.python.org/2/library/datetime.html#datetime.datetime.combine with a time object,  datetime.time.min  represents  00:00  and would match the output of your date-string-datetime path: 

  datetime.datetime.combine(my_date, datetime.time.min)
  

  

  >>> import datetime
>>> my_date = datetime.date.today()
>>> datetime.datetime.combine(my_date, datetime.time.min)
datetime.datetime(2013, 3, 27, 0, 0)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/47703861)
 Use pytz 

  import datetime
import pytz

temp = '07/12/2017 13:30'
dt = datetime.strptime(temp, '%d/%m/%Y %H:%M')
timezone = pytz.timezone("Etc/Greenwich")
d_aware = timezone.localize(dt)
d_aware.tzinfo
> <DstTzInfo 'Etc/Greenwich' PST-1 day, 16:00:00 STD>
d_aware
datetime.datetime(2017, 12, 7, 13, 30, tzinfo=<StaticTzInfo 'Etc/Greenwich'>)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/51869533)
 It would do the helpful for converting string to datetime and also with time zone 

  def convert_string_to_time(date_string, timezone):
    from datetime import datetime
    import pytz
    date_time_obj = datetime.strptime(date_string[:26], '%Y-%m-%d %H:%M:%S.%f')
    date_time_obj_timezone = pytz.timezone(timezone).localize(date_time_obj)

    return date_time_obj_timezone

date = '2018-08-14 13:09:24.543953+00:00'
TIME_ZONE = 'UTC'
date_time_obj_timezone = convert_string_to_time(date, TIME_ZONE)
  



