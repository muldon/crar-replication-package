Query: How do you split a list into evenly sized chunks?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/31178232)
 code: 

  def split_list(the_list, chunk_size):
    result_list = []
    while the_list:
        result_list.append(the_list[:chunk_size])
        the_list = the_list[chunk_size:]
    return result_list

a_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

print split_list(a_list, 3)
  

 result: 

  [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/33180285)
 Since I had to do something like this, here's my solution given a generator and a batch size: 

  def pop_n_elems_from_generator(g, n):
    elems = []
    try:
        for idx in xrange(0, n):
            elems.append(g.next())
        return elems
    except StopIteration:
        return elems
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/312467)
 Here is a generator that work on arbitrary iterables: 

  def split_seq(iterable, size):
    it = iter(iterable)
    item = list(itertools.islice(it, size))
    while item:
        yield item
        item = list(itertools.islice(it, size))
  

 Example: 

  >>> import pprint
>>> pprint.pprint(list(split_seq(xrange(75), 10)))
[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
 [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
 [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
 [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
 [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
 [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
 [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
 [70, 71, 72, 73, 74]]
  



