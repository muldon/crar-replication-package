Query: string contains substring method
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/3437070)
 You can use the https://docs.python.org/reference/expressions.html#membership-test-details: 

  if "blah" not in somestring: 
    continue
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30465415)
 Basically, you want to find a substring in a string in Python. There are two ways to search for a substring in a string in Python. 

  Method 1:  in  operator  

 You can use the Python's  in  operator to check for a substring. . It will return  True  if the substring was found in the string else  False . 

  >>> "King" in "King's landing"
True

>>> "Jon Snow" in "King's landing"
False
  

  Method 2:  str.find()  method  

 The second method is to use the  str.find()  method.   .find()  method on the string in which substring is to found. We pass the substring to the find() method and check its return value. If its value is other than -1, the substring was found in the string, otherwise not. The value returned is the index where substring was found. 

  >>> some_string = "valar morghulis"

>>> some_string.find("morghulis")
6

>>> some_string.find("dohaeris")
-1
  

 I would recommend you to use the first method as it is more Pythonic and intuitive. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19101749)
 No, there isn't any  string.contains(str)  method, but there is the  in  operator: 

  if substring in someString:
    print "It's there!!!"
  

 Here is a more complex working example: 

  # Print all files with dot in home directory
import commands
(st, output) = commands.getstatusoutput('ls -a ~')
print [f for f in output.split('\n') if '.' in f ]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3437068)
 If it's just a substring search you can use  string.find("substring") . 

 You do have to be a little careful with  find ,  index , and  in  though, as they are substring searches.  

  s = "This be a string"
if s.find("is") == -1:
    print "No 'is' here!"
else:
    print "Found 'is' in the string."
  

 It would print  Found 'is' in the string.  Similarly,  if "is" in s:  would evaluate to  True . This may or may not be what you want. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/30446999)
 Here is your answer: 

  if "insert_char_or_string_here" in "insert_string_to_search_here":
    #DOSTUFF
  

  

  if not "insert_char_or_string_here" in "insert_string_to_search_here":
    #DOSTUFF
  

  

  if "insert_char_or_string_here" not in "insert_string_to_search_here":
    #DOSTUFF
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/48241340)
 If you're looking for case-insensitive search for whole words, rather than a substring contained within another word: 

  import string

s = 'This is my text example'
if 'is' not in (word.lower() 
    for split_char in string.punctuation + string.whitespace 
    for word in s.split(split_char)):
    # do something
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/53442148)
 As previously said, you can use the  in  operator like this: 

  >>> to_search_in = "String to search in"
>>> to_search = "search"
>>> print(to_search in to_search_in)
True
>>> print(to_search_in.find(to_search))
10
  

 Also you can use regular expressions to get the occurrences: 

  >>> import re
>>> print(re.findall(r'( |t)', to_search_in)) # searches for t or space
['t', ' ', 't', ' ', ' ']
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/6859010)
 Another way to find whether a string contains a few characters or not with the Boolean return value (i.e.  True  or `False): 

  str1 = "This be a string"
find_this = "tr"
if find_this in str1:
    print find_this, " is been found in ", str1
else:
    print find_this, " is not found in ", str1
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/49531528)
 If you are happy with  "blah" in somestring  but want it to be a function call, you can probably do this 

  import operator

if not operator.contains(somestring, "blah"):
    continue
  

 All operators in Python can be more or less found in the https://docs.python.org/3.5/library/operator.html#operator.contains including  in . 



