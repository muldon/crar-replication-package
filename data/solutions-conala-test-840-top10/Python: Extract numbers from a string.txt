Query: Python: Extract numbers from a string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51870253)
 Using Regex below is the way 

  lines = "hello 12 hi 89"
import re
output = []
line = lines.split()
for word in line:
        match = re.search(r'\d+.?\d*', word)
        if match:
            output.append(float(match.group()))
print (output)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/9712508)
 From https://stackoverflow.com/q/952914/589206: 

  l=[[100], [500], [300]]
result=[item for sublist in l for item in sublist]
  

 From http://en.wikibooks.org/wiki/Python_Programming/Tips_and_Tricks: 

  def flatten(seq, list = None):
    """flatten(seq, list = None) -> list

    Return a flat version of the iterator `seq` appended to `list`
    """
    if list == None:
        list = []
    try:                          # Can `seq` be iterated over?
        for item in seq:          # If so then iterate over `seq`
            flatten(item, list)      # and make the same check on each item.
    except TypeError:             # If seq isn't iterable
        list.append(seq)             # append it to the new list.
    return list
  

 Google is your friend ... 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/54309001)
 To extract a single number from a string you can use https://docs.python.org/3/library/re.html#re.search, which returns the first match (or  None ): 

  >>> import re
>>> string = '3158 reviews'
>>> int(re.search(r'\d+', string).group(0))
3158
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/26825781)
 This code works fine. There is definitely some other problem: 

  >>> str1 = "3158 reviews"
>>> print (re.findall('\d+', str1 ))
['3158']
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/6942164)
 You could also extract numbers from a string. 

  import string
extract_digits = lambda x: "".join(char for char in x if char in string.digits + ".")
  

 . 

  to_float = lambda x: float(x) if x.count(".") <= 1 else None
  

  

  >>> token = "My pants got 2.5 legs"
>>> extract_digits(token)
'2.5'
>>> to_float(_)
2.5
>>> token = "this is not a valid number: 2.5.52"
>>> extract_digits(token)
'2.5.52'
>>> to_float(_)
None
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/26825744)
 If the format is that simple (a space separates the number from the rest) then 

  int(str1.split()[0])
  

  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/26825833)
 You can  filter  the string by  digits  using  str.isdigit  method, 

  >>> int(filter(str.isdigit, str1))
3158
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/15745970)
 Sure, use http://docs.python.org/3/library/re.html#re.findall: 

  >>> s = "There are LJFK$(#@$34)(,0,ksdjf apples in the (4,5)"
>>> import re
>>> list(map(int, re.findall(r'[0-9]+', s)))
[34, 0, 4, 5]
  



