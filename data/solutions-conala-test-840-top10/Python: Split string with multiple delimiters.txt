Query: Python: Split string with multiple delimiters
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/32954124)
  import re
x = "a_b_c"
print re.split(r"_(?!.*_)",x)
  

 You can do it through  re .Here in  re  with the use of  lookahead  we state that split by  _  after which there should not be  _ . 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/54494474)
 You can use  re.split : 

  import re
re.split('[,;/ ]+', names)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/4998688)
 Luckily, Python has this built-in :) 

  import re
re.split('; |, ',str)
  

  Update:  Following your comment: 

  >>> a='Beautiful, is; better*than\nugly'
>>> import re
>>> re.split('; |, |\*|\n',a)
['Beautiful', 'is', 'better', 'than', 'ugly']
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/4998687)
 This is how the regex look like: 

  import re
# "semicolon or (a comma followed by a space)"
pattern = re.compile(r";|, ")

# "(semicolon or a comma) followed by a space"
pattern = re.compile(r"[;,] ")

print pattern.split(text)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/54494720)
 You can use a gencomp to replace delimeters and then split: 

  names = "John, Paul; Sally/Frank"

''.join(',' if i in ';/' else i for i in names).split(',')
# ['John', ' Paul', ' Sally', 'Frank']
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/54494515)
 If you want to do it in pure python: 

  names = "John, Paul; Sally/Frank"
delims = [",", ";", "/"]

for x in delims[1:]:
  names = names.replace(x, delims[0])
names.split(",")
  

 But @blhsing's answer is good and  re  is in the stdlib so I don't see why you wouldn't use that. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/21208277)
 You can do that with Python's  re  module. 

  import re
s='(twoplusthree)plusfour'
list(filter(None, re.split(r"(plus|[()])", s)))
  

 You can leave out the list if you only need an iterator. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/47001820)
 If you were only interested in  '('  or  ')'  then https://docs.python.org/3.5/library/stdtypes.html#str.partition would have been sufficient. 

 Since you have multiple delimiters AND you want to keep them, you can use https://docs.python.org/3.5/library/re.html#re.split with a capture group: 

  import re

s = "123(45)678"

print(re.split(r'([()])', s))
# ['123', '(', '45', ')', '678']
  



