Query: Getting a list of all subdirectories in the current directory
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/26237100)
 You can get the list of subdirectories (and files) in Python 2.7 using os.listdir(path) 

  import os
os.listdir(path)  # list of subdirectories and files
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19017207)
 Implemented this using python-os-walk. (http://www.pythonforbeginners.com/code-snippets-source-code/python-os-walk/) 

  import os

print("root prints out directories only from what you specified")
print("dirs prints out sub-directories from root")
print("files prints out all files from root and directories")
print("*" * 20)

for root, dirs, files in os.walk("/var/log"):
    print(root)
    print(dirs)
    print(files)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/39222660)
 Listing Out only directories 

  print("\nWe are listing out only the directories in current directory -")
directories_in_curdir = filter(os.path.isdir, os.listdir(os.curdir))
print(directories_in_curdir)
  

 Listing Out only files in current directory 

  files = filter(os.path.isfile, os.listdir(os.curdir))
print("\nThe following are the list of all files in the current directory -")
print(files)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/19204316)
 With full path and accounting for path being  .   ..      ....subfolder  etc: 

  import os pprint
pprint.pprint([os.path.join(os.path.abspath(path) x[0]) \
    for x in os.walk(os.path.abspath(path))])
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/42420268)
 This answer didn't seem to exist already. 

  directories = [ x for x in os.listdir('.') if os.path.isdir(x) ]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/13214966)
 Just in case... Getting all files in the directory and subdirectories matching some pattern (*.py for example): 

  import os
from fnmatch import fnmatch

root = '/some/directory'
pattern = "*.py"

for path, subdirs, files in os.walk(root):
    for name in files:
        if fnmatch(name, pattern):
            print os.path.join(path, name)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/1274530)
 walk the tree with http://docs.python.org/library/os.html#os.walk and filter content with http://docs.python.org/library/glob.html: 

  import os
import glob

asps = []
for root, dirs, files in os.walk('/path/to/dir'):
    asps += glob.glob(os.path.join(root, '*.asp'))
  

 or with http://docs.python.org/library/fnmatch.html#fnmatch.filter: 

  import fnmatch
for root, dirs, files in os.walk('/path/to/dir'):
    asps += fnmatch.filter(files, '*.asp')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/52768376)
 Copy paste friendly in  ipython : 

  import os
d='.'
folders = list(filter(lambda x: os.path.isdir(os.path.join(d, x)), os.listdir(d)))
  

 Output from  print(folders) : 

  ['folderA', 'folderB']
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/16910459)
 Use  os.walk . It will do the recursion for you. See http://www.pythonforbeginners.com/code-snippets-source-code/python-os-walk/ for an example. 

  total = 0
for root, dirs, files in os.walk(folder):
    total += len(files)
  



