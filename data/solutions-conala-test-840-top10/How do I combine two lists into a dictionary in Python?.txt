Query: How do I combine two lists into a dictionary in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/7271421)
  dict(zip([1,2,3,4], ['a', 'b', 'c', 'd']))
  

 http://docs.python.org/library/functions.html 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/46650721)
 You can use dictionary comprehension for Python dicts: 

  a1 = {'x1':1, 'x2':2, 'x3':3}
a2 = {'x1':2, 'x2':3, 'x3':4}

a3 = {
    key: a1.get(key, 0) + a2.get(key, 0)
    for key in set(a1.keys() + a2.keys())
}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/11634273)
 You can use  defaultdict : 

  >>> from collections import Counter, defaultdict
>>> c1 = Counter({'item1': 4, 'item2':2, 'item3': 5, 'item4': 3})
>>> c2 = Counter({'item1': 6, 'item2':2, 'item3': 1, 'item5': 9})
>>> c3 = defaultdict(list)
>>> for c in c1, c2:
...     for k, v in c.items():
...         c3[k].append(v)
... 
>>> c3
defaultdict(<type 'list'>, {'item2': [2, 2], 'item3': [5, 1], 'item1': [4, 6],
'item4': [3], 'item5': [9]})
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/51486553)
 Combine dictionary construction and list comprehension: 

  [dict(zip(lst1, l)) for l in lst2]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/49190864)
 You can do this with a split and a combine function using a  defaultdict  

  def split(names, cuisines):
    for name, cuisine in zip(names, cuisines):
        for c in cuisine.split(','):
            yield name, c
from collections import defaultdict
def combine(splits):
    result = defaultdict(list)
    for name, cuisine in splits:
        result[cuisine].append(name)
    return(result)
  

 
  combine(split(names, cuisines))
  
 

  defaultdict(list,
            {'Canadian': ['Georgie Porgie'],
             'Chinese': ['Dumplings R Us'],
             'Malaysian': ['Queen St. Cafe'],
             'Mexican': ['Mexican Grill'],
             'Pub Food': ['Georgie Porgie', 'Deep Fried Everything'],
             'Thai': ['Queen St. Cafe']})
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/36030558)
 Using  set ,  sorted  to combine to two list into one and to sort: 

  >>> a1 = {u'2016-03-11': [u'20:00', u'22:10']}
>>> a2 = {u'2016-03-11': [u'20:00', u'23:10'],u'2016-03-12': [u'20:00', u'22:10']}


>>> an = {}
>>> for d in a1, a2:
...     for key in d:
...         an[key] = sorted(set(an.get(key, []) + d[key]))
...         # ^^  Merge two lists (dictionary values) into one, and sort
... 
>>> print an
{u'2016-03-11': [u'20:00', u'22:10', u'23:10'],
 u'2016-03-12': [u'20:00', u'22:10']}
  

 

  UPDATE  

 alternative version using dictionary comprehension (assuming merging only two dictionaries): 

  >>> {key: sorted(set(a1.get(key,[]) + a2.get(key,[]))) for key in set(a1)|set(a2)}
{u'2016-03-11': [u'20:00', u'22:10', u'23:10'],
 u'2016-03-12': [u'20:00', u'22:10']}
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/11632185)
  from collections import Counter
c1 = Counter({'item1': 4, 'item2':2, 'item3': 5, 'item4': 3})
c2 = Counter({'item1': 6, 'item2':2, 'item3': 1, 'item5': 9})
c3 = {}
for c in (c1, c2):
    for k,v in c.iteritems():
        c3.setdefault(k, []).append(v)
  

  c3  is now:  {'item1': [4, 6], 'item2': [2, 2], 'item3': [5, 1], 'item4': [3], 'item5': [9]}  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/1495552)
  

  from collections import defaultdict
my_dict = defaultdict(list)

for key,value in original_list:
    my_dict[key].append(value)
  

 Combining the two dicts can be done like this (note that duplicates will be preserved): 

  for key,value in orig_dict:
    new_dict[key].extend(value)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/6883110)
  [{'k': c, 'v': c if c in other_list else 0} for c in correct_list]
  

 By the way, if the only elements of the dictionaries are k and v, consider building a dictionary instead of a list of dictionaries: 

  >>> dict((c, c if c in other_list else 0) for c in correct_list)
{1: 0, 2: 0, 3: 0, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 0, 10: 10}
  



