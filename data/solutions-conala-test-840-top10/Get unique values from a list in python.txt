Query: Get unique values from a list in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/37549596)
 Set is a collection of ordered and unique elements. So, you can use set as below to get a unique list: 

  unique_list = list(set([u'nowplaying', u'PBS', u'PBS', u'nowplaying', u'job', u'debate', u'thenandnow']))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/48981277)
 This is simple solution- 

  list=[u'nowplaying', u'PBS', u'PBS', u'nowplaying', u'job', u'debate', u'thenandnow']
list=set(list)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/30565816)
 You can use http://docs.scipy.org/doc/numpy/reference/generated/numpy.unique.html: 

  import numpy
import operator
print numpy.unique(reduce(operator.add, [['a','b'], ['a', 'b','c'], ['a']]))
# ['a' 'b' 'c']
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/37858531)
 As a bonus, https://docs.python.org/2/library/collections.html#collections.Counter is a simple way to get both the unique values and the count for each value: 

  from collections import Counter
l = [u'nowplaying', u'PBS', u'PBS', u'nowplaying', u'job', u'debate', u'thenandnow']
c = Counter(l)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/49075976)
 use set to de-duplicate a list, return as list 

  def get_unique_list(lst):
        if isinstance(lst,list):
            return list(set(lst))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/47679364)
 A simple solution would be agg pd.unique i.e  

  df = pd.DataFrame({'x' : [['v','w','x','v','x']]})

df['x'].agg(pd.unique) # Also np.unique

0    [v, w, x]
Name: x, dtype: object
  

   

  df['x'].agg(set).agg(list)

0    [v, w, x]
Name: x, dtype: object
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/27305828)
 To be consistent with the type I would use: 

<pre class="lang-python3 prettyprint-override"> mylist = list(set(mylist))
  



