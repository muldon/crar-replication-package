Query: How to compare two lists in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1388864)
 You can use  

  def returnMatches(a,b):
       return list(set(a) & set(b))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/3726362)
 If you mean lists, try  == : 

  l1 = [1,2,3]
l2 = [1,2,3,4]

l1 == l2 # False
  

 If you mean http://docs.python.org/library/array.html: 

  l1 = array('l', [1, 2, 3])
l2 = array('d', [1.0, 2.0, 3.0])
l1 == l2 # True
l2 = array('d', [1.0, 2.0, 3.0, 4.0])
l1 == l2 # False
  

 If you want to compare strings (per your comment): 

  date_string  = u'Thu Sep 16 13:14:15 CDT 2010'
date_string2 = u'Thu Sep 16 14:14:15 CDT 2010'
date_string == date_string2 # False
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/35713174)
 Just use a list comprehension: 

  def returnNotMatches(a, b):
    return [[x for x in a if x not in b], [x for x in b if x not in a]]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/34631617)
 You can use: 

  a = [1, 3, 4, 5, 9, 6, 7, 8]
b = [1, 7, 0, 9]
same_values = set(a) & set(b)
print same_values
  

 Output: 

  set([1, 7, 9])
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/29160763)
 You can  flatten  your lists then use  set  to keep the unique elements then compare : 

  >>> from compiler.ast import flatten
>>> list1=[[1,4],5,4]
>>> list2=[5,4,[1,4]]
>>> set(flatten(list1))==set(flatten(list2))
True
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/46082100)
 One way would be to compare a  set  of each list 

  >>> list_a = ['one', 'two', 'three']
>>> list_b = ['three', 'one', 'two']
>>> set(list_a) == set(list_b)
True
  

 Otherwise if there may be duplicates, and you want to ensure they have the same number of each element then you could do 

  >>> sorted(list_a) == sorted(list_b)
True
  



