Query: Python date string to date object
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/44984277)
 you have a date string like this, "24052010" and you want date object for this, 

  from datetime import datetime
cus_date = datetime.strptime("24052010", "%d%m%Y").date()
  

 this cus_date will give you date object. 

 you can retrieve date string from your date object using this, 

  cus_date.strftime("%d%m%Y")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2803877)
 You can use http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior in the http://docs.python.org/library/datetime.html package of Python: 

  >>> datetime.datetime.strptime('24052010', "%d%m%Y").date()
datetime.date(2010, 5, 24)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/32868633)
 To create a date object from the arabic date string: 

  #!/usr/bin/env python
# -*- coding: utf-8 -*-
from datetime import date

d = date(*map(int, u"١٩٩٤-٠٤-١١".split('-')))
# -> datetime.date(1994, 4, 11)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/5868392)
  dateobj.date()  will give you the  datetime.date  object, such as  datetime.date(2011, 5, 1)  

 Use: 

  dateobj = datetime.datetime.strptime(datestr,'%Y-%m-%d').date()
  

 See also: Python documentation on https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/35357691)
 Use time module to convert data. 

 Code snippet: 

  import time 
tring='20150103040500'
var = int(time.mktime(time.strptime(tring, '%Y%m%d%H%M%S')))
print var
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/15557928)
 This should work: 

  import datetime
s = "30-01-12"
slist = s.split("-")
sdate = datetime.date(int(slist[2]),int(slist[0]),int(slist[1]))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/7959464)
  In [105]: import datetime as dt
  

 This parses the string and returns a  dt.datetime  object: 

  In [106]: dt.datetime.strptime('2011-06-11',"%Y-%m-%d")
Out[106]: datetime.datetime(2011, 6, 11, 0, 0)
  

 This returns a  dt.date  object: 

  In [108]: dt.datetime.strptime('2011-06-11',"%Y-%m-%d").date()
Out[108]: datetime.date(2011, 6, 11)
  

 The  strptime  method is documented http://docs.python.org/library/datetime.html#datetime.datetime.strptime, and the format string  "%Y-%m-%d"  is explained <a href="http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior" . 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/26154047)
  print then.date()
  

 What you want is a datetime.date object. What you have is a datetime.datetime object. You can either change the object when you print as per above, or do the following when creating the object: 

  then = datetime.datetime.strptime(when, '%Y-%m-%d').date()
  



