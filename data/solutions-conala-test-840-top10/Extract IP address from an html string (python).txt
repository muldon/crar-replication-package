Query: Extract IP address from an html string (python)
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2890922)
 You can use the following regex to capture only valid IP addresses 

  re.findall(r'\b25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\.25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\.25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\.25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\b',s)
  

 returns 

  ['165', '91', '15', '131']
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/32042548)
 easiest way to find the ip address from the log.. 

   s = "<html><head><title>Current IP Check</title></head><body>Current IP Address: 165.91.15.131</body></html>"
 info = re.findall(r'[\d.-]+', s)
  

 
   In [42]: info 
  
   Out[42]: ['165.91.15.131'] 
 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/2890905)
 Remove your capturing group: 

  ip = re.findall( r'[0-9]+(?:\.[0-9]+){3}', s )
  

  

  ['165.91.15.131']
  

 Notes: 

 
 If you are parsing HTML it might be a good idea to look at http://www.crummy.com/software/BeautifulSoup/. 
 Your regular expression matches some invalid IP addresses such as  0.00.999.9999 . This isn't necessarily a problem, but you should be aware of it and possibly handle this situation. You could change the  +  to  {1,3}  for a partial fix without making the regular expression overly complex. 
 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/14445726)
 This is how I've done it.  

  import re
import urllib2

def getIP():
    ip_checker_url = "http://checkip.dyndns.org/"
    address_regexp = re.compile ('\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')
    response = urllib2.urlopen(ip_checker_url).read()
    result = address_regexp.search(response)

    if result:
            return result.group()
    else:
            return None
  

 get_IP() returns ip into a string or None 

 You can substitute address_regexp for other regular expressions if you prefer a more accurate parsing or maybe change the web service provider. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/5868370)
 Use a HTML scraping library, like http://www.crummy.com/software/BeautifulSoup/. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/5868375)
 You can use a http://docs.python.org/library/re.html to grab a text within another text. If you provide the relevant part of your  htmlSource  we can post one. 

 Here are some posts on retrieving the IP address: http://commandline.org.uk/forum/topic/352/ 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/5868379)
 I would suggest that you use something that's more programmatic like http://ifconfig.me rather than ipchicken which is ad laden. ifconfig.me behaves different when being queried by something like cURL. 

 If you want to parse the HTML and get out the IP address with ipchicken, use http://www.crummy.com/software/BeautifulSoup/ or http://docs.python.org/library/xml.etree.elementtree.html. 

  update  : http://ip.appspot.com/ is something that has  only  a programmatic interface.  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/49251179)
 You can use following regex to extract valid IP without following errors 
1.Some detected  123.456.789.111  as valid IP 
2.Some don't detect  127.0.00.1  as valid IP 
3.Some don't detect IP that start with zero like  08.8.8.8  

 So here I post a regex that works on all above conditions.   

 
   Note : I have extracted more than 2 millions IP without any problem with following regex. 
 

  (?:(?:1\d\d|2[0-5][0-5]|2[0-4]\d|0?[1-9]\d|0?0?\d)\.){3}(?:1\d\d|2[0-5][0-5]|2[0-4]\d|0?[1-9]\d|0?0?\d)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/46246679)
 You can simply use a http://www.regular-expressions.info/ip.html to find the IP address, independently from what's before. 

 For example this one : 

  \b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b
  

  

  >>> import re
>>> re.findall(r'\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b', '[<Device: 192.168.222.123:8075>]')
['192.168.222.123']
>>> re.findall(r'\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b', '[<SomethingElse: 192.168.222.123:8075>]')
['192.168.222.123']
>>> re.findall(r'\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:\d{,5}', '[<SomethingElse: 192.168.222.123:8075>]')
['192.168.222.123:8075']
  



