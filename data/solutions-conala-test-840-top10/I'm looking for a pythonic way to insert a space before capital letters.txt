Query: I'm looking for a pythonic way to insert a space before capital letters
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/199126)
 Have a look at my answer on  https://stackoverflow.com/questions/155303/net-how-can-you-split-a-caps-delimited-string-into-an-array#155487  

  Edit:  Maybe better to include it here. 

  re.sub(r'([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))', r'\1 ', text)
  

 For example: 

  "SimpleHTTPServer" => ["Simple", "HTTP", "Server"]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/45778633)
 Maybe you would be interested in one-liner implementation without using regexp: 

  ''.join(' ' + char if char.isupper() else char.strip() for char in text).strip()
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/199094)
  

  re.sub('([A-Z])', r' \1', str)
  

 Of course, that will only work for ASCII characters, if you want to do Unicode it's a whole new can of worms :-) 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/199120)
 If there are consecutive capitals, then Gregs result could
not be what you look for, since the \w consumes the caracter
in front of the captial letter to be replaced. 

  >>> re.sub(r"(\w)([A-Z])", r"\1 \2", "WordWordWWWWWWWord")
'Word Word WW WW WW Word'
  

 A look-behind would solve this: 

  >>> re.sub(r"(?<=\w)([A-Z])", r" \1", "WordWordWWWWWWWord")
'Word Word W W W W W W Word'
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/50971905)
  re.sub(r'([A-Z])', r',\1', re.sub(r'[,:=/]', '', input_))
  

 output: 

  ',Areas for further improvement,The school’s leaders are rightly seeking to improve the following areas235,Continue to focus on increasing performance at the higher levels,Pupils’literacy and numeracy skills across the curriculum,Standardsin science throughout the school,Pupils’numerical reasoning skills'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/46760056)
 If you have acronyms, you probably do not want spaces between them. This two-stage regex will keep acronyms intact (and also treat punctuation and other non-uppercase letters as something to add a space on): 

  re_outer = re.compile(r'([^A-Z ])([A-Z])')
re_inner = re.compile(r'(?<!^)([A-Z])([^A-Z])')
re_outer.sub(r'\1 \2', re_inner.sub(r' \1\2', 'DaveIsAFKRightNow!))
  

 The output will be:  'Dave Is AFK Right Now!   


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50971941)
 You can apply  re.sub  twice: 

  import re
s = ',Areas for further improvement,The school’s leaders are rightly seeking to improve the following areas:,,========2========,,3/5,Continue to focus on increasing performance at the higher levelsPupils’,literacy and numeracy skills across the curriculumStandards,in science throughout the schoolPupils’,numerical reasoning skills'
new_s = re.sub('[A-Z]', lambda x:f',{x.group()}', re.sub('[,:\=]+', '', s))
  

 Output: 

  ',Areas for further improvement,The school’s leaders are rightly seeking to improve the following areas23/5,Continue to focus on increasing performance at the higher levels,Pupils’literacy and numeracy skills across the curriculum,Standardsin science throughout the school,Pupils’numerical reasoning skills'
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/5366539)
 Using  re.sub  you should be able to make a pattern that grabs a lowercase and uppercase letter and substitutes them for the same two letters, but with a space in between: 

  import re
re.sub(r'([a-z][.?]?)([A-Z])', '\\1\n\\2', mystring)
  



