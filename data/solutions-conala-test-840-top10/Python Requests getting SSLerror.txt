Query: Python Requests getting SSLerror
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/28668711)
 You can disable certificate verification: 

  requests.get('https://www.reporo.com/', verify=False)
  

 but without certificate verification there is no https://en.wikipedia.org/wiki/Man-in-the-middle_attack protection. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/10668173)
 From requests http://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification: 

 
   Requests can verify SSL certificates for HTTPS requests, just like a web browser. To check a hostâ€™s SSL certificate, you can use the verify argument: 
 

  >>> requests.get('https://kennethreitz.com', verify=True)
  

 If you don't want to verify your SSL certificate, make  verify=False   


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/47603690)
 Its an issue you will have to resolve by whitelisting the CA certificate used to sign the remote server certificate you are trying to connect to from your system settings. But for the purposes of testing out only, you can turn off the verification using: 

  r = requests.get('https:...../PingWs?wsdl',verify=False)
  

 Don't use this in production. 

  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/30373147)
 If you don't bother about certificate just use  verify=False . 

  import requests

url = "Write your url here"

returnResponse = requests.get(url, verify=False)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/44509839)
 I had the same error. Downgrading requests from requests-2.17.3 to requests-2.11.0 solved it for me.  

  pip uninstall requests
pip install requests==2.11.0
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/12865159)
 The name of CA file to use you could pass via  verify : 

  cafile = 'cacert.pem' # http://curl.haxx.se/ca/cacert.pem
r = requests.get(url, verify=cafile)
  

 If you use  verify=True  then  requests  uses its own CA set that might not have CA that signed your server certificate. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47464383)
 Ran into similar issue and fixed by following: 

  pip install -U requests[security]
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/20521797)
  You're question prompted me to investigate the version. I installed requests 2.1.0 and now I see Timeout exceptions, instead of SSLError exceptions, which is what I expected to see. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/47365138)
  res=requests.get('https://...', cert='/certificateTests/katello-server-ca.crt', verify=True)
  

 The  cert  argument in  requests.get  is used to specify the client certificate and key which should be used for mutual authentication. It is not used to specify the trusted CA as the  --cacert  argument in curl does. Instead you should use the  verify  argument: 

  res=requests.get('https://...', verify='/certificateTests/katello-server-ca.crt')
  

 For more information see http://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification and http://docs.python-requests.org/en/master/user/advanced/#client-side-certificates in the documentation for  requests . 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/40492082)
 You want to be on OpenSSL 1.0.2 and python 2.7.12.  You will probably also want the latest curl.   

  brew update
brew upgrade openssl
brew upgrade curl
brew upgrade python

python --version # make sure you have python 2.7.12
curl https://randomuser.me/api/ # to verify
  



