Query: How to empty a file using Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/33164330)
 An empty csv file can be created like any other file - you just have to perform any operation on it. With bash, you can do  touch /path/to/my/file.csv . 

 Note that you do not have to create an empty file for python to write in. Python will do so automatically if you write to a non-existing file. In fact, creating an empty file from within python means to open it for writing, but not writing anything to it. 

  with open("foo.csv", "w") as my_empty_csv:
  # now you have an empty file already
  pass  # or write something to it already
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/36649904)
 Not sure why you wouldn't use  os , but I suppose if you really wanted you could open the file and get the first character.  

  with open('friends.txt') as friendsfile:
    first = friendsfile.read(1)
    if not first:
        print('friendsfile is empty')
    else:
        #do something
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10794309)
 This should work as you wish: 

  file(filename_out, "w").write(file(filename_in).read().strip())
  

  EDIT:  Although previous code works in python 2.x, it does not work python 3 (see @gnibbler comment) For both version use this: 

  open(filename_out, "w").write(open(filename_in).read().strip())
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/10794299)
  strip()  removes leading and trailing whitespace characters. 

  with open("transfer-out/" + file, "r") as f:
    for line in f:
        cleanedLine = line.strip()
        if cleanedLine: # is not empty
            print(cleanedLine)
  

 Then you can redirect the script into a file  python clean_number.py > file.txt , for example. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/4914288)
 Opening a file creates it and (unless append ('a') is set) overwrites it with emptyness, such as this: 

  open(filename, 'w').close()
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35393288)
 Since the empty string is a  falsy  value, you may use http://www.tutorialspoint.com/python/string_strip.htm: 

  for line in f:
    if not line.strip():
        ....
  

 The above ignores lines with only whitespaces. 

 If you want  completely empty  lines you may want to use this instead: 

  if line in ['\r\n', '\n']:
    ...
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/27920544)
 I liked the fileinput approach as explained in this answer:
https://stackoverflow.com/questions/16623579/deleting-a-line-from-a-text-file-python/16624863#16624863 

 Say for example I have a file which has empty lines in it and I want to remove empty lines, here's how I solved it: 

  import fileinput
import sys
for line_number, line in enumerate(fileinput.input('file1.txt', inplace=1)):
    if len(line) > 1:
            sys.stdout.write(line)
  

 
   Note: The empty lines in my case had length 1 
 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/37875319)
 Try something like this: 

  def is_empty(gzfile):
    size = gzfile.read().
    if len(size) > 0:
         gzfile.rewind()
         return False
    else:
         return True
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/10794379)
 Change your 'lines' line to use the following generator and it should do the trick. 

  lines = (line.strip() for line in fh.readlines() if len(line.strip()))
  



