Query: generate pdf from markdown file
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/15961624)
 I was able to fulfil this need using http://sphinx-doc.org/ after all. I used http://miktex.org/ to generate the PDF on Windows.  

 Install MiKTeX (< 200mb) 

  wget -nv -N http://mirrors.ctan.org/systems/win32/miktex/setup/miktex-portable-2.9.4757.exe
7z.exe x -y miktex-portable-2.9.4757.exe -o"miktex"
  

 Add the bin directory to your path 

  SET Path=%Path%;%CD%\miktex\miktex\bin
  

 Run Sphinx's "make.bat" to generate the .tex file. 

  SET SPHINXOPTS=-W -E
make.bat latex
  

 Invoke MiKTeX's pdflatex: 

  cd build/latex
pdflatex.exe YOUR_PROJECT_NAME.tex
  

 The resultant PDF will be in your build/latex directory 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/36313217)
 The functions you want are in the http://ipython.readthedocs.org/en/stable/api/generated/IPython.display.html#module-IPython.display. 

  from IPython.display import display, Markdown, Latex
display(Markdown('*some markdown* $\phi$'))
# If you particularly want to display maths, this is more direct:
display(Latex('\phi'))
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/4136113)
 I have done and would do it in two steps.  First, I'd use https://pypi.python.org/pypi/Markdown to make HTML out of my Markdown, and then I'd use https://github.com/xhtml2pdf/xhtml2pdf to make a PDF file. 

  Edit (2014):  

 If I were doing this now, I might choose http://weasyprint.org/ as my HTML-to-PDF tool; it does a beautiful job, and I've used it on a couple projects recently. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/43913035)
 You are basically asking for two different things: 

 
   Markdown cells outputting code results.  

 
   I'd like to count some stuff, generate some results and include them in markdown. [...]  I'd like to have   a template in markdown and insert values   generated by the program in the notebook 
  
   Code cells outputting markdown   

 
   I'd like such command:  print '$\phi$'  to generate phi symbol, just like in markdown. 
  
 

 Since 2. is already covered by https://stackoverflow.com/questions/36288670/jupyter-notebook-output-in-markdown/36313217#36313217 (basically: use  Latex()  or  Markdown()  imported from  IPython.display ), I will focus on the first one: 

 

 1. Markdown Template with inserted variables</h3>

 With the Jupyter extension https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/python-markdown it actually is possible to do exactly what you describe. 

 https://github.com/ipython-contrib/jupyter_contrib_nbextensions#installation can be found on the github page of nbextensions. Make sure you'll enable the python markdown extension using a https://github.com/ipython-contrib/jupyter_contrib_nbextensions#3-enablingdisabling-extensions or the https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator.  

 With the extension, variables are accessed via  {{var-name}} . An example for such a markdown template could look like this: 

 
    Python Code in Markdown Cells  
  
   The variable a is {{a}}  
  
   You can also embed LateX: {{b}} in here! 
  
   Even images can be embedded: {{i}} 
 

 Naturally all variables or images  a ,  b ,  i  should be set in previous code. And of course you may also make use of Markdown-Latex-style expressions (like  $\phi$ ) without the print command. This image is from the wiki of the extension, demonstrating the capability. 

 https://i.stack.imgur.com/NhDBk.png 

 

 Further info on this functionality being integrated into ipython/jupyter is discussed in the issue trackers for https://github.com/ipython/ipython/issues/2958 and https://github.com/jupyter/notebook/issues/1098. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/31117621)
 Update for 2015: 

 I would use a combination of https://pypi.python.org/pypi/pdfkit and https://pythonhosted.org/Markdown/install.html. While this isn't a pure Python solution, but I've found it works best, especially if you're using Python 3. 

 First, install a prereq (or download here: http://wkhtmltopdf.org/downloads.html): 

  # Ubuntu
apt-get install wkhtmltopdf
  

  

  pip install pdfkit
pip install markdown
  

  

  from markdown import markdown
import pdfkit

input_filename = 'README.md'
output_filename = 'README.pdf'

with open(input_filename, 'r') as f:
    html_text = markdown(f.read(), output_format='html4')

pdfkit.from_string(html_text, output_filename)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/5636277)
  Markdown in Python  has an http://www.freewisdom.org/projects/python-markdown/HeaderId that does this. 
It also lets you specify an  id  you like for the header, like this: 

 
A header            {#a-header}
========
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/14395791)
 you cannot directly convert an ipynb into a pdf, so the error message is right!
You need to first convert it into latex:  nbconvert.py -f latex your_nb.ipynb  and then use  pdflatex your_nb.tex  to build the pdf file. 

 . 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/18750474)
 IF all else fails as tex can be quite moody... install wkhtmltopdf 

 \i then use nbconvert to create a html, and then wkhtmltopdf to create the pdf. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/47254623)
 .  You can just paste the markdown code in to a cell in a jupyter notebook and change the dropdown menu below "Widgets" in the notebook from "code" to "markdown".  Then hit shift enter and it renders the markdown.  You can then download the notebook as pdf. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/33156843)
 Well one way is to use markdown. You can use  df.to_html() . This converts the dataframe into a html table. From there you can put the generated html into a markdown file (.md) (see http://daringfireball.net/projects/markdown/basics). From there, there are utilities to convert markdown into a pdf (https://www.npmjs.com/package/markdown-pdf).  

 One all-in-one tool for this method is to use Atom text editor (https://atom.io/). There you can use an extension, search "markdown to pdf", which will make the conversion for you. 

 Note: When using  to_html()  recently I had to remove extra '\n' characters for some reason. I chose to use  Atom -> Find -> '\n' -> Replace "" . 

 Overall this should do the trick! 



