Query: How to convert the following string in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51430192)
 Using  str.replace  

  Ex:  

  a = '0,0127'
print(float(a.replace(",", ".")))
  

  Output:  

  0.0127
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/12916966)
 Could just use basic string functions: 

  s = r'\x5f\x63\x6c\x6f\x73\x65\x28'
s.replace(r'\x', ' ').lstrip()
# '5f 63 6c 6f 73 65 28'

# or
s[2:].replace(r'\x', ' ')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/23117893)
 You can also do it like this (string to list conversion here, then conversion to a dictionary) 

      string_list = """
    Hello World
    Goodbye Night
    Great Day
    Final Sunset
    """.split()

    string_list = dict(zip(string_list[::2],string_list[1::2]))

    print string_list
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/51430199)
 The reason this isn't working is because the decimal type only recognizes periods ( . ) for the decimal delimiter as this is what is common in, e.g., english. You could manually change the string or do 

  a = a.replace(",", ".")
float(a)
  

 Which should work. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/38572645)
 You can use the https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior and https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior methods of the  datetime  module. The following does what you want: 

  from datetime import datetime as dt

s = "July 25, 2016 - 11:51:32 PM"
old_format = '%B %d, %Y - %H:%M:%S %p'
new_format = '%Y%m%d'
r = dt.strptime(s, old_format).strftime(new_format)
print(r)
# '20160725'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/51706173)
 Following on from VinceP's answer, to convert a datetime Series in-place do the following:  

  df['Column_name']=df['Column_name'].  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50445611)
 If you wish to use variable inside string, you can do it since Python 3.6: 

  date = "2018-05-20T07:06:23.226"
d = datetime.datetime.strptime(f'{date}', '%Y-%m-%dT%H:%M:%S.%f')
new_date = d.strftime('%y-%m-%d %H:%M %p')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/53276952)
 Use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.replace.html with escape parentheses by  \  and  regex=True  for substrings replacement: 

  df = df.replace(r'[,%\(\)-]','', regex=True).astype(float)
print (df)
   Values1  Values2
a  9710.00  19200.0
b    41.83    -21.7
c  7857.00  12333.0
d    -7.15      1.2
e   268.00     22.0
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/11747716)
 You can do this without using python string methods -- try http://docs.scipy.org/doc/numpy/reference/generated/numpy.fromstring.html: 

  >>> numpy.fromstring(v1fColor, dtype='uint8', sep=',')
array([ 2,  4, 14,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 12,  4,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 15,  6,  0,  0,
        0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0, 20,  9,  0,  0,  0,
        2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  6,  0,  0,  0,  1,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10,  8,  0,  0,  0,  1,  2,
        0,  0,  0,  0,  0,  0,  0,  0,  0, 17, 17,  0,  0,  0,  3,  6,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  7,  5,  0,  0,  0,  2,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  4,  3,  0,  0,  0,  1,  1,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  6,  6,  0,  0,  0,  2,  3], dtype=uint8)
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/10693785)
 The following Python code will turn your string into a list of strings: 

  import ast
teststr = "['aaa','bbb','ccc']"
testarray = ast.literal_eval(teststr)
  



