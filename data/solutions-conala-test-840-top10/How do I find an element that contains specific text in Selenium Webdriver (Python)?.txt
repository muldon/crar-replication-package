Query: How do I find an element that contains specific text in Selenium Webdriver (Python)?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/30439718)
 According to the Webdriver https://w3c.github.io/webdriver/webdriver-spec.html, there is no way to get the parent element directly using WebDriver. https://selenium-python.readthedocs.org/api.html#selenium.webdriver.remote.webelement.WebElement.parent of a  WebElement  in selenium Python bindings is used internally and doesn't refer to the direct parent of an element. It refers to the  WebDriver  instance you called  find_element_by_*  on: 

 
    parent  
  
   Internal reference to the WebDriver instance this element was found from. 
 

 You can get the parent element using xpath: 

  parent_row = td.find_element_by_xpath("..")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/18701085)
 Try the following: 

  driver.find_elements_by_xpath("//*[contains(text(), 'My Button')]")
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/51240410)
 You can simplify your code as below: 

  f name in name_list:
    driver.find_element_by_xpath("//*[contains(text(), '%s')]" % name).click()
  

  

  f name in name_list:
    try:
        driver.find_element_by_xpath("//*[contains(text(), '{}')]".fmat(name)).click()
    except:
        print("Element with name '%s' is not found" % name)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/12323689)
 you could try an xpath like: 

  '//div[contains(text(), "{0}") and @class="inner"]'.format(text)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/53813097)
 //* will be looking for any HTML tag. Where if some text is common for Button and div tag and if //* is categories it will not work as expected. If you need to select any specific then You can get it by declaring HTML Element tag.  

  driver.find_element_by_xpath("//div[contains(text(),'Add User')]")
driver.find_element_by_xpath("//button[contains(text(),'Add User')]")
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/48484175)
 Try below solution to get required text: 

  span = driver.find_element_by_xpath('//span[span="(Total)"]')
required_text =  driver.execute_script('return arguments[0].childNodes[0].textContent', span).strip()
  

  Output of  print(required_text)   

  'My Text'
  

 Note that  span  with text  "My Text"  is not a sibling of  span  with text  "(Total)" , but its parent, so you can not fetch it with  preceding-sibling::span  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/42455532)
 You should get text of parent element as below: 

  quarterly_results_data = driver.find_element_by_xpath("//*[contains(text(),'Net Sales')]/parent::*")
print(quarterly_results_data.text)
  

  

  quarterly_results_data = driver.find_element_by_xpath("//tr[td[text()='Net Sales']]")
print(quarterly_results_data.text)
  

 If you need to print out each  td  value separately: 

  f child in quarterly_results_data.find_elements_by_xpath('./td'):
    print(child.text)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/51240445)
 Use string formatting. Put a placeholder into the xpath string and fill it with a variable value: 

  name_list = ["Kate", "David"]

for name in name_list:
    xpath = "//*[contains(text(),'{}')]".format(name)  
    driver.find_element_by_xpath(xpath).click()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/51240359)
  

  name_list = ["Kate", "David"]

for name in name_list:
    xpath = "//*[contains(text(), '" + str(name) + "')]" # simplified
    print xpath
    list = driver.find_elements_by_xpath(xpath) # locate all elements by xpath
    if len(list) > 0: # if list is not empty, click on element
        list[0].click() # click on the first element in the list
    time.sleep(5)
  

 This will prevent from throwing  

  common.exceptions.NoSuchElementException
  

 Note: also make sure, that you using the correct xPath. 



