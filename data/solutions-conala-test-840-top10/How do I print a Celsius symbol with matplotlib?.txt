Query: How do I print a Celsius symbol with matplotlib?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/8440188)
  ax.set_xlabel(u'Temperature (℃)')
  

 should work: 

   

  In [56]: matplotlib.__version__
Out[56]: '1.0.1'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/8440294)
 Use the LaTeX interpreter to make the degree symbol. 

  ax.set_xlabel('Temperature ($^\circ$C)')
  

 Here's the results: 

   


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/32281709)
 To make this work in matplotlib without the LaTex interpreter, use unicode formatting  AND  the unicode character string 

  from numpy import arange, cos, pi
from matplotlib.pyplot import (figure, axes, plot, xlabel, ylabel, title,
                               grid, show)
figure(1, figsize=(6,4))
ax = axes([0.1, 0.1, 0.8, 0.7])
t = arange(0.0, 1.0 + 0.01, 0.01)
s = 3*cos(2*pi*t)+25
plot(t, s)

title('Average High Temperature')
xlabel('Year')
ylabel(u'Temp (\u00B0C)')
grid(True)
show()
  

 https://i.stack.imgur.com/thQ8P.png 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/39296523)
 3 lines: 

  >>> Celsius = [39.2, 36.5, 37.3, 37.8]
>>> msg = '%g in Celsius is equivalent to %g in Fahrenheit'
>>> print '\n'.join(msg % (c, (9. * c)/5. + 32.) for c in Celsius)
  

 yields: 

 
   39.2 in Celsius is equivalent to 102.56 in Fahrenheit 
  36.5 in Celsius is equivalent to 97.7 in Fahrenheit 
  37.3 in Celsius is equivalent to 99.14 in Fahrenheit 
  37.8 in Celsius is equivalent to 100.04 in Fahrenheit   
 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/25971039)
  

  ax.set_xlabel(u'Temperature (\N{DEGREE SIGN}C)')
  

 If you want to make it compatible to TeX  and  non-TeX, then one probably has to use both ways and test with  if rcParams['text.usetex']  before-hand. This is https://github.com/matplotlib/basemap/blob/v1.0.7rel/lib/mpl_toolkits/basemap/__init__.py#L5192 for example. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/8442167)
 Instead of DEGREE CELSIUS U+2103 (℃), use the DEGREE SIGN U+00B0 (°) followed by the capital letter. This is much safer for several reasons, including font coverage. It is also the way recommended in the http://www.unicode.org/versions/Unicode6.0.0/ (15.2 Letterlike symbols; p. 481). 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/34971848)
 Why don't you write a function? 

  def toFarenheit(celsius):
    return (9.0/5.0) * celsius + 32

def toCelsius(farenheit):
    return (farenheit - 32) * (5.0 / 9.0)
# I don't actually use this method, but it's still good to have
  

  

  for y in range(0,200):
    x = y / 2.0
    print("Celsius: ", x, ", Farenheit: ", toFarenheit(x))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/42510879)
 use  twinx()  to show two axes, and convert the y_limits of  ax1  in Celsius to y_limits of  ax2  in Fahrenheit: 

  import matplotlib.pyplot as plt
from random import randint

x = range(1,24)
y = [randint(0,75) for x in x]

fig, ax1 = plt.subplots()

ax1.plot(x,y)
y_lim  = ax1.get_ylim()

y2_lim = [x*9/5 + 32 for x in y_lim]

ax2 = ax1.twinx()
ax2.set_ylim(y2_lim)

ax1.set_ylabel('deg C')
ax2.set_ylabel('deg F')

plt.show()
  

 https://i.stack.imgur.com/c8812.png 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/34971850)
 I think what you're looking for is more something like this: 

  celsius = 0
while celsius <= 100:
    fahrenheit = celsius * 9.0/5.0 + 32
    print ('Celsius:', celsius, 'Fahrenheit:', fahrenheit)
    celsius += 0.5
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/54263741)
  I have produced some annotated code below.  

 Start off by initializing the list of Celsius values.
Then, Create a DataFrame to hold the data.  Finally, convert the list of Celsius values and append the values to the DataFrame under a new column. 

  Note: there are multiple ways of completing this assignment.  

  import pandas as pd
import numpy as np

def c2f(celsius):
    print(celsius)
    fahrenheit = (9 * celsius / 5) + 32
    print("The temperature {1} is {0:,.2f} degrees Fahrenheit.".format(fahrenheit, 
celsius))
    return fahrenheit

#initialize list of values ranging from 0 through 100 counting by 10s
list_celcius = np.arange(11)*10

#Create DataFrame with column "Celcius"    
df = pd.DataFrame({'Celcius': list_celcius})

#Append calculated values into Fahrenheit column in DataFrame
df['Fahrenheit'] = [c2f(list_celcius[i]) for i in range(len(list_celcius))]

print(df)
  



