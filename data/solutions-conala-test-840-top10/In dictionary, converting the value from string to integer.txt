Query: In dictionary, converting the value from string to integer
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9224463)
 You can use a http://www.python.org/dev/peps/pep-0274/: 

  {k:int(v) for k, v in d.iteritems()}
  

 where  d  is the dictionary with the strings. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/36048533)
 You've go the basics down, the remaining steps are: 

 
 splitting the value on commas  split(',')  
 Converting the string into an integer  int(i)  
 

 Wrap these steps in a  for  loop and do it for every key/value pair the dictionary. 

  for key, value in new_dictionary.items():
    new_dictionary[key] = [int(i) for i in value.split(',')]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/9633736)
  def int_if_possible(value):
    try: return int(value)
    except: return value

result = dict((k, int_if_possible(v)) for (k, v) in original.items())
  

 Please do not call your variable  set ; that is another data type (like  dict ). 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/42791984)
 Nest a generator expression with  str.split  in a dictionary comprehension, converting the key to an integer and mapping the value to integers: 

  with open('file.txt') as f:
    result = {int(k):list(map(int, v.split(','))) for k,v in (line.split(' -> ') for line in f)}
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/45407350)
 Code 

  first_map = {1: ["a"], 2: ["a", "b"], 3: ["a"], 4: ["b", "cd"], 6: ["a", "cd"]}
second_map = {}
for key, value in first_map.items():
    for i in value:
        if i in second_map:
            second_map[i].append(key)
        else:
            second_map[i] = [key]
print(second_map)
  



