Query: Python Mechanize select a form with no name
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2582592)
  

  br.select_form(nr=0)
  

 to select the first form 

 In Mechanize https://github.com/jjlee/mechanize/blob/b1d786906946f0193051920a7c716b339bd7bf95/mechanize/_mechanize.py#L462, 

  def select_form(self, name=None, predicate=None, <b>nr=None</b>):
    """
    ...
    nr, if supplied, is the sequence number of the form (where 0 is the
    first).
    """
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/29863188)
 The form has a name,  LoginForm . So you should select it like so: 

  br.select_form("LoginForm")
  

 Also the name of the first form field is  login  not  loggInn  so you use 

  br.form['login'] = '123456'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10495377)
  

  [f.id for f in br.forms()]
  

 It should return a list of all form ids from your page 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/13666943)
 I found this as a solution for the same problem.  br  is the mechanize object: 

  formcount=0
for frm in br.forms():  
  if str(frm.attrs["id"])=="sblock":
    break
  formcount=formcount+1
br.select_form(nr=formcount)
  

 I'm sure the loop counter method above could be done more pythonic, but this should select the form with attribute  id="sblock" . 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/16020863)
 You are trying to select a form named  q , which does not exist. It seems that the form is named  f  instead. (However, I was unable to verify that in my browser - even with Javascript disabled, I only saw a different name.) 

 A simple Google search can be done like this: 

  import os, subprocess
import re
import mechanize
from bs4 import BeautifulSoup

#prepare mechanize
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_equiv(False)
br.addheaders = [('User-agent', 'Mozilla/5.0')] 
br.open('http://www.google.com/')

# do the query
br.select_form(name='f')   # Note: select the form named 'f' here
br.form['q'] = 'here goes your query' # query
data = br.submit()

# parse and output
soup = BeautifulSoup(data.read())
print soup
  

 This should give you the idea. 

  Update: How to find the right form 'selector'  

 To print the names of the available forms, you can do: 

  for form in br.forms():
    print form.name
  

 This comes in handy when you use the interactive console. 

 You are not bound to use the name of the form, but you may give other hints to select the right form. For example, on some pages the forms have no name at all. Then you can still select based on the number of the form, e.g.  br.select_form(nr=1)  for the second form on the page. Please see  help(br.select_form)  for details. Also,  list(br.forms())  will give you a list of all forms which you can inspect further. 

 Another option would be to inspect the page by hand in your usual browser. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/10497578)
 Try using:  br.select_form(nr=0) , where nr is the form number (you don't need the name or id). 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/7677051)
 The problem is that your form does not have a name, only an id, and it is  login_form . You can use a predicate: 

  br.select_form(predicate=lambda f: f.attrs.get('id', None) == 'login_form')
  

 (where you se if  f.attrs  has the key  id   and, if so, the  id  value is equal to  login_form ). Alternatively, you can pass the number of the form in the page, if you know if it is the first one, the second one etc. For example, the line below selects the first form: 

  br.select_form(nr=0)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/8571002)
 to select a form using its name you should use: 

  br.select_form(name="order")
  

  

  br.form["username"] = 'usernamehere'
  

 is trying to set a value to a control under the selected form, so when he can't find it, it throws the exception you are seeing. 



