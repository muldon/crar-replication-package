Query: How to remove all characters before a specific character in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/904753)
 Without a RE (which I assume is what you want): 

  def remafterellipsis(text):
  where_ellipsis = text.find('...')
  if where_ellipsis == -1:
    return text
  return text[:where_ellipsis + 3]
  

  

  import re

def remwithre(text, there=re.compile(re.escape('...')+'.*')):
  return there.sub('', text)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30945796)
 Use  re.sub . Just match all the chars upto  I  then replace the matched chars with  I . 

  re.sub(r'.*I', 'I', stri)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/21357173)
 For the inverse requirement of  only  allowing  certain characters  in a string, you can use regular expressions with a set complement operator  [^ABCabc] . For example, to remove everything except ascii letters, digits, and the hyphen: 

  >>> import string
>>> import re
>>>
>>> phrase = '  There were "nine" (9) chick-peas in my pocket!!!      '
>>> allow = string.letters + string.digits + '-'
>>> re.sub('[^%s]' % allow, '', phrase)

'Therewerenine9chick-peasinmypocket'
  

 From http://docs.python.org/2/library/re.html: 

 
   Characters that are not within a range can be matched by complementing
  the set. If the first character of the set is  '^' , all the characters
  that are not in the set will be matched. For example,  [^5]  will match
  any character except '5', and  [^^]  will match any character except
   '^' .  ^  has no special meaning if itâ€™s not the first character in the
  set. 
 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/41649986)
 You can use a  lookahead assertion , see the https://docs.python.org/3.6/library/re.html in the Python documentation.  

  import re

my_string = 'log   (x)'
print(re.sub(r'\s+(?=\()', '', my_string))
# log(x)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/22519343)
  

  str = re.sub("(.*\?).*", "\\1", str)
  

 capturing the group till the last  ?  and replace it with captured group  \\1 . 



