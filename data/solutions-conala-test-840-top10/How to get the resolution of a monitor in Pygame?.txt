Query: How to get the resolution of a monitor in Pygame?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/34050552)
 I don't know if this will work, but if you just want a fullscreen window use the following: 

  pygame.display.set_mode((0,0),pygame.FULLSCREEN)
  

 (of course you still have to  import pygame ). 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19954547)
 I don't know much about pygame, but here is a way using the module  win32api : 

  from win32api import GetSystemMetrics

width = GetSystemMetrics(0)
height = GetSystemMetrics(1)
  

  Update : After taking a glance at the http://www.pygame.org/docs/ref/display.html#pygame.display.Info, seems like you can get it from  pygame.display.Info , like this: 

  width, height = pygame.display.Info().current_w, pygame.display.Info().current_h
  

 Hope this helps! 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19954583)
 You can use  pygame.display.Info() : 

 The http://www.pygame.org/docs/ref/display.html#pygame.display.Info say: 

 
   current_h, current_w:  Height and width of the current video mode, or of the
    desktop mode if called before the display.set_mode is called. 
  (current_h, current_w are available since SDL 1.2.10, and pygame
  1.8.0)   They are -1 on error, or if an old SDL is being used.1.8.0) 
 

  pygame.display.Info()  creates an Info Object with the attributes  current_h  and  current_w . 
Create the Info Object before you call  display.set_mode  and then call  display.set_mode  with  current_h  and  current_w  from the object.  

  Example:  

  infoObject = pygame.display.Info()
pygame.display.set_mode((infoObject.current_w, infoObject.current_h))
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/33083635)
 Try the following code: 

  import subprocess
resuls = subprocess.Popen(['xrandr'],stdout=subprocess.PIPE).communicate()[0].split("current")[1].split(",")[0]
width = resuls.split("x")[0].strip()
heigth = resuls.split("x")[1].strip()
print width + "x" + heigth
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/47907288)
 If you need the actual size of the display, not the best resolution to use, you do: 

  import pygame
pygame.display.init()
# Before calling *.set_mode()
i = pygame.display.Info()
width = i.current_w
height = i.current_h
print("The screen size is: (%ix%i)" %width, height))
  

 Then you can use width and height to pygame.display.set_mode() 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/46652786)
 Using http://pygame.org: 

  import pygame
pygame.init()
infos = pygame.display.Info()
screen_size = (infos.current_w, infos.current_h)
  

 http://www.pygame.org/docs/ref/display.html#pygame.display.Info 

 However, if you're trying to set your window to the size of the screen, you might just want to do: 

  pygame.display.set_mode((0,0),pygame.FULLSCREEN)
  

 to set your display to fullscreen mode. http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47906981)
 If you pass  (0, 0)  or nothing as the resolution to http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode, pygame will use the resolution of your monitor (if  display.set_mode  was called before, it will use the resolution of your current display). You could also call  pygame.display.list_modes()  and pick one of the returned resolutions. 

 BTW, in Windows you need to take care, because the pygame window could be stretched. https://gamedev.stackexchange.com/a/105820 will help. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/31538672)
 The method you are looking for is https://www.pygame.org/docs/ref/display.html#pygame.display.toggle_fullscreen 

 Or, as the guide recommends in most situations, calling https://www.pygame.org/docs/ref/display.html#pygame.display.set_mode. 

 In your case this would look like 

  DISPLAYSURF = pygame.display.set_mode((400, 300), pygame.FULLSCREEN)
  

 (Please use the  pygame.FULLSCREEN  instead of just  FULLSCREEN  because upon testing with my own system  FULLSCREEN  just maximized the window without fitting the resolution while  pygame.FULLSCREEN  fit my resolution as well as maximizing.) 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/48082769)
 You can do this with the 'pygame.image.frombuffer' command. 

 Here's an example: 

  import picamera
import pygame
import io

# Init pygame 
pygame.init()
screen = pygame.display.set_mode((0,0))

# Init camera
camera = picamera.PiCamera()
camera.resolution = (1280, 720)
camera.crop = (0.0, 0.0, 1.0, 1.0)

x = (screen.get_width() - camera.resolution[0]) / 2
y = (screen.get_height() - camera.resolution[1]) / 2

# Init buffer
rgb = bytearray(camera.resolution[0] * camera.resolution[1] * 3)

# Main loop
exitFlag = True
while(exitFlag):
    for event in pygame.event.get():
        if(event.type is pygame.MOUSEBUTTONDOWN or 
           event.type is pygame.QUIT):
            exitFlag = False

    stream = io.BytesIO()
    camera.capture(stream, use_video_port=True, format='rgb')
    stream.seek(0)
    stream.readinto(rgb)
    stream.close()
    img = pygame.image.frombuffer(rgb[0:
          (camera.resolution[0] * camera.resolution[1] * 3)],
           camera.resolution, 'RGB')

    screen.fill(0)
    if img:
        screen.blit(img, (x,y))

    pygame.display.update()

camera.close()
pygame.display.quit()
  



