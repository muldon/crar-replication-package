Query: string contains substring
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/30465415)
 Basically, you want to find a substring in a string in Python. There are two ways to search for a substring in a string in Python. 

  Method 1:  in  operator  

 You can use the Python's  in  operator to check for a substring. . It will return  True  if the substring was found in the string else  False . 

  >>> "King" in "King's landing"
True

>>> "Jon Snow" in "King's landing"
False
  

  Method 2:  str.find()  method  

 The second method is to use the  str.find()  method.   .find()  method on the string in which substring is to found. We pass the substring to the find() method and check its return value. If its value is other than -1, the substring was found in the string, otherwise not. The value returned is the index where substring was found. 

  >>> some_string = "valar morghulis"

>>> some_string.find("morghulis")
6

>>> some_string.find("dohaeris")
-1
  

 I would recommend you to use the first method as it is more Pythonic and intuitive. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/3437070)
 You can use the https://docs.python.org/reference/expressions.html#membership-test-details: 

  if "blah" not in somestring: 
    continue
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/3437068)
 If it's just a substring search you can use  string.find("substring") . 

 You do have to be a little careful with  find ,  index , and  in  though, as they are substring searches.  

  s = "This be a string"
if s.find("is") == -1:
    print "No 'is' here!"
else:
    print "Found 'is' in the string."
  

 It would print  Found 'is' in the string.  Similarly,  if "is" in s:  would evaluate to  True . This may or may not be what you want. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/42961601)
 A https://repl.it/G9KL/0: 

  any(chr in string for chr in substring)
  

 checks whether each character in the  substring  is in the  string  and exits the moment it finds a match. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/48241340)
 If you're looking for case-insensitive search for whole words, rather than a substring contained within another word: 

  import string

s = 'This is my text example'
if 'is' not in (word.lower() 
    for split_char in string.punctuation + string.whitespace 
    for word in s.split(split_char)):
    # do something
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/13613876)
  def myReplace(myStr, str1, str2):
    try:
        i = myStr.index(str1)
        answer = myStr[:i+len(str1)] + str2 + myStr[i+len(str1):]
        return answer
    except ValueError:
        return myStr
  

 Hope this helps 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/48698320)
 A different  str.contains  

   df['support'][df.name.str.contains('ball')] = 'ball support'
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/16967119)
 You could use  any : 

  >>> myList = ['qwer', 'tyu', 'iop12', '3456789']
>>> not any('wer'  in x for x in myList)
False
>>> not any('123' in x for x in myList)
True
  



