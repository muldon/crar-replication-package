Query: how to create a file name with the current date & time in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/10607768)
 While not using  datetime , this solves your problem (answers your question) of getting a string with the current time and date format you specify: 

  import time
timestr = time.strftime("%Y%m%d-%H%M%S")
print timestr
  

 yields: 

  20120515-155045
  

 so your filename could append or use this string. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/10607854)
  

  filename1 = datetime.now().strftime("%Y%m%d-%H%M%S")
  

  

  filename1 = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
  

 Note the extra  datetime . Alternatively, change your 
 import datetime  to  from datetime import datetime  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10607838)
 http://docs.python.org/library/datetime.html#datetime.datetime.now is a class method in the class  datetime  in the module  datetime .  

  datetime.datetime.now()
  

 Or you can use a different import 

  from datetime import datetime
  

 Done this way allows you to use  datetime.now  as per the code in the question. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/49048869)
 By default,  now()  function returns output in the  YYYY-MM-DD HH:MM:SS:MS  format. Use the below sample script to get the current date and time in a Python script and print results on the screen. Create file  getDateTime1.py  with the below content. 

  import datetime

currentDT = datetime.datetime.now()
print (str(currentDT))
  

 The output looks like below: 

  2018-03-01 17:03:46.759624
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/34890526)
 I'm surprised there is not some single formatter that returns a default (and safe) 'for appending in filename' - format of the time, 
We could simply write  FD.write('mybackup'+time.strftime('%(formatter here)') + 'ext'   

  "%x" instead of "%Y%m%d-%H%M%S"
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/43992719)
  import datetime

f=open("/home/rohitsai/Documents/acs.txt",'a')
f.write ("heloo"+'\t')
f.write(datetime.datetime.now().ctime())
print datetime.datetime.now()
  

 this code will add helo as well as current date on same file. 'a' is for append mode, \t for tab space. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/46706028)
 It is better to use underscore in filename than any other special character since it widely accepted
Therefore constructing file name as below : 

  csv_file = 'myfile_' + str(datetime.now().strftime('%Y_%m_%d_%H_%M_%S')) + '.csv'
  

 Use datetime as below : 

  from elasticsearch import Elasticsearch
import csv

es = Elasticsearch(["9200"])

# Replace the following Query with your own Elastic Search Query
res = es.search(index="search", body=
                {
                    "_source": ["DTDT", "TRDT", "SPLE", "RPLE"],
                    "query": {
                        "bool": {
                            "should": [
                                {"wildcard": {"CN": "TEST1"}}

                            ]
                        }
                    }
}, size=10)

from datetime import datetime
import os

file_path = <PASS YOUR FILE HERE>

csv_file = 'myfile_' + str(datetime.now().strftime('%Y_%m_%d_%H_%M_%S')) + '.csv'

csv_file_full = os.path.join(file_path, os.sep, csv_file)

header_names = { 'DTDT': 'DATE', 'TRDT': 'TIME', ...}

with open(csv_file_full, 'w') as f:  # Just use 'w' mode in 3.x
    header_present  = False
    for doc in res['hits']['hits']:
        my_dict = doc['_source']
        if not header_present:
            w = csv.DictWriter(f, my_dict.keys())
            w.writerow(header_names)  # will write DATE, TIME, ... in correct place
            header_present = True


        w.writerow(my_dict)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41740948)
 I'm not sure but if you close the file after naming it and then again open in append mode and then add data into the file that might do the job. Sometimes create file is lazy operation, so what happens here is until nothing is written into the file its not create file and also operating system play imptant role too. Please and let me know, as its web scraper code I can't simulate here on my machine.  

 Got the issue: 
the problem is with the time part in the name of file, 
add the following : 

  todays_date = todays_date.replace(" ", "_").replace(":", "_")
  

  

  todays_date = str(datetime.datetime.now().strftime("%Y-%m-%d_%H_%M") )+ '.xlsx'
  

 I hope this will fix the issue. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/16944852)
 I like just having the date in my file handles: 

  from datetime import date

def timeIzNow():
    '''
    returns current date as a string
    '''
    now = date.today()
    full = "-" + str(now.month) + "-" + str(now.day) + "-" + str(now.year)

    return full

fileN = "findGenes"

with open(fileN + timeIzNow() + ".txt", 'w') as f:
    #DO STUFF
  

 Your new file name will  look like 

  findGenes-6-5-2013.txt
  



