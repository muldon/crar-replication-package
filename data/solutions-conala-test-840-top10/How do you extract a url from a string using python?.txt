Query: How do you extract a url from a string using python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2965647)
  

  import re
myString = "This is my tweet check it out http:// tinyurl.com/blah"
print re.search("(?P<url>https?://[^\s]+)", myString).group("url")
  

 It won't work well if you have multiple urls in the string.
If the string looks like: 

  myString = "This is my tweet check it out http:// tinyurl.com/blah and http:// blabla.com"
  

 You may do something like this: 

  myString_list = [item for item in myString.split(" ")]
for item in myString_list:
    try:
        print re.search("(?P<url>https?://[^\s]+)", item).group("url")
    except:
        pass
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/44914662)
 If you want to extract URLs from any text you can use my urlextract. It finds URL based on TLD found in text. It expands to both side from TLD position an gets whole URL. Its easy to use. Check it: https://github.com/lipoja/URLExtract 

      from urlextract import URLExtract

    extractor = URLExtract()
    urls = extractor.find_urls("Text with URLs: stackoverflow.com.")
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/840110)
 In response to the OP's edit I hijacked https://stackoverflow.com/questions/720113/find-hyperlinks-in-text-using-python-twitter-related and came up with this: 

  import re

myString = "This is my tweet check it out http://example.com/blah"

print(re.search("(?P<url>https?://[^\s]+)", myString).group("url"))
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/26848246)
 You can either split the string 

  >>> url.split('/')[-1]
'6641345'
  

 Or use a regex 

  >>> import re
>>> re.findall('\d+', url)
['6641345']
  

 Assuming the urls are always of the format that you showed in your example. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7386304)
 Use http://lxml.de/. 

  import lxml.html

html_string = ' '

img = lxml.html.fromstring(html_string)

print "src:", img.get("src")
print "alt:", img.get("alt")
  

  Gives : 

 
src: http://images.efollett.com/books/978/047/012/9780470129296.gif
alt: Organic Chemistry I (as Second Language)
 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/9760660)
 There may be few ways to do this but the cleanest would be to use regex 

  >>> myString = "This is a link http://www.google.com"
>>> print re.search("(?P<url>https?://[^\s]+)", myString).group("url")
http://www.google.com
  

 If there can be multiple links you can use something similar to below 

  >>> myString = "These are the links http://www.google.com  and http://stackoverflow.com/questions/839994/extracting-a-url-in-python"
>>> print re.findall(r'(https?://[^\s]+)', myString)
['http://www.google.com', 'http://stackoverflow.com/questions/839994/extracting-a-url-in-python']
>>> 
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/10552308)
  os.path.splitext  will help you extract the filename and extension once you have extracted the relevant string from the URL using  urlparse : 

     fName, ext = os.path.splitext('yourImage.jpg')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/43051544)
 You're trying to check if a substring is present in a string. 

  Example:  

  string = 'this is a simple string'

'simple' in string
True

'zimple' in string
False
  

 

 So, you just have to add an  if  statement like:  

  if 'download' in url:  

 After the line:  

  for url in hxs.select('//a/@href').extract():  

  I.e.:  

  for url in hxs.select('//a/@href').extract():
    if 'download' in url:
        if not ( url.startswith('http://') or url.startswith('https://') ):
            url = URL + url 
        print url
        yield Request(url, callback=self.parse)
  

 So the code will only check if link starts with  http://  if the condition  'download' in url  returns  True . 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/27753723)
 [note: Assuming you are using this on Twitter data (as indicated in question), the simplest way of doing this is to use their API, which returns the urls extracted from tweets as a field] 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/10907680)
 Don't forget to check for whether the search returns a value of  None â€”I found the posts above helpful but wasted time dealing with a  None  result. 

 See https://stackoverflow.com/questions/1491277/python-regex-object-has-no-attribute. 

 i.e. 

  import re
myString = "This is my tweet check it out http://tinyurl.com/blah"
match = re.search("(?P<url>https?://[^\s]+)", myString)
if match is not None: 
    print match.group("url")
  



