Query: Converting a string into a list in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51908574)
 You can use the following solution: 

  s="jack"

tup=tuple(s.split(" "))

output=('jack')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19334405)
 You can also use list comprehension on splitted string 

  [ int(x) for x in example_string.split(',') ]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/44943616)
 I use this function to convert string to tuple 

  import ast

def parse_tuple(string):
    try:
        s = ast.literal_eval(str(string))
        if type(s) == tuple:
            return s
        return
    except:
        return
  

  

  parse_tuple('("A","B","C",)')  # Result: ('A', 'B', 'C')
  

   
 

  value = parse_tuple("('%s',)" % a)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/46981302)
 You need convert the string to list first 

  a = '[123.34 , -12333]'
res = map(float, a[1:-1].split(','))
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/34405540)
 . Splitting a string and converting a string to an integer are very common tasks, and Python has built in tools to achieve them. 

  str.split  splits a string into a list by a given delimiter.
 int  can convert a string to an integer. You can use  map  to apply a function to all elements of a list. 

  >>> map(int, "123|456|890|60".split('|'))
[123, 456, 890, 60]
  



