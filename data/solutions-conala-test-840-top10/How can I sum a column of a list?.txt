Query: How can I sum a column of a list?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/49536441)
 Op1 

 You can pass a index  sum   and add tolist convert back to list  

  pd.DataFrame(L).\
   set_index([0,1])[2].astype(int).sum(level=[0,1]).\
        reset_index().values.tolist()
Out[78]: [['Andrew', '1', 17], ['Peter', '1', 21], ['Sam', '4', 9], ['Andrew', '2', 2]]
  

 

 Op2 

 For list of list you can using  groupby  from  itertools   

  from itertools import groupby
[k+[sum(int(v) for _,_, v in g)] for k, g in groupby(sorted(l), key = lambda x: [x[0],x[1]])]
Out[98]: [['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49536386)
 dynamically grouping by all columns except the last one: 

  In [24]: df = pd.DataFrame(data)

In [25]: df.groupby(df.columns[:-1].tolist(), as_index=False).agg(lambda x: x.astype(int).sum()).values.tolist()
Out[25]: [['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/48636754)
 https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html the columns you do not wish to sum over: 

  df['Others'] = df.drop(cols_to_keep, axis=1).sum(axis=1)
df['Total'] = df.sum(axis=1)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/49539562)
  pd.factorize  and  np.bincount </h3>

  f, u = pd.factorize([tuple(x[:-1]) for x in data])
v = np.array([x[-1] for x in data], int)

[list(k) + [int(v)] for k, v in zip(u, np.bincount(f, v))]

[['Andrew', '1', 17], ['Peter', '1', 21], ['Sam', '4', 9], ['Andrew', '2', 2]]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/50981286)
 Create a list of column names you want to add up. 

  df['total']=df.loc[:,list_name].sum(axis=1)
  

 If you want the sum for certain rows, specify the rows using ':' 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/43822810)
 I think the easiest way is this: 

  sumcolumn=data.sum(axis=0)

print (sumcolumn)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/48636762)
 Use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.assign.html, for filter columns use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.difference.html: 

  cols_to_keep = ['Base','Val'] 

c = df.columns.difference(cols_to_keep)
df = df[cols_to_keep].assign(Others=df[c].sum(axis=1), Total=df.sum(1))
print (df)
       Base      Val  Others    Total
id                                   
5    34.340   70.680    9.42  114.440
108  43.770   28.000    0.00   71.770
205  77.640   32.200    0.00  109.840
320  66.240   59.628    0.00  125.868
313  21.660   21.442    0.00   43.102
324  72.370  701.120    0.00  773.490
505  76.057   43.870    0.00  119.927
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/15352490)
  

  a = [[1,2,3],
     [1,2,3]]

print [sum(x) for x in zip(*a)]
  

 http://docs.python.org/2/library/functions.html#zip 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/43459659)
 One-liner using list comprehensions: for each column (length of one row), make a list of all the entries in that column, and sum that list. 

  output_val = [sum([input_val[i][j] for i in range(len(input_val))]) \
                 for j in range(len(input_val[0]))]
  



