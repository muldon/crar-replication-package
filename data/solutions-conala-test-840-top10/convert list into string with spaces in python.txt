Query: convert list into string with spaces in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/45838563)
 For Non String  list  we can do like this as well 

  " ".join(map(str, my_list))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/9905549)
  print s.replace(' ','').split(',')
  

 First removes spaces, then splits by comma. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/12309982)
  " ".join(my_list)
  

 you need to join with a space not an empty string ... 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/29586240)
 In case you want to split by spaces, you can just use  .split() : 

  a = 'mary had a little lamb'
z = a.split()
print z
  

 Output: 

  ['mary', 'had', 'a', 'little', 'lamb'] 
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/5387762)
 I usually use: 

  l = [ word.strip() for word in text.split(',') ]
  

 the  strip  remove spaces around words. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/27556169)
 Use https://docs.python.org/2/library/urllib.html#urllib.quote_plus for this: 

  import urllib

...

joblist = [urllib.quote_plus(t.text) for t in olp]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/9905508)
 Use the http://docs.python.org/library/stdtypes.html#str.split: 

  >>> '1989, 1990'.split(', ')
['1989', '1990']
  

 But you might want to: 

 
  remove spaces using http://docs.python.org/library/stdtypes.html#str.replace  
  split by ','  
 

 As such: 

  >>> '1989, 1990,1991'.replace(' ', '').split(',')
['1989', '1990', '1991']
  

 This will work better if your string comes from user input, as the user may forget to hit space after a comma. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/6181830)
 Using  string.punctuation  for completeness: 

  import re
import string
x = re.sub('['+string.punctuation+']', '', s).split()
  

 This handles newlines as well. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/17321031)
 you can use standard string methods with python: 

  output = sample.lstrip('[').rstrip(']').split(', ')
  

 if you use  .split(',')  instead of  .split(',')  you will get the spaces along with the values! 

 you can convert all values to int using: 

  output = map(lambda x: int(x), output)
  

 or load your string as json: 

  import json
output = json.loads(sample)
  

 as a happy coincidence, json lists have the same notation as python lists!  



