Query: How to set font size of Matplotlib axis Legend?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/14499442)
 Here is how to change the fontsize of the legend list and/or legend title: 

  legend=plt.legend(list,loc=(1.05,0.05), title=r'$\bf{Title}$') #Legend: list, location, Title (in bold)
legend.get_title().set_fontsize('6') #legend 'Title' fontsize
plt.setp(plt.gca().get_legend().get_texts(), fontsize='12') #legend 'list' fontsize
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/37990331)
 This is the fastest: 

  plt.legend(loc=2,prop={'size':6})
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/12404066)
 I generally do in this way. Once the plot has been done i do the following 

  plt.legend(loc=0, numpoints=1)
leg = plt.gca().get_legend()
ltext  = leg.get_texts()
plt.setp(ltext, fontsize='small') 
  

 I don't know if this works for you 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/12403928)
 I don't know how to set it up for an individual plot, but I always do it globally: 

  plt.rc('legend',**{'fontsize':6})
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/44073868)
 Banged my head against it too, here is another more flowing way of doing it: 

  leg = ax.legend()
leg.set_title('A great legend',prop={'size':14})
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35537967)
 You can pass parameters into  plt.legend  using the http://matplotlib.org/api/legend_api.html#matplotlib.legend.Legend. This dictionary allows you to select http://matplotlib.org/users/text_props.html#text-properties-and-layout for the legend. 

  import matplotlib
import matplotlib.pyplot as plt

legend_properties = {'weight':'bold'}

plt.plot([1,2,3], [4,5,6], label='Test')
plt.legend(prop=legend_properties)

plt.show()
  

 https://i.stack.imgur.com/L9Jwu.png 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/44882373)
 Use matplotlib function  setp  according to this example: 

  import seaborn as sns
import matplotlib.pylab as plt
sns.set_style("whitegrid")
tips = sns.load_dataset("tips")

ax = sns.stripplot(x="sex", y="total_bill", hue="day", data=tips, jitter=True)
plt.setp(ax.get_legend().get_texts(), fontsize='22') # for legend text
plt.setp(ax.get_legend().get_title(), fontsize='32') # for legend title

plt.show()
  

 https://i.stack.imgur.com/UwsZm.png 

 Another way is to change  font_scale  of all graph with  plotting_context :
http://seaborn.pydata.org/generated/seaborn.plotting_context.html 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41087609)
   .rc  solution given changes the default font for all drawing. 

 Here is a solution for doing this when you don't want to change all the fonts, but just the font properties of the legend of this particular graph (a legend belonging to a particular  axis  object): 

  L = ax.legend()
plt.setp(L.texts, family='Consolas')
  

 This allows you to choose a different font for the legend and the axes. I found this helpful when I needed a monospace font for my legend, but not for the axes -- allowing me to create a neat legend like this: 

 https://i.stack.imgur.com/m9lpT.png 

 Note how the title is a different font than the legend - this gives me an alignment of numbers that would otherwise be hard to achieve. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/17093475)
 This is definitely an old question, but was frustrating me too and none of the other answers changed the legend  title  fontsize at all, but instead just changed the rest of the text. So after banging my head against the matplotlib documentation for awhile I came up with this. 

  legend = ax1.legend(loc=0, ncol=1, bbox_to_anchor=(0, 0, 1, 1),
           prop = fontP,fancybox=True,shadow=False,title='LEGEND')

plt.setp(legend.get_title(),fontsize='xx-small')
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/51721142)
 I think this is the better way.  

  import matplotlib.font_manager as fm

## your font directory 
font_path = '/Users/frhyme/Library/Fonts/BMDOHYEON_otf.otf'

## font_name 
font_name = fm.FontProperties(fname=font_path).get_name()

plt.legend(prop={'family':font_name, 'size':20})
  



