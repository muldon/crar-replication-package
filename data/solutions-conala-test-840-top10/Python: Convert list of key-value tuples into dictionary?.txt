Query: Python: Convert list of key-value tuples into dictionary?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51114472)
 For Python3.x use 

  for key, value in dict.items():
    temp = [key,value]
    dictlist.append(temp)
  

 For Python 2.7 use  

  for key, value in dict.iteritems():
    temp = [key,value]
    dictlist.append(temp)
  

 Thanks 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/4331932)
  dict s are unordered. So there is no way to sort them directly, but if you are 
willing to convert the  dict  into a list of (key,value)-tuples, then you could do this: 

  In [9]: d
Out[9]: {'a': {'b': 'whatever', 'k': 1}, 'b': {'b': 'sort by k', 'k': 2}}

In [15]: sorted(d.items(),key=lambda x: x[1]['k'],reverse=True)
Out[15]: [('b', {'b': 'sort by k', 'k': 2}), ('a', {'b': 'whatever', 'k': 1})]
  

 This http://wiki.python.org/moin/HowTo/Sorting#KeyFunctions explains the use of the  key  parameter. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1233617)
 This will do: 

  from collections import defaultdict

def to_list_of_dicts(list_of_tuples):
    d = defaultdict(list)
    for x, y in list_of_tuples:
        d[y].append(x)
    return sorted([{x: y} for (x, y) in d.items()])
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/5378255)
 Using lists instead of tuples as dict values: 

  l=[ [1, 'A'], [1, 'B'], [2, 'C'] ]
d={}
for key, val in l:
    d.setdefault(key, []).append(val)

print d
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/5559139)
 Do you want to make (key, value) pairs? Here is code to generate a list of (key, value) tuples... 

  thelist = [(key, genreOptions[key]) for key in genreOptions]
  

 Ahh I see there is a more efficient answer above... 

  thelist = genreDictionary.items()
  

 But I want to include the list comprehension example anyways :) 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/674535)
 What you want is  dict 's  items()  and  iteritems()  methods.  items  returns a list of (key,value) tuples. Since tuples are immutable, they can't be reversed. Thus, you have to iterate the items and create new tuples to get the reversed (value,key) tuples. For iteration,  iteritems  is preferable since it uses a generator to produce the (key,value) tuples rather than having to keep the entire list in memory. 

  Python 2.5.1 (r251:54863, Jan 13 2009, 10:26:13) 
[GCC 4.0.1 (Apple Inc. build 5465)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> a = { 'a': 1, 'b': 2, 'c': 3 }
>>> a.items()
[('a', 1), ('c', 3), ('b', 2)]
>>> [(v,k) for (k,v) in a.iteritems()]
[(1, 'a'), (3, 'c'), (2, 'b')]
>>> 
  



