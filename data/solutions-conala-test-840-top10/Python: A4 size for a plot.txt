Query: Python: A4 size for a plot
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/43371999)
 You can do it in a simple manner. 

  A = [['a1', 'a2', 'a3'], 'c1', ['a4', 'a5', 'a6'], 'c2']

AB=[]

B = ['b1', 'b2']
for i in B:
    for j in A:
        if isinstance(j,list):
            AB.append(j)
        else:
            AB.append(i)
            AB.append(j)
print AB
  

 Output: [['a1', 'a2', 'a3'], 'b1', 'c1', ['a4', 'a5', 'a6'], 'b1', 'c2', ['a1', 'a2', 'a3'], 'b2', 'c1', ['a4', 'a5', 'a6'], 'b2', 'c2']  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/53725768)
 For my plot (a sns factorplot) the proposed answer didn't works fine. 

 Thus I use 

  plt.gcf().set_size_inches(11.7, 8.27)
  

 Just after the plot with seaborn (so no need to pass an ax to seaborn or to change the rc settings). 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/50671064)
 first import matplotlib and use it to set the size of the figure 

  from matplotlib import pyplot as plt
import seaborn as sns

plt.figure(figsize=(15,8))
ax = sns.barplot(x="Word", y="Frequency", data=boxdata)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/15622986)
 Try to set the size of the figure (in inches) before you save it.  You can do this when you initialize the figure by doing: 

  figure(figsize=(11.69,8.27)) # for landscape
  

 or if the figure exists: 

  f = gcf()  # f = figure(n) if you know the figure number
f.set_size_inches(11.69,8.27)
  

 or in advance for all plots, using 

  rc('figure', figsize=(11.69,8.27))
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/31597200)
 You can set the context to be  poster  or manually set  fig_size . 

  import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

np.random.seed(0)
n, p = 40, 8
d = np.random.normal(0, 2, (n, p))
d += np.log(np.arange(1, p + 1)) * -5 + 10


# plot
sns.set_style('ticks')
fig, ax = plt.subplots()
# the size of A4 paper
fig.set_size_inches(11.7, 8.27)
sns.violinplot(data=d, inner="points", ax=ax)    
sns.despine()

fig.savefig('example.png')
  

 https://i.stack.imgur.com/uUFRv.png 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/31597278)
 You need to create the matplotlib Figure and Axes objects ahead of time, specifying how big the figure is: 

  from matplotlib import pyplot
import seaborn

import mylib

a4_dims = (11.7, 8.27)
df = mylib.load_data()
fig, ax = pyplot.subplots(figsize=a4_dims)
seaborn.violinplot(ax=ax, data=df, **violin_options)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/44208273)
 For me manual set up of the DPI works as workaround: 

  options={'page-size':'A4', 'dpi':400}
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/43724253)
 It appears that a  Document  is made of several http://python-docx.readthedocs.io/en/latest/api/section.html#docx.section.Sections with  page_height  and  page_width  attributes. 

 To set the dimensions of the first section to A4, you could try (untested): 

  section = document.sections[0]
section.page_height = Mm(297)
section.page_width = Mm(210)
  

 Note that A4 is defined in http://python-docx.readthedocs.io/en/latest/api/shared.html#docx.shared.Mm. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/9174789)
 If you have generated your image 7016 x 4961 px, it is already A4 at 600 dpi. So you don't need to resize it, you just have to set resolution information in file.  

 You can do it with PIL: 

  from PIL import Image

im = Image.open("test.png")
im.save("test-600.png", dpi=(600,600))
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/27404595)
  from PIL import Image

im = Image.open(my_image_file)
a4im = Image.new('RGB',
                 (595, 842),   # A4 at 72dpi
                 (255, 255, 255))  # White
a4im.paste(im, im.getbbox())  # Not centered, top-left corner
a4im.save(outputfile, 'PDF', quality=100)
  

 This is taking as hypothesis that  my_image_file  has the same resolution, 72dpi. 



