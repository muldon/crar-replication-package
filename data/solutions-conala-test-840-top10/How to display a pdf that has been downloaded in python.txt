Query: How to display a pdf that has been downloaded in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/40067405)
 It all depends on the OS your using. These might usually help: 

  impt os
os.system('my_pdf.pdf')
  

  

  os.startfile('path_to_pdf.pdf')
  

  

  impt webbrowser
webbrowser.open(r'file:///my_pdf.pdf')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2237345)
 Try also http://projects.gnome.org/evince/. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/2235115)
 Invoke http://portland.freedesktop.org/xdg-utils-1.0/xdg-open.html against the file. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/33173484)
 I've just made  pdfx , a small tool for exactly this job: to download all PDFs from a given PDF. It's written in Python and released as https://github.com/metachris/pdfx under the GPLv3 license: http://www.metachris.com/pdfx 

 You can use  pdfx  tool to show all PDF URLs, all URLs (with  -v ), as well as download all referenced PDFs (using  -d ): 

  $ pdfx https://weakdh.org/imperfect-forward-secrecy.pdf -d ./
Reading url 'https://weakdh.org/imperfect-forward-secrecy.pdf'...
Saved pdf as './imperfect-forward-secrecy.pdf'
Document infos:
- CreationDate = D:20150821110623-04'00'
- Creator = LaTeX with hyperref package
- ModDate = D:20150821110805-04'00'
- PTEX.Fullbanner = This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian) kpathsea version 6.1.1
- Producer = pdfTeX-1.40.14
- Title = Imperfect Forward Secrecy: How Diffie-Hellman Fails in Practice
- Trapped = False
- Pages = 13

Analyzing text...
- URLs: 49
- URLs to PDFs: 17

JSON summary saved as './imperfect-forward-secrecy.pdf.infos.json'

Downloading 17 referenced pdfs...
Created directory './imperfect-forward-secrecy.pdf-referenced-pdfs'
Downloaded 'http://cr.yp.to/factorization/smoothparts-20040510.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/smoothparts-20040510.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35517.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35517.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35514.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35514.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35519.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35519.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35522.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35522.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35509.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35509.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35528.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35528.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35513.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35513.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35533.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35533.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35551.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35551.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35527.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35527.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35520.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35520.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35526.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35526.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35515.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35515.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35529.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35529.pdf'...
Downloaded 'http://cryptome.org/2013/08/spy-budget-fy13.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/spy-budget-fy13.pdf'...
Downloaded 'http://www.spiegel.de/media/media-35671.pdf' to './imperfect-forward-secrecy.pdf-referenced-pdfs/media-35671.pdf'...
  

 You can install it with  $ easy_install -U pdfx . 

 Under the hood, pdfx uses https://github.com/mstamy2/PyPDF2, a Python library to read PDF content and then a https://github.com/metachris/pdfx/blob/master/libs/urlmarker.py.  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27480557)
 [I guess this counts as an answer, since it shows an alternative way to handle the URL encoding problem. But I mostly wrote it in response to Mark K's comment in dazedconfused's answer.] 

 Maybe Acrobat's just being too strict; try another PDF tool. 

 I just downloaded that PDF using this code in Python 2.6.4 on Puppy Linux (Lupu 5.25): 

  #!/usr/bin/env python
# -*- coding: utf-8 -*-

import urllib
import urlparse

old_URL = u'http://www.poemhunter.com/i/ebooks/pdf/aogán_ó_rathaille_2012_5.pdf'

url_parts = urlparse.urlparse(old_URL)
url_parts = [urllib.quote(s.encode('utf-8')) for s in url_parts]
new_URL = urlparse.urlunparse(url_parts)
print new_URL

urllib.urlretrieve(new_URL, 'test.pdf') 
  

 The PDF file looks ok to me, though  

 My PDF reader, epdfview, complains:  

  (epdfview:10632): Pango-WARNING **: Invalid UTF-8 string passed to pango_layout_set_text()  

 but it seems to display the file ok. 

 This is what pdfinfo says: 

  Title:          AogÃ¡n Ã Rathaille - poems - 
Creator:        PoemHunter.Com
Producer:       PoemHunter.Com
CreationDate:   Wed May 23 00:44:47 2012
Tagged:         no
Pages:          7
Encrypted:      yes (print:yes copy:no change:no addNotes:no)
Page size:      612 x 792 pts (letter)
File size:      50469 bytes
Optimized:      no
PDF version:    1.3
  

 I also downloaded it via my browser (Seamonkey 2.31), and as expected it's identical to the file retrieved via Python. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/10562971)
 I'm not familiar with python, so this might not apply directly, but http://doc.qt.io/qt-4.8/qpixmap.html#fromImage is a static function that returns a  QPixmap . So your code should read something like: 

   self.pixmap = QtGui.QPixmap.fromImage(self.image)
  

 In other words,  self.pixmap.fromImage  doesn't change  self.pixmap , it returns a new pixmap generated from the image you give it as a parameter. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/35655134)
 To show pdf-s inside ipython/jupyter notebooks you can use  IFrame  

  from IPython.display import IFrame
IFrame("./samples/simple3.pdf", width=600, height=300)
  

 Here is the screenshot 

 https://i.stack.imgur.com/59flK.png 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/35509280)
 Replace  'w'  with  'wb'  in  open(pdfName, 'w')  



