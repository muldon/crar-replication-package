Query: how to clear/delete the Textbox in tkinter python on Ubuntu
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/40425788)
 According to the tkinterbook the code to clear a text element should be: 

  text.delete(1.0,END)
  

 This worked for me. http://effbot.org/tkinterbook/text.htm#patterns 

 It's different from clearing an entry element, which is done like this:  

 entry.delete(0,END) #note the 0 instead of 1.0 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/27967664)
 I checked on my side by just adding '1.0' and it start working 

  tex.delete('1.0', END)
  

  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/45203016)
  from Tkinter import *

app = Tk()

# Text Widget + Font Size
txt = Text(app, font=('Verdana',8))
txt.pack()

# Delete Button
btn = Button(app, text='Delete', command=lambda: txt.delete(1.0,END))
btn.pack()

app.mainloop()
  

 Here's an example of  txt.delete(1.0,END)  as mentioned. 

 The use of  lambda  makes us able to delete the contents without defining an actual function.  

  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/2260355)
 After poking around a bit through the http://www.pythonware.com/library/tkinter/introduction/, I came up with the code below, which doesn't do anything except display a text field and clear it when the  "Clear text"  button is pushed: 

  import tkinter as tk

class App(tk.Frame):
    def __init__(self, master):
        tk.Frame.__init__(self, master, height=42, width=42)
        self.entry = tk.Entry(self)
        self.entry.focus()
        self.entry.pack()
        self.clear_button = tk.Button(self, text="Clear text", command=self.clear_text)
        self.clear_button.pack()

    def clear_text(self):
        self.entry.delete(0, 'end')

def main():
    root = tk.Tk()
    App(root).pack(expand=True, fill='both')
    root.mainloop()

if __name__ == "__main__":
    main()
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/17642148)
 Use the string  '1.10'  rather than the float  1.10 . 

  self.t1.delete('1.10') #deletes 'y' (line 1, column 10)
  

 See this reference on http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/text-index.html. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35236892)
 You can clear the selected value of a  Combobox  by setting its value to an empty string: 

  ComboBox.set('')
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/26547820)
 Easy solution to use a textbox with an integrated scrollbar: 

  Python 3 : 

  #Python 3
import tkinter 
import tkinter.scrolledtext

tk = tkinter.Tk() 
text = tkinter.scrolledtext.ScrolledText(tk)
text.pack()
tk.mainloop()
  

 To read the textbox: 

  string = text.get("1.0","end")   # reads from the beginning to the end
  

 Of course you can shorten the imports if you want. 

 In  Python 2  you  import ScrolledText  instead. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/6964782)
 The trick is to use Frames and add the Scrollbars to the Frames instead of to Root. 

  from Tkinter import *

root = Tk()

left = Frame(root)
right = Frame(root)

t_start = Text(left, width=20)
t_start.pack(side=LEFT, fill=Y)
s_start = Scrollbar(left)
s_start.pack(side=RIGHT, fill=Y)
s_start.config(command=t_start.yview)
t_start.config(yscrollcommand=s_start.set)

t_end = Text(right, width=20)
t_end.pack(side=LEFT, fill=Y)
s_end = Scrollbar(right)
s_end.pack(side=RIGHT, fill=Y)
s_end.config(command=t_end.yview)
t_end.config(yscrollcommand=s_end.set)

left.pack(side=LEFT, fill=Y)
right.pack(side=RIGHT, fill=Y)

root.geometry("500x200")
root.mainloop()
  

   


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/12045712)
 Try splitting your command out into a function: 

  def clear_textbox():
    b1.delete(0, END)

bu2 = Button(app, text='CLEAR', command=clear_textbox)
  



