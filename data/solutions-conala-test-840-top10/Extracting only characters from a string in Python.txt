Query: Extracting only characters from a string in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/8199427)
 I think that you want all words, not characters. 

  result = re.findall(r"(?i)\b[a-z]+\b", subject)
  

    

  "
\b       # Assert position at a word boundary
[a-z]    # Match a single character in the range between “a” and “z”
   +        # Between one and unlimited times, as many times as possible, giving back as needed (greedy)
\b       # Assert position at a word boundary
"
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/29653971)
 Or if you want all characters regardless of words or empty spaces 

      a = "Some57 996S/tr::--!!ing"
    q = ""
    for i in a:
        if i.isalpha():
            q = "".join([q,i])
  

 print q
'SomeString' 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/8199434)
 string.split() doesn't take regular expressions.
You want something like: 

  re.split("[^a-zA-Z]*", "your string")
  

 and to get a string: 

  " ".join(re.split("[^a-zA-Z]*", "your string"))
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/8199422)
 You could do it with re, but the string split method doesnt take a regex, it takes a string. 

 Heres one way to do it with re: 

  import re
word1 = " ".join(re.findall("[a-zA-Z]+", st))
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/2571387)
 it seems like a proper serialization of the Python dict, you could just do: 

  >>> sequence = ["{\"First\":\"Belyuen,NT,0801\",\"Second\":\"Belyuen,NT,0801\"}","{\"First\":\"Larrakeyah,NT,0801\",\"Second\":\"Larrakeyah,NT,0801\"}"]
>>> import json
>>> for i in sequence:
    d = json.loads(i)
    print(d['First'])


Belyuen,NT,0801
Larrakeyah,NT,0801
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/2571389)
 you don't need regex 

  >>> sequence = ["{\"First\":\"Belyuen,NT,0801\",\"Second\":\"Belyuen,NT,0801\"}","{\"First\":\"Larrakeyah,NT,0801\",\"Second\":\"Larrakeyah,NT,0801\"}"]
>>> for item in sequence:
...  print eval(item).values()
...
['Belyuen,NT,0801', 'Belyuen,NT,0801']
['Larrakeyah,NT,0801', 'Larrakeyah,NT,0801']
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/22790346)
 Use capital  \W  = Matches a  non -alphanumeric character,  excluding   _ . 

  >>> re.findall('[\W]+', u"# @, --►(Q1)-grijesh--b----►((Qf)), ");
[u'# @, --\u25ba(', u')-', u'--', u'----\u25ba((', u')), ']
  

 From: https://docs.python.org/2/howto/unicode.html#unicode-howto To read unicoded  text file use: 

  import codecs
f = codecs.open('unicode.rst', encoding='utf-8')
for l in f:
  # regex code here 
  

 I have a file: 

  :~$ cat file
# @, --►(Q1)-grijesh--b----►((Qf)),
  

 Reading it from Python: 

  >>> import re
>>> import codecs
>>> f = codecs.open('file', encoding='utf-8')
>>> for l in f:
...  print re.findall('[\W]+', l)
... 
[u'# @, --\u25ba(', u')-', u'--', u'----\u25ba((', u')),\n']
>>> 
  

 To read alphabetic words try  

  >>> f = codecs.open('file', encoding='utf-8')
>>> for l in f:
...  print re.findall('[^\W]+', l)
... 
[u'Q1', u'grijesh', u'b', u'Qf']
  

 Note: small  \w  Matches an alphanumeric character,  including   _ . 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/49273586)
 In python, extracting substring form string can be done using  findall  method in regular expression ( re ) module. 

  >>> import re
>>> s = 'gfgfdAAA1234ZZZuijjk'
>>> ss = re.findall('AAA(.+)ZZZ', s)
>>> print ss
['1234']
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/38733282)
 You can use the  isalpha()  function in a generator expression. Then combine the characters as a single  string  using  join() . 

  def extract_string(s):
    return ''.join(i for i in s if i.isalpha())
  

  Sample output:  

  print extract_string(':::ABC???,:::DEF???')
>>> ABCDEF
  

 However that is only for extracting all characters, if you want to extract only characters between  ~...^ : 

  import re
def extract_string(s):
    match = re.findall(r"~([a-zA-z]*)\^", s)
    return match
  

  Sample output:  

  s = '&nbsp;~ABC^,~DEF^'
print extract_string(s)
>>> ['ABC', 'DEF']
  

 Just a side note: if you're parsing  HTML  using  regex  and/or  string manipulation , as the https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454 suggests, please use a HTML parser; such as the https://www.crummy.com/software/BeautifulSoup/bs4/doc/ library instead :D! 



