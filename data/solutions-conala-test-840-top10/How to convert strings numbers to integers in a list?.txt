Query: How to convert strings numbers to integers in a list?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/34520906)
 You can simply split your input by whitespace. 

  >>> inp = input()
1 2 3 4
>>> inp.split()
['1', '2', '3', '4']
  

 This will give you a list of your numbers as strings. To convert them to actual integers, you could use map: 

  >>> list(map(int, inp.split()))
[1, 2, 3, 4]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/16139909)
  [[int(y) for y in x[0].split(',')] for x in lst]
  

 On python 2.x, you could use: 

  [map(int,x[0].split(',')) for x in lst]
  

 And in some ways, having inner list of the strings is inconvenient.  You could use  chain  to remove them: 

  from itertools import chain
[[int(y) for y in x.split(',')] for x in chain.from_iterable(lst)]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/45422929)
  my_list = ['2-7', '10-22', '22-50', '50-70', 
           '2-7', '10-22', '22-50', '50-70', 
           '2-7', '10-22', '22-50', '50-70']

list_2 = []
for item in my_list:
    first, second = item.split('-')
    list_2.append([float(first), float(second)])
  

 Every item in your original list  my_list  is by the  split()  method divided into two parts and assigned to the variables  first  and  second , respectively. 

 As they are still  strings , in the last command I used the  float()  function to convert them to numbers. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/39510866)
 If you want to use built-in functions only (without imports), you can define a function that parses only the numbers and map that function to your list. 

  def remove_non_digits(z):
    return "".join(k if k.isdigit() else "" for k in z)

>>> map(remove_non_digits, a)
['28', '82', '253', '2530', '5302']
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/45444035)
 You can use a list comprehension with a ternary to determine whether or not each element of the list is a number. 

  >>> [int(n) if n.isdigit() else n for n in example_list]
['asdf', 4, 'asdfasdf', 8, 9, 'asdf']
  



