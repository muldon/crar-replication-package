Query: Pandas DataFrame to list
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/38558738)
  

  import pandas as pd
A1 = pd.DataFrame(A).stack().reset_index().drop('level_1', 1).rename(columns = {'level_0': "No", 0: "content"})

A1
#  No  content
#0  0        a
#1  0        b
#2  0        c
#3  1        c
#4  1        d
#5  1        e
#6  2        f
#7  2        g
#8  2        h
  

 Or you can flatten your list firstly and then construct data frame from it: 

  dicA = {"No":[], "content":[]}
for i, s in enumerate(A):
    for e in s:
        dicA['No'].append(i)
        dicA['content'].append(e)

import pandas as pd
pd.DataFrame(dicA)

#  No  content
#0  0        a
#1  0        b
#2  0        c
#3  1        c
#4  1        d
#5  1        e
#6  2        f
#7  2        g
#8  2        h
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/38558759)
 You can melt the transpose of the dataframe to produce your desired result. 

  import pandas as pd

>>> pd.melt(pd.DataFrame(A).T, var_name='No.', value_name='content')
   No. content
0    0       a
1    0       b
2    0       c
3    1       c
4    1       d
5    1       e
6    2       f
7    2       g
8    2       h
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/20638258)
 Supposing  d  is your list of dicts, simply: 

  pd.DataFrame(d)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/39053852)
 You can use  pandas.Series.tolist  

 e.g.: 

  import pandas as pd
df = pd.DataFrame({'a':[1,2,3], 'b':[4,5,6]})
  

  

  >>> df['a'].tolist()
  

  

  >>> [1, 2, 3]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/28006809)
 You could access the underlying array and call its  tolist  method: 

  >>> df = pd.DataFrame([[1,2,3],[3,4,5]])
>>> lol = df.values.tolist()
>>> lol
[[1L, 2L, 3L], [3L, 4L, 5L]]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/54260016)
 A dataframe is a two-dimensional object. To reflect this, you need to feed a nested list. Each sublist, in this case the  only  sublist, represents a row. 

  df = pd.DataFrame([list_values], columns=list_columns)

print(df)

#     a   b   c   d   e   f   g   h   k    l    m    n
# 0  11  22  33  44  55  66  77  88  99  100  111  222
  

 If you supply an index with length greater than 1, Pandas broadcasts for you: 

  df = pd.DataFrame([list_values], columns=list_columns, index=[0, 1, 2])

print(df)

#     a   b   c   d   e   f   g   h   k    l    m    n
# 0  11  22  33  44  55  66  77  88  99  100  111  222
# 1  11  22  33  44  55  66  77  88  99  100  111  222
# 2  11  22  33  44  55  66  77  88  99  100  111  222
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47929115)
 Just specify the column  

  In [4]: df["bar"].tolist()
Out[4]: [1, 2, 3]
  

  df["bar"]  creates a  Series  and it has a  .tolist()  method. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41946965)
 Easy: 

  pd.concat([pd.DataFrame(l) for l in my_list],axis=1).T
  



