Query: How to count the number of words in a sentence?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/17268976)
 Use a list comprehension: 

  >>> word = "dog"
>>> str1 = "the dogs barked"
>>> sum(i == word for word in str1.split())
0

>>> word = 'dog'
>>> str1 = 'the dog barked'
>>> sum(i == word for word in str1.split())
1
  

  split()  returns a list of all the words in a sentence. Then we use a list comprehension to count how many times the word appears in a sentence.  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19410075)
 You can use http://docs.python.org/2/library/re.html#re.findall: 

  import re
line = " I am having a very nice day."
count = len(re.findall(r'\w+', line))
print (count)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/17268988)
 You can use http://docs.python.org/2/library/stdtypes.html#str.split to convert the sentence to a list of words: 

  a = 'the dogs barked'.split()
  

 This will create the list: 

  ['the', 'dogs', 'barked']
  

 You can then count the number of exact occurrences using http://docs.python.org/2/tutorial/datastructures.html: 

  a.count('dog')  # 0
a.count('dogs') # 1
  

 If it needs to work with punctuation, you can use regular expressions. For example: 

  import re
a = re.split(r'\W', 'the dogs barked.')
a.count('dogs') # 1
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/44272560)
      def wordCount(mystring):  
        tempcount = 0  
        count = 1  

        try:  
            for character in mystring:  
                if character == " ":  
                    tempcount +=1  
                    if tempcount ==1:  
                        count +=1  

                    else:  
                        tempcount +=1
                 else:
                     tempcount=0

             return count  

         except Exception:  
             error = "Not a string"  
             return error  

    mystring = "I   am having   a    very nice 23!@$      day."           

    print(wordCount(mystring))  
  

 output is 8 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/50059100)
  s = "I     am having  a   very  nice  23!@$      day. "
sum([i.strip(string.punctuation).isalpha() for i in s.split()])
  

 The statement above will go through each chunk of text and remove punctuations before verifying if the chunk is really string of alphabets.  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35277130)
 You can generate a mapping from words to word lengths, as follows: 

  s = "this is a sentence"
words = s.split()
letter_count_per_word = {w:len(w) for w in words}
  

  

  letter_count_per_word == {'this': 4, 'a': 1, 'is': 2, 'sentence': 8}
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/8272581)
 wilberforce has the quick, correct answer, and I'll give the long winded 'how to get to that conclusion' answer. 

 First, here are some tools to get you started, and some questions you need to ask yourself. 

 You need to read the section on http://docs.python.org/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange, in the python docs, because it is your best friend for solving this problem. . Once you have read that, you should have some ideas. For example you can take a long string and break it up using the split() function. To be explicit: 

  mystring = "This sentence is a simple sentence."
result = mystring.split()
print result
print "The total number of words is: "  + str(len(result))
print "The word 'sentence' occurs: " + str(result.count("sentence"))
  

 Takes the input string and splits it on any whitespace, and will give you: 

  ["This", "sentence", "is", "a", "simple", "sentence."]
The total number of words is 6
The word 'sentence' occurs: 1
  

 Now note here that you do have the period still at the end of the second 'sentence'. This is a problem because 'sentence' is not the same as 'sentence.'. If you are going to go over your list and count words, you need to make sure that the strings are identical. You may need to find and remove some punctuation. 

 A naieve approach to this might be: 

  no_period_string = mystring.replace(".", " ")
print no_period_string
  

 To get me a period-less sentence: 

  "This sentence is a simple sentence"
  

 You also need to decide if your input going to be just a single sentence, or maybe a paragraph of text. If you have many sentences in your input, you might want to find a way to break them up into individual sentences, and  find  the periods (or question marks, or exclamation marks, or other punctuation that ends a sentence). Once you find out where in the string the 'sentence terminator' is you could maybe  split  up the string at that point, or something like that. 

 You should give this a try yourself - hopefully I've peppered in enough hints to get you to look at some specific functions in the documentation. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/54732096)
   .count  the spaces (separating words):  [s for s in sentences if s.count(' ') == max(s.count(' ') for s in sentences)]  ( s[0]  if you have each sentence in a separate list and maybe getting  max  first to save time) 

 If your words can also be separated by any punctuation, you will probably want to use  re , as in your example, just  findall ing on  every sentence , like this: 

  import re
pattern = re.compile(r'\w+')
# note I changed some stuff to have words only separated by punctuation
sentences = [["I like:apple"], ["I (really)like playing basketball"], ["how are you doing"]]
current_s = []
current_len = 0
for s in sentences:
    no = len(pattern.findall(s[0]))  # [0] because you have each sentence in a separate list
    if no == current_len:
        current_s.append(s)
    elif no > current_len:
        current_s = [s]
        current_len = no
print('the most number of words is', current_len)
print('\n'.join(current_s))
  



