Query: how to read a file in other directory in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/13223857)
 You can't "open" a  directory  using the  open  function. This function is meant to be used to open  files . 

 Here, what you want to do is open the  file  that's in the  directory . The first thing you must do is compute this file's path. The  os.path.join  function will let you do that by joining parts of the path (the directory and the file name): 

  fpath = os.path.join(direct, "5_1.txt")
  

 You can then open the file: 

  f = open(fpath)
  

 And read its content: 

  content = f.read()
  

 

 Additionally, I believe that on Windows, using  open  on a directory does return a  PermissionDenied  exception, although that's not really the case. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/13224452)
 i found this way useful also. 

  import tkinter.filedialog
from_filename = tkinter.filedialog.askopenfilename()  
  

 here a window will appear so you can browse till you find the file , you click on it then you can continue using open , and read .   

  from_file = open(from_filename, 'r')
contents = from_file.read()
contents
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/37535843)
 You can use the  os  module to list the files. 

  import os

files = os.listdir(os.getcwd())

m_class = "ABC1"
m_id = "123"
device = m_class + "-" + m_id
file_extension = ".log"

# filter the files by their extension and the starting name
files = [x for x in files if x.startswith(device) and x.endswith(file_extension)]

f = open("output.csv", "a")
for file in files:
    with open(file, "r") as data_file:
        f.write(data_file.read())
    f.write(",\n")

f.close()
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/13223867)
 Looks like you are trying to open a  directory  for reading as if it's a regular file. Many OSs won't let you do that. You don't need to anyway, because what you want (judging from your description) is  

  x_file = open(os.path.join(direct, "5_1.txt"), "r")  
  

  

  x_file = open(direct+"/5_1.txt", "r")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/14410781)
  glob  is an easy way to traverse a directory and use all of and only the files you want. 

  import os, glob

for file in glob.glob("*.txt"):
    parser(file)
  

 Or if you get the whole directory as a list using  os.listdir()  you can just traverse that and check the strings using  .endswith() , for example: 

  input_dir = os.listdir(sys.argv[1])

for file in input_dir:
  if file.endswith(".txt"):
    parser(file)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/13223834)
 In case you're not in the specified directory (i.e. direct), you should use (in linux): 

  x_file = open('path/to/direct/filename.txt')
  

 Note the quotes and the relative path to the directory. 

 This may be your problem, but you also don't have permission to access that file.
Maybe you're trying to open it as another user. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/37535817)
 Your question could be better stated, based on your current code snipet, I'll assume that you want to: 

 
 Filter files in a directory based on glob pattern. 
 Concatenate their contents to a file named  output.csv . 
 

 In python you can achieve (1.) by using https://docs.python.org/2/library/glob.html to list filenames. 

  import glob

for filename in glob.glob('foo*bar'):
    print filename
  

 That would print all files starting with  foo  and ending with  bar  in
the current directory. 

 For (2.) you just read the file and write its content to your desired
output, using python's  open()  builtin function: 

  open('filename', 'r')
  

 (Using  'r'  as the mode you are asking python to open the file for
"reading", using  'w'  you are asking python to open the file for
"writing".) 

 The final code would look like the following: 

  import glob
import sys

device = 'ABC1-123'
with open('output.csv', 'w') as output:
    for filename in glob.glob(device+'*'):
        with open(filename, 'r') as input:
            output.write(input.read())
  



