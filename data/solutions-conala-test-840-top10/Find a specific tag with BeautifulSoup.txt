Query: Find a specific tag with BeautifulSoup
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/18800892)
  <td id="contact1">  is the  first  tag with an id of  "contact1" . To obtain it, then  soup.find  is all you need: 

  >>> print soup.find(id='contact1').text.strip()
2011XXA4438F
  

 If you're looking for other tags, then you'll want to use  find_all : 

  >>> print soup.find_all(id='contact1')
[<td id="contact1">
2011XXA4438F </td>, <td id="contact1"> SAM SRINIVAS KRISHNAGOPAL</td>, <td id="contact1"> 9894398690 </td>, <td id="contact1"> </td>]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/54163191)
 BeautifulSoup lets you define a function and pass it into its  find_all()  method: 

  def has_class_but_not_itemprop(tag):
    return tag.has_attr('class') and not tag.has_attr('itemprop')

# Pass this function into find_all() and youâ€™ll pick up all the   
# tags you're after:

soup.find_all(has_class_but_not_itemprop)
# [<p class="cost">... ,
#  <p class="cost">... ,
#  <p class="cost">... ]
  

 For more information, see the https://www.crummy.com/software/BeautifulSoup/bs4/doc/#a-function. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/9957754)
 I also had same problem. 

    

  soup.findAll("a",{"class":"black"})
  

  

  soup.find_all("a",{"class":"black"})
  

 soup.findAll() works well for me. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3945764)
 The following should work 

  soup = BeautifulSoup(htmlstring)
soup.findAll('div', style="width=300px;")
  

 There are couple of ways to search for tags. 

 
 http://www.crummy.com/software/BeautifulSoup/documentation.html 
 

 For more text to understand and use it 

 
 http://lxml.de/elementsoup.html 
 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/50124934)
 You can use  enumerate  with  find_all : 

  result = [a.text for i, a in enumerate(soup.find_all("td", {"class": "QL"}), start=1) if i == 19][0]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/23762557)
 There's no  a  tag with the attribute  c , but  c1  and  c2 . 

  links = soup.find_all('a',{'id' : 'c1'})
  

 If you want to find all  a  with attribute that starts with  c , you need to pass regular expression: 

  import re

links = soup.findAll('a', {'id': re.compile('^c')})
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/13943114)
 This should work: 

  for tag in soup.findAll('span'):
    if tag.has_key('class'):
        if tag['class'] == 'ID2':
            # do stuff
  

 Tested this code: 

  from BeautifulSoup import BeautifulSoup

text = '''
<span class="ID1"> TEXT </span>
<span class="ID2"> TEXT2 </span>
'''

soup = BeautifulSoup(text)

for tag in soup.findAll('span'):
    if tag.has_key('class'):
        if tag['class'] == 'ID2':
            print tag.string
            break
  

 Gives the following output: 

 TEXT2  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/45193575)
 with bs4 things have changed a little. so the code should look like this 

  soup = BeautifulSoup(htmlstring,'lxml')
soup.find_all('div', {'style':"width=300px;"})  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/52659852)
 Looks like you need  findNext  method. 

    

  from bs4 import BeautifulSoup


html = """<div class = "some class">
    <h4>X1</h4>
    www.someurl.com
</div>"""

soup = BeautifulSoup(html, "html.parser")
for tag in soup.find_all("h4", text="X1"):     #Find all h4 with required text. 
    print(tag.findNext("a").text)
  

  Output:  

 <code
  



