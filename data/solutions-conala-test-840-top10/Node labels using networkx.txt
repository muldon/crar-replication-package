Query: Node labels using networkx
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/28823029)
 Just add  with_labels=True  to your code. 

  import matplotlib.pyplot as plt
import networkx as nx
socialNetworl = nx.Graph()
socialNetworl.add_nodes_from([1,2,3,4,5,6])
socialNetworl.add_edges_from([(1,2),(1,3),(2,3),(2,5),(2,6)]) 
nx.draw(socialNetworl, node_size = 800, node_color="cyan", with_labels = True)
plt.show()
  

   

 If you want to change the labels, create a dict with the labels and pass  labels=theLabelDict  into  nx.draw : 

  import matplotlib.pyplot as plt
import networkx as nx
socialNetworl = nx.Graph()
socialNetworl.add_nodes_from([1,2,3,4,5,6])
socialNetworl.add_edges_from([(1,2),(1,3),(2,3),(2,5),(2,6)]) 
labels = {1:'King Arthur', 2:'Lancelot', 3:'shopkeeper', 4:'dead parrot', 5:'Brian', 6:'Sir Robin'}
nx.draw(socialNetworl, node_size = 800, node_color="cyan", labels=labels, with_labels = True)
plt.show()
  

   


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/42554082)
  

  G=nx.Graph()
G.add_nodes_from(range(20))
e = [(0,1),(0,2)]
G.add_edges_from(e)

# some labels
labels={}

nx.draw_circular(G, node_color='y', edge_color='#909090', node_size=500,labels=labels)

plt.axis('equal')
  

 https://i.stack.imgur.com/num0J.png 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/15549916)
 You can add the  with_labels=False  keyword to suppress drawing of the labels with  networkx.draw() , e.g. 

  networkx.draw(G, pos=pos, node_color=colors[curve],
    node_size=80, with_labels=False)
  

 Then draw specific labels with 

  networkx.draw_networkx_labels(G,pos, labels)
  

 where labels is a dictionary mapping node ids to labels. 

 Take a look at this example http://networkx.github.com/documentation/latest/examples/drawing/labels_and_colors.html 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/28820611)
 You can draw the node labels separately with https://networkx.github.io/documentation/latest/reference/generated/networkx.drawing.nx_pylab.draw_networkx_labels.html#networkx.drawing.nx_pylab.draw_networkx_labels (and control lots of other label options too). For example, after adding the nodes and edges, you could write: 

  pos=nx.spring_layout(socialNetworl)
nx.draw(socialNetworl, pos=pos, node_size = 800, node_color="cyan")
nx.draw_networkx_labels(socialNetworl, pos=pos);
plt.show()
  

 Which draws: 

   


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/49032744)
 Basically, the flag  with_labels  should really be called  with_node_labels  as it triggers only the plotting of the node labels. Hence you need to manually add the edge labels ( networkx.draw_networkx_edge_labels ) after having drawn the graph (networkx.draw`), and you need to 1) plot on the same axis, and 2) use the same graph layout for both plots.   

  import numpy as np
import matplotlib.pyplot as plt
import networkx as nx
import csv

# load data
dictReader = csv.DictReader(open('nations.csv', 'rt'), fieldnames = ['entity1', 'relation', 'entity2'], delimiter = ',', quotechar = '"')

# create a more amenable data structure
edge_to_label = {(d['entity1'], d['entity2']) : d['relation'] for d in dictReader}

# create graph
G = nx.from_edgelist(edge_to_label.keys())

# precompute layout (default layout used here)
layout = nx.layout.fruchterman_reingold_layout(G)

# create figure so we plot the graph and labels on the same plot
fig, ax = plt.subplots(1,1)

# draw graph
nx.draw(G, pos=layout, ax=ax, with_labels=True)

# draw labels using the same, pre-computed graph layout
nx.draw_networkx_edge_labels(G, pos=layout, edge_labels=edge_to_label, ax=ax)

plt.show()
  

 https://i.stack.imgur.com/hhDJG.png 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/52683100)
 Did you want something like this use  nx.draw_networkx_nodes  using  nodelist  parameter: 

  # Author: Aric Hagberg (hagberg@lanl.gov)
import matplotlib.pyplot as plt
import networkx as nx

G = nx.Graph()

G.add_edge('a', 'b', weight=0.6)
G.add_edge('a', 'c', weight=0.2)
G.add_edge('c', 'd', weight=0.1)
G.add_edge('c', 'e', weight=0.7)
G.add_edge('c', 'f', weight=0.9)
G.add_edge('a', 'd', weight=0.3)

elarge = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] > 0.5]
esmall = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] <= 0.5]

pos = nx.spring_layout(G)  # positions for all nodes

# nodes
nx.draw_networkx_nodes(G, pos, node_size=700, nodelist=['e','f','b'])
nx.draw_networkx_nodes(G, pos, node_size=1400, nodelist=['c','a','d'], node_color='blue')

# edges
nx.draw_networkx_edges(G, pos, edgelist=elarge,
                       width=6)
nx.draw_networkx_edges(G, pos, edgelist=esmall,
                       width=6, alpha=0.5, edge_color='b', style='dashed')

# labels
nx.draw_networkx_labels(G, pos, font_size=20, font_family='sans-serif')

plt.axis('off')
plt.show()
  

 Output: 

 https://i.stack.imgur.com/lEneK.png 

 And changing labels and shapes too: 

  # Author: Aric Hagberg (hagberg@lanl.gov)
import matplotlib.pyplot as plt
import networkx as nx

G = nx.Graph()

G.add_edge('a', 'b', weight=0.6)
G.add_edge('a', 'c', weight=0.2)
G.add_edge('c', 'd', weight=0.1)
G.add_edge('c', 'e', weight=0.7)
G.add_edge('c', 'f', weight=0.9)
G.add_edge('a', 'd', weight=0.3)

elarge = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] > 0.5]
esmall = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] <= 0.5]

pos = nx.spring_layout(G)  # positions for all nodes

# nodes
nx.draw_networkx_nodes(G, pos, node_size=700, nodelist=['e','f','b'])
nx.draw_networkx_nodes(G, pos, node_size=1400, nodelist=['c','a','d'], 
                       node_color='blue', node_shape='^')

# edges
nx.draw_networkx_edges(G, pos, edgelist=elarge,
                       width=6)
nx.draw_networkx_edges(G, pos, edgelist=esmall,
                       width=6, alpha=0.5, edge_color='b', style='dashed')

# labels
nx.draw_networkx_labels(G, pos, font_size=20, font_family='sans-serif', 
                        labels={'f':'f','e':'e','b':'b'})
nx.draw_networkx_labels(G, pos, font_size=20, font_family='sans-serif', font_color='white',
                        labels={'d':'d','a':'a','c':'c'})

plt.axis('off')
plt.show()
  

 Output: 

 <a href="https://i.stack.imgur.com/arlI5.png"  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/54782595)
 The problem is that you are not specifying any  pos  attribute for the node  Winterfell , and then when you try to access it in  draw_networkx_edge_labels  it doesn't find it. 

 If you try giving it a position attribute, say: 

        location    x    y
0      TheWall  145  570
1   Winterfell  142  520
2  WhiteHarbor  140  480
  

 Then the attributes of all nodes can be correctly accessed and the network is corectly drawn: 

  plt.figure()
G=nx.Graph()

df1 = df1.reset_index(drop=True)
df2 = df2.reset_index(drop=True)

for i, x in enumerate(df1['location']):
    G.add_node(x, pos=(df1.loc[i,'x'], df1.loc[i,'y']))

for x, x2, w in zip(df2['location'], df2['x'], df2['y']):
    G.add_edge(x, x2, weight=w)

plt.figure(figsize=(15,15)) 

pos = nx.get_node_attributes(G, 'pos')
weights = nx.get_edge_attributes(G, 'weight') 
nx.draw(G, pos=pos, node_size=40, with_labels=True, fontsize=9)
nx.draw_networkx_edge_labels(G, pos=pos, edge_labels=weights)

plt.show()
  

 https://i.stack.imgur.com/RRqd7.png 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/10105021)
 I use version 1.6 of NetworkX, and there I can submit  label_pos  to  draw_networkx_edge_labels() . By default, this is set to 0.5, but using your example and setting it to 0.3, I get the following result:
  

  nx.draw_networkx_edge_labels(G,pos, 
    {
        (a,b):"x", (b,c):"y", (c,d):"w", (a,d):"z", (a,c):"v", (b,d):"r"
    },
    label_pos=0.3
)
  

 https://networkx.lanl.gov/trac/changeset/2f89194047c52703e41a989ec1920467610ded2b/networkx 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/32894317)
 You just need to call the  with_labels=True  parameter with nx.Draw(): 

  import networkx as nx
import matplotlib.pyplot as plt

G = nx.DiGraph()

G.add_nodes_from([1, 2, 3, 4])
G.add_edges_from([(1, 2), (2, 1), (2, 3)])

nx.draw(G,with_labels=True)
plt.savefig("graph.png")
plt.show()
  

 You can also call font_size, font_color, etc. 

 https://networkx.github.io/documentation/latest/reference/drawing.html 



