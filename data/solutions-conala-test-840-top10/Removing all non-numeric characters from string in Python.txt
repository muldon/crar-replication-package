Query: Removing all non-numeric characters from string in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1387394)
 This should work for strings and unicode objects: 

  # python <3.0
def only_numerics(seq):
    return filter(type(seq).isdigit, seq)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/6633351)
 Eliminate characters in " Punctuation, Other " Unicode category. 

  # -*- coding: utf-8 -*-

import unicodedata

# This removes punctuation characters.
def strip_po(s):
  return ''.join(x for x in s if unicodedata.category(x) != 'Po')

# This reduces multiple whitespace characters into a single space.
def fix_space(s):
  return ' '.join(s.split())

s = u'A string, with characters µ, æ, Å, Ç, ß,... Some    whitespace  confusion  ?'
print fix_space(strip_po(s))
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/17337613)
 The easiest way is with a regexp 

  import re
a = 'lkdfhisoe78347834 (())&/&745  '
result = re.sub('[^0-9]','', a)

print result
>>> '78347834745'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/19616642)
 Add  [ ,  ]  to the charcter class ( [ .. ] ) with escaping. 

  re.sub(r'[^a-zA-Z0-9\[\]]',' ', text)
  

 Example: 

  >>> re.sub(r'[^a-zA-Z0-9\[\]]', ' ', 'a,b[c-d]!')
'a b[c d] '
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/25140599)
 No need to do regex here, just a simple comprehension will work: 

  >>> import string
>>> word = "baa!!!!! baa sheep23? baa baa"
>>> "".join([l for l in word if l in string.ascii_letters+string.whitespace])
'baa baa sheep baa baa'
  



