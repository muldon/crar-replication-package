Query: Joining a list that has Integer values with Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/43360465)
 You can do this by converting each digit to a string, joining them, and casting them as an integer. 

  int("".join(map(str,random.sample(range(0,9),4))))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/29570614)
 You can use a list to store your result then print the list in reverse order 

  def decimal_to_base4(num):
    base4_ = []
    while num > 0:
        quotient = num//4
        base4 = num%4
        num = quotient
        base4_.append(str(base4))
    base4_ = "".join(base4_)
    print base4_[::-1]
decimal_to_base4(45)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/23102178)
 I might be missing the point of your question, but you could simply extend the approach you link to as follows: 

  >>> x = range(10)
>>> out = " ".join(map(str, ["foo", "bar", len(x)] + x))
>>> out
'foo bar 10 0 1 2 3 4 5 6 7 8 9'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/43575400)
 It can be done by converting every integer to string and joining the strings: 

  p = [''.join(map(str, sub_list)) for sub_list in p]  # ['1234', '2341']
  

 Ever every nested list, like  [1, 2, 3, 4] ,  map(str, [1, 2, 3, 4])  would create a list of strings. In this example:  ['1', '2', '3', '4'] . Using the https://docs.python.org/2/library/stdtypes.html#str.join function, the string-numbers are mapped into a single string,  '1234' . 

 Since this operation is performed for every sub-list, the result is a a list of the joined strings. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/1915540)
 simply put: 

 
  flattening the list 

  [e for e in (itertools.chain(*x))]
   
  removing the negative sign 

  e.replace('-','')
   
  joining the numbers in a list into a string and turning it into a number 

  int(''.join(x))
   
 

  

  x2 = int(''.join([e.replace('-','') for e in (itertools.chain(*x))]))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/22853192)
 Just calling  str()  on the list makes the output you want: 

  >>> li = [0, 1, 2, 3, 4, 5, 6, 7]
>>> st = '"fileselection":'
>>> st + str(li)
'"fileselection":[0, 1, 2, 3, 4, 5, 6, 7]'
  

 

 The problem you see is because the elements of  li  are integers, for joining them to a string you need first to cast them to  str . You can do this by applying  str()  function via  map() : 

  >>> st + ','.join(map(str, li))
'"fileselection":0,1,2,3,4,5,6,7'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/29570668)
 You could build the integer one digit at a time, then print it: 

  def decimal_to_base4(num):
    result=""
    while num > 0:
        quotient = num//4
        result+=str(num%4)
        num = quotient
    result = result[::-1]
    print(result, end="")
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/11179103)
 You don't need to build all those lists. Just loop over the return value from  permutations , joining and parsing as an integer each permutation as it comes by: 

  def nexthigher(n):
    for p in permutations(sorted(str(n))):
        i = int("".join(p))
        if i > n:
            return i
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/41067989)
 If you have a list of  int s and you want to join them together, you can use https://docs.python.org/3/library/functions.html#map with https://docs.python.org/3/library/functions.html#func-str to convert them to strings,  join  them on the empty string and then cast back to  int s with https://docs.python.org/3/library/functions.html#int. 

 In code, this looks like this: 

  r = int("".join(map(str, x)))
  

 and  r  now has the wanted value of  135 . 

 This, of course, is a limited approach that comes with some conditions. It requires the list in question to contain nothing else but positive  int s (as your sample) or strings representing  int s, else the steps of conversion to string might fail or the joining of (negative) numbers will be clunky.  



