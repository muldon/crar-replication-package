Query: trim whitespace
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/761822)
 You want strip(): 

  myphrases = [ " Hello ", " Hello", "Hello ", "Bob has a cat" ]

for phrase in myphrases:
    print phrase.strip()
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/761816)
 This will remove  all  leading and trailing whitespace in  myString : 

  myString.strip()
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10192113)
  strip  is not limited to whitespace characters either: 

  # remove all leading/trailing commas, periods and hyphens
title = title.strip(',.-')
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/1185528)
 For leading and trailing whitespace: 

  s = '   foo    \t   '
print s.strip() # prints "foo"
  

 Otherwise, a regular expression works: 

  import re
pat = re.compile(r'\s+')
s = '  \t  foo   \t   bar \t  '
print pat.sub('', s) # prints "foobar"
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/9326184)
 Python  trim  method is called  strip : 

  str.strip() #trim
str.lstrip() #ltrim
str.rstrip() #rtrim
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/30929218)
      something = "\t  please_     \t remove_  all_    \n\n\n\nwhitespaces\n\t  "

    something = "".join(something.split())
  

 output:
  please_remove_all_whitespaces 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/8429837)
 Use http://docs.python.org/library/stdtypes.html#str.split:  

  >>> ll = "3a.24.5t.5a  4     1743 3150924      2786 0".split()
>>> ll
['3a.24.5t.5a', '4', '1743', '3150924', '2786', '0']
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/6039813)
 As pointed out in answers above  

  myString.strip()
  

 will remove all the leading and trailing whitespace characters such as \n, \r, \t, \f, space. 

 For more flexibility use the following 

 
 Removes only  leading  whitespace chars:  myString.lstrip()  
 Removes only  trailing  whitespace chars:  myString.rstrip()  
 Removes  specific  whitespace chars:  myString.strip('\n')  or  myString.lstrip('\n\r')  or  myString.rstrip('\n\t')  and so on. 
 

 More details are available in the http://docs.python.org/release/2.3/lib/module-string.html 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/761825)
   If the second, then strings already have a  .strip()  method: 

  >>> ' Hello '.strip()
'Hello'
>>> ' Hello'.strip()
'Hello'
>>> 'Bob has a cat'.strip()
'Bob has a cat'
>>> '          Hello        '.strip()  # ALL spaces at ends removed
'Hello'
  

 If you need only to remove one space however, you could do it with: 

  def strip_one_space(s):
    if s.endswith(" "): s = s[:-1]
    if s.startswith(" "): s = s[1:]
    return s

>>> strip_one_space("   Hello ")
'  Hello'
  

 Also, note that  str.strip()  removes other whitespace characters as well (e.g. tabs and newlines).  To remove only spaces, you can specify the character to remove as an argument to  strip , i.e.: 

  >>> "  Hello\n".strip(" ")
'Hello\n'
  



