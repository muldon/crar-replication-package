Query: How to set window size using phantomjs and selenium webdriver in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/21900590)
 Because that's Java. Python's documentation is http://seleniumhq.github.io/selenium/docs/api/py/index.html. 

 There's a method called  set_window_size , which is defined <a href="https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py" : 

  driver.set_window_size(1400,1000)
  

 Further reading:  http://yizeng.me/2014/02/23/how-to-get-window-size-resize-or-maximize-window-using-selenium-webdriver/ 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/40037621)
 I write a full example to set all headers , window size and proxy in selenium phantomjs: 

  from selenium import webdriver

def init_phantomjs_driver(*args, **kwargs):

    headers = { 'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.2; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0',
        'Connection': 'keep-alive'
    }

    for key, value in headers.iteritems():
        webdriver.DesiredCapabilities.PHANTOMJS['phantomjs.page.customHeaders.{}'.format(key)] = value

    webdriver.DesiredCapabilities.PHANTOMJS['phantomjs.page.settings.userAgent'] = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36'

    driver =  webdriver.PhantomJS(*args, **kwargs)
    driver.set_window_size(1400,1000)

    return driver


def main():
    service_args = [
        '--proxy=127.0.0.1:9999',
        '--proxy-type=http',
        '--ignore-ssl-errors=true'
        ]

    driver = init_phantomjs_driver(service_args=service_args)

    driver.get('http://cn.bing.com')
  

 Note:</h3>

  userAgent  is set in  phantomjs.page.settings.userAgent  instead of  phantomjs.page.customHeaders  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/41849258)
 I was getting the same issue with PhantomJS. I solved it by adding a line to set window size after creating a driver reference as- 

  driver = webdriver.PhantomJS()
driver.set_window_size(1124, 850) # set browser size.
driver.get("http:example.com") # Load page
  

 The solution is we need to set a fake browser size before doing browser.get(""). 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/31429811)
  browser = webdriver.PhantomJS()
browser.set_window_size(1200,800)
  

 Without setting the window size, the browser remains in mobile size causing errors. Try a implicit wait too. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/23898148)
 Python</h3>

 The easiest way to hide the browser is to http://phantomjs.org/download.html.  

  driver = webdriver.Firefox()
  

  

  driver = webdriver.PhantomJS()
  

 The rest of your code won't need to be changed and no browser will open. For debugging purposes, use  driver.save_screenshot('screen.png')  at different steps of your code or just switch to the Firefox webdriver again. 

 On Windows, you will have to specify the path to phantomjs.exe: 

  driver = webdriver.PhantomJS('C:\phantomjs-1.9.7-windows\phantomjs.exe')
  

 

 Java</h3>

 Have a look at Ghost Driver: https://stackoverflow.com/questions/14122185/how-to-run-ghostdriver-from-java 

 

  C# </h3>

 https://stackoverflow.com/questions/45233065/how-to-hide-firefoxdriver-using-selenium-or-put-it-in-cform 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/40037645)
 Andriy Ivaneyko's method not work for me (PhantomJS 2.1.1 and Selenium 2.48.0). 

 I write a full example to set all headers, window size and proxy in Selenium PhantomJS: 

  from selenium import webdriver

def init_phantomjs_driver(*args, **kwargs):

    headers = { 'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.2; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0',
        'Connection': 'keep-alive'
    }

    for key, value in headers.iteritems():
        webdriver.DesiredCapabilities.PHANTOMJS['phantomjs.page.customHeaders.{}'.format(key)] = value

    webdriver.DesiredCapabilities.PHANTOMJS['phantomjs.page.settings.userAgent'] = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36'

    driver =  webdriver.PhantomJS(*args, **kwargs)
    driver.set_window_size(1400,1000)

    return driver


def main():
    service_args = [
        '--proxy=127.0.0.1:9999',
        '--proxy-type=http',
        '--ignore-ssl-errors=true'
        ]

    driver = init_phantomjs_driver(service_args=service_args)

    driver.get('http://cn.bing.com')
  

 Note 1:</h3>

  userAgent  is set in  phantomjs.page.settings.userAgent  instead of  phantomjs.page.customHeaders  

 Note 2:</h3>

 Andriy Ivaneyko use  enumerate  to build  DesiredCapabilities.PHANTOMJS , the key is loop index, so the data become: 

  {
 'browserName': 'phantomjs',
 'javascriptEnabled': True,
 'phantomjs.page.customHeaders.0': 'Accept-Language',
 'phantomjs.page.customHeaders.1': 'Accept-Encoding',
 'phantomjs.page.customHeaders.2': 'Accept',
 'phantomjs.page.customHeaders.3': 'User-Agent',
 'phantomjs.page.customHeaders.4': 'Connection',
 'phantomjs.page.customHeaders.5': 'Cache-Control',
 'platform': 'ANY',
 'version': ''
}
  

 None of header attributes is set correctly. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/23948384)
 I found the easiest way was to use PhantomJS, per St√©phane's suggestion. I downloaded the binary and put phantomjs in my PATH, in my case (Mac OS) in /usr/bin/. I like to retain the option of seeing what's going on so I wrapped it like this (in Python): 

  def new_driver():
    if 'VISIBLE_WEBDRIVER' in os.environ:
        return webdriver.Firefox()
    else:
        return webdriver.PhantomJS()
  

 References: 
http://blog.likewise.org/2013/04/webdriver-testing-with-python-and-ghostdriver/ 
http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs/ 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/35096504)
 The option given by @alecxe is valid too. In my particular case, the webpage uses  SSL , so the solution is to create the  PhantomJS  as: 

  self.driver = webdriver.PhantomJS(service_args=['--ignore-ssl-errors=true', '--ssl-protocol=any'])
  

 Also make sure to set the window size, in order to create a dummy browser: 

  self.driver.set_window_size(1120, 550)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/40021090)
 I was able to get this to work (using both firefox and phantomjs) 

  from selenium import webdriver
from bs4 import BeautifulSoup
import time

if __name__ == '__main__':
    tag = input("Enter a hashtag you would like to search: ")
    url = 'https://www.instagram.com/instagram/'
    driver = webdriver.PhantomJS('<yourPathToPhantomJS>')
    driver.set_window_size(1124, 850)
    # driver = webdriver.Firefox()
    driver.get(url)
    search = driver.find_elements_by_tag_name('input')
    if tag != '#':
        search[0].click()
        search[0].send_keys('#' + tag)
    else:
        search[0].send_keys(tag)
    time.sleep(10)
    html = driver.page_source
    soup = BeautifulSoup(html)
    links = soup.find_all('a', {'class': '_k2vj6'})
    for link in links:
        print(link)
  

 Two nits: 

 
 I had to set the browser's window size for it to work in phantomJS 
 For a few of my tests, five seconds was not long enough for the dropdown to load. 
 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/39600457)
 If it is about changing window size, you can set it by 

  driver.set_window_size(480, 320)
  

 Here is an example of doing this from https://gist.github.com/jsok/9502024 of one of the developers. As you can see, you can adjust both Window size and quality of the screenshot. 

  import StringIO
from selenium import webdriver
from PIL import Image


# Install instructions
#
# npm install phantomjs
# sudo apt-get install libjpeg-dev
# pip install selenium pillow


driver = webdriver.PhantomJS(executable_path="node_modules/phantomjs/bin/phantomjs")
driver.set_window_size(1366, 728) # optional
driver.get('http://google.com')
driver.save_screenshot('screen_hires.png')

screen = driver.get_screenshot_as_png()

# Crop it back to the window size (it may be taller)
box = (0, 0, 1366, 728)
im = Image.open(StringIO.StringIO(screen))
region = im.crop(box)
region.save('screen_lores.jpg', 'JPEG', optimize=True, quality=95)
  

 The quality of 100 is max, 0 - min. 

  EDIT:  

 You can also use  selenium.windowMaxmize() . 

 And if you want to magnify the screen to see some specific texts as you said, you can try this in Mozilla: 

  from selenium.webdriver.common.keys import Keys    

br = webdriver.Firefox()
zoom = ActionChains(br)
body = br.find_element_by_tag_name('body')
for i in range(2):
    zoom.send_keys_to_element(body,Keys.CONTROL,"+").perform()
  



