Query: Generate random integer
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/42540879)
 You could use an update  too  eg: 

  Update Test set Projection =  FLOOR(1 +  RAND() * 57000 )
  

 
   To obtain a random integer R in the range i <= R < j, 
  
   use the expression  

   FLOOR(i + RAND() * (j âˆ’ i))
  
 

 see  man  https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html#function_rand 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/1313721)
 well, just use hexdec on the result of openssl_random_pseudo_bytes and you will get your integer. It is as elegant as it gets :) 

  print hexdec('45261b8f');

>  1160125327
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/29989409)
 I would suggest either using a UUID/GUID (not an integer) to minimize the possibility of clashes, or using an identity column (not random) to guarantee uniqueness. Does it have to be an integer and does it have to be random? 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/4523413)
 Yes, you can obtain some random data (e.g. from  /dev/urandom , or  openssl_random_pseudo_bytes ). 

 Then convert the data into its decimal representation, using e.g. bcmath or gmp. See https://stackoverflow.com/questions/2982112/encoding-arbitrary-data-into-numbers/3402951#3402951 on how to do that. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/42540886)
 you're about to  update  table with random integer, use MySQL: 

  SELECT (FLOOR( 1 + RAND( ) * 100 )) -- returns random int in 1-100
  

 your php code: 

  //$data = rand(intval(5000),intval(57000));
//echo $data;
$low = 5000 ; $high = 57000 ; $d = $high - $low ;
$sql = "UPDATE Test
        SET Projection = (FLOOR( $low +RAND()* $d ))
        WHERE DayColumn in ( 'Friday' , 'Saturday' , 'Sunday')
        ;" ;
mysqli_query($conn,$sql);
echo "complete"
  

 If you want do some thing else based on this value, before updating or after, let me know to edit my answer. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/4523388)
  mt_rand(0, 10000)  will generate four digits of your random number. Call it several times, concatenate the results: 

  mt_rand(0, 10000) . mt_rand(0, 10000) . mt_rand(0, 100)  - for 10 digits long number. 

 This has numerous issues, but it might be good enough for your particular use case. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/5896618)
 
   generate integers with leading 0's 
 

 An integer will never have leading 0's. 

 If you need leading 0's you nedd to convert the integer to an string -> see the answer from thephpdeveloper. This is the right way for writing an number with leading 0's into a database - for example. 

 If you like to work with that integer (for example for calculations) it's better to leave the integer as an integer (don't change to string) and every time you need to output those numbers -> take the solution from "Stefan Gehrig" 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/53237871)
 If you save the random number to session then you can see if the value is set if the user refresh the page. 

  session_start();
//Check if the value is not set, then set a random number
if(!isset($_SESSION["rand"])) $_SESSION["rand"] = rand(0,1000);

echo $_SESSION["rand"];
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/7381925)
 unix timestamp is an integer from 0 to n so you can just use the normal random method in php :) 

  $timestamp = rand(0, time() - 60*60*24*365*10);

// Prints something like: Monday 8th of August 2005 03:12:46 PM
echo date('l jS \of F Y h:i:s A', $timestamp);
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/17719593)
 A random 14-digit number may be generated simply by using  rand(pow(10,13),pow(10,14)-1)  - PHP can handle integer values up to 2<sup>51</sup>-1, since it silently converts them to double-precision floats if they get too big. 



