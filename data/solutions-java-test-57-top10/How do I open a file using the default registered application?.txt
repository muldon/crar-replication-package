Query: How do I open a file using the default registered application?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9935218)
 Try Desktop.open: 

  Desktop.getDesktop().open(file);
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/27477125)
  If there is a registered program for your file in windows, this should work. (i.e. the default application should open the file) 

  Desktop desktop = Desktop.getDesktop();
desktop.open(file);
  

 The file parameter is a  File  object. 

 https://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html 

 https://docs.oracle.com/javase/tutorial/uiswing/misc/desktop.html  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1015753)
 Use the http://java.sun.com/developer/technicalArticles/J2SE/Desktop/javase6/desktop_api/ 

   Desktop desktop =  Desktop.getDesktop();
 if (desktop.isSupported(Desktop.Action.BROWSE)) {
     desktop.browse(uri);
 }
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/16949751)
  

  Desktop.getDesktop().open(new File("filePath"));
  

 i.e. 

  Desktop.getDesktop().open(new File("C:/doc1.doc"));
  

 It should open the file with the default application 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/26334717)
 http://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html#open%28java.io.File%29 method finds the  specified  default app to open the specified file but in  .file  type there is no default app to open the file.You can only specify manually to open it in specific app.So if you set the default application that should open the  .file  and you have to set the default application and http://windows.microsoft.com/en-in/windows/change-file-open-program#1TC=windows-7 to open the file and than run the program. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/39898972)
 Generally speaking, you can use https://docs.oracle.com/javase/8/docs/api/java/awt/Desktop.html#open-java.io.File- to open a file  natively  as next: 

  final Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
if (desktop != null && desktop.isSupported(Desktop.Action.OPEN)) {
    desktop.open(file);
} else {
    throw new UnsupportedOperationException("Open action not supported");
}
  

 
   Launches the  associated application  to open the file. If the specified
  file is a directory, the file manager of the current platform is
  launched to open it. 
 

 More specifically, in case of a browser you can use directly https://docs.oracle.com/javase/8/docs/api/java/awt/Desktop.html#browse-java.net.URI-, as next: 

  final Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
    desktop.browse(uri);
} else {
    throw new UnsupportedOperationException("Browse action not supported");
}
  

 
    Launches the default browser  to display a  URI . If the default browser
  is not able to handle the specified  URI , the application registered
  for handling  URIs  of the specified type is invoked. The application is
  determined from the protocol and path of the  URI , as defined by the
   URI  class. If the calling thread does not have the necessary
  permissions, and this is invoked from within an applet,
   AppletContext.showDocument()  is used. Similarly, if the calling does
  not have the necessary permissions, and this is invoked from within a
  Java Web Started application,  BasicService.showDocument()  is used. 
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/11106510)
 you can use the following to open files with the default application: 

      /* build up command and launch */
    String command = "";
    String file = "FILE IN HERE";
    if (isLinux()) {
        command = "xdg-open " + file;
    } else if (isWindows()) {
        command = "cmd /C start " + file;
    } else
        return;

    try {
        Runtime.getRuntime().exec(command);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
  

 available since 1.0: http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/1872804)
 You can use the  java.awt.Desktop  if using Java 1.6,  .txt  is registered to the notepad and Desktop is supported:   

      if (!Desktop.isDesktopSupported()) {
        System.err.println("Desktop not supported");
        // use alternative (Runtime.exec)
        return;
    }

    Desktop desktop = Desktop.getDesktop();
    if (!desktop.isSupported(Desktop.Action.EDIT)) {
        System.err.println("EDIT not supported");
        // use alternative (Runtime.exec)
        return;
    }

    try {
        desktop.edit(new File("test.txt"));
    } catch (IOException ex) {
        ex.printStackTrace();
    }
  

 this way you can open/edit files in a more OS independent way. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/17369911)
 Java: 

  Desktop.getDesktop().open(file);
  

 See http://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html#open%28java.io.File%29 for details beyond:  

 
   Launches the associated application to open the file.  
 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/10620409)
  Desktop desktop = Desktop.getDesktop();
File file = new File(path);
desktop.open(file);
  

 opens file in default system viewer 



