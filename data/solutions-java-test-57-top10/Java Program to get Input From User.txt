Query: Java Program to get Input From User
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/16315074)
 Here, the program asks the user to enter a number. After that, the program prints the digits of the number and the sum of the digits. 

  import java.util.Scanner;

public class PrintNumber {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int num = 0;
        int sum = 0;

        System.out.println(
            "Please enter a number to show its digits");
        num = scan.nextInt();

        System.out.println(
            "Here are the digits and the sum of the digits");
        while (num > 0) {
            System.out.println("==>" + num % 10);
            sum += num % 10;
            num = num / 10;   
        }
        System.out.println("Sum is " + sum);            
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/15914921)
 You might want to use the Scanner class: java.util.Scanner 

 The basic setup is simple:  

  Scanner scan = new Scanner(System.in);
int number = scan.nextInt();
  

 This sets up a scanner object and makes the scanner get an integer from the default input stream. 
However, this doesn't check to see if the user entered "good data". It will cause errors if the user enters anything other than a number. You might want to include a loop until the user enters valid data.  

 Here's the same code, but with error checking: 

  Scanner scan = new Scanner(System.in);
boolean validData = false;
int number=0;
do{
    System.out.println("Enter a Number");
    try{
        number = scan.nextInt();//tries to get data. Goes to catch if invalid data
        validData = true;//if gets data successfully, sets boolean to true
    }catch(InputMismatchException e){
        //executes when this exception occurs
        System.out.println("Input has to be a number. ");
    }
}while(validData==false);//loops until validData is true
  

 This program will ask the user to enter a number. If the user enters bad data, an InputMismatchException is thrown, taking the program to the catch clause and skiping setting validData to true. 
This loops until valid data is entered.  

 Hope this helps.  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/34549731)
 There are several ways to get input from the user. Here in this program we will take the Scanner class to achieve the task. This Scanner class comes under  java.util , hence the first line of the program is  import java.util.Scanner;  which allows the user to read values of various types in Java. The import statement line should have to be in the first line the java program, and we proceed further for code. 

  in.nextInt(); // It just reads the numbers

in.nextLine(); // It get the String which user enters
  

 To access methods in the Scanner class create a new scanner object as "in". Now we use one of its method, that is "next". The "next" method gets the string of text that a user enters on the keyboard. 

 Here I'm using  in.nextLine();  to get the String which the user enters. 

  import java.util.Scanner;

class GetInputFromUser {
    public static void main(String args[]) {
        int a;
        float b;
        String s;

        Scanner in = new Scanner(System.in);
        System.out.println("Enter a string");
        s = in.nextLine();
        System.out.println("You entered string " + s);

        System.out.println("Enter an integer");
        a = in.nextInt();
        System.out.println("You entered integer " + a);

        System.out.println("Enter a float");
        b = in.nextFloat();
        System.out.println("You entered float " + b);
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/18722057)
 use do-while: 

  boolean valid;
do {
     System.out.println("What is your age?\n");
     age = userInput.nextInt();
     valid = age > 1 && age < 120;
     if (!valid) {
       System.out.println("ERROR Please enter a valid age");
     }
}while (!valid);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/54429635)
 You did not mention what happens when a valid number is entered or the user enters anything other than an integer number.   
So this code will exit the program when the user enters a non integer value or an integer not between 1 and 4:  

  Scanner input = new Scanner(System.in);
int number = 0;
boolean valid = false;
System.out.println("Enter number: ");
if (input.hasNextLine()) {
    if (input.hasNextInt()) {
        number = input.nextInt();
        if (number >= 1 && number <= 4) {
            valid = true;
            System.out.println("Valid choice:" + number);
        }
    }
    input.nextLine();
    if (!valid) {
        System.out.println("Invalid choice. Good-bye.");
        System.exit(0);
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/51572447)
 Just use  print()  instead of  println() . 

  System.out.print("Enter Number: ");
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/18721944)
 Use a  while  loop. 

  while (true) {
    System.out.println("What is your age?\n");
    age = userInput.nextInt();
    if ((age > 120) || (age < 1))
        System.out.println("ERROR Please enter a valid age\n");
    else
        break;
}
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/31291740)
  userCountryInput  is the input variable.  userInput  is the Scanner variable used to get the input 

  if ("Philippines".equals(userCountryInput)) {
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/32525232)
 Ask for input from the user: 

  int index = aa1.nextInt();
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/19796880)
 You need a constructor 

  public class CreateMember {
    private String input;

    public CreateMember(String input){
        this.input = input;
    }

    public String getInput(){
        return input;
    }
}
  

 To access the input use  CreateMember.getInput()  

  public static void main(String[] args){
    String input = scanner.nextLine();
    CreateMember member = new CreateMember(input);

    System.out.println(member.getInput());
}
  



