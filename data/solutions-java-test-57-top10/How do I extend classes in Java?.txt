Query: How do I extend classes in Java?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2706085)
  Object  is an exception to the first rule, and has no superclass. From http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.1.4: 

 
   The extends clause must not appear in the definition of the class Object, because it is the primordial class and has no direct superclass. 
 

 You can also try it out with reflection: 

  Object.class.getSuperclass(); // returns null
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2706113)
 You'd be better off thinking of this as: 

 
  All java classes must implement the interface implied by the methods in java.lang.Object.
  The concrete class java.lang.Object provides default implementations of these functions.
  All other java classes are derived from the object java.lang.Object and may choose to use or override the default implementations of the methods.
 

 The two main points are: all the classes must implement the implied interface and the Java language spec gives you (forces upon you?) . 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/17241708)
 Since java.lang.Object is the parent of every object in Java, you don't have to explicitly write  extends Object  

 You can always extend any class. If you need to have behavior of 2 classes - you need to use interfaces for that 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/17241642)
 
   If java can only extend one class, and every class extends java.lang.Object, how can it extend another class?  
 

 When you say A extends B then it means that A extends B and B extends  Object . One class can inherit from another which can inherit from another and at the top of the chain is  java.lang.Object . Java doesn't support multiple inheritance , but supports  multi-level  inheritance. 

 
   how come every class doesn't have written "extends Object" ? 
 

 All classes extend  Object  implicitly , so it will be redundant coding. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/13117840)
 By specifying a class to inherit you override the default extends Object. So only when you don't specify a class to inherit does a class extend Object. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/26528384)
 No, Java prevents a class from directly extending more than one super class. Class A can extend a class B which extends class C. This is still single inheritance. All the classes form a tree, where the root is the Object class, and each class (except of Object) has exactly one direct super-class (or parent class), which is either Object or some other class. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/18328658)
 Multiple inheritance is where a single class can extend from multiple classes. That is not possible in java. See here: http://en.wikipedia.org/wiki/Multiple_inheritance 

 When you do  class A extends B  in Java, then  A  extends  B  only, and not  Object .  B  in turn extends  Object  (or whatever else, which will eventually extend object) 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/880671)
 . 

 If you want to extend Person with Student, just do: 

  public class Student extends Person
{
}
  

 And make sure, when you compile both classes, one can find the other one. 

  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/17241652)
 The one and only that you are allowed to extend also extends the class  Object  ultimately.Hence you are not extending twice. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/19546474)
 
   A Java class can only extend one parent class. Multiple inheritance is not allowed. Interfaces are not classes, however, and an interface can extend more than one parent interface. 
 

 for example, take a look here: http://www.tutorialspoint.com/java/java_interfaces.htm 



