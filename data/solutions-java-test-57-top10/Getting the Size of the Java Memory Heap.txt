Query: Getting the Size of the Java Memory Heap
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/11578259)
 The Java Virtual Machine takes two command line arguments which set the initial and maximum heap sizes: -Xms and -Xmx. You can add a system environment variable named _JAVA_OPTIONS, and set the heap size values there. 
For example if you want a 512Mb initial and 1024Mb maximum heap size you could use: 

 under Windows: 

  SET _JAVA_OPTIONS = -Xms512m -Xmx1024m
  

  

  export _JAVA_OPTIONS="-Xms512m -Xmx1024m"
  

 It is possible to read the default JVM heap size programmatically by using totalMemory() method of Runtime class. Use following code to read JVM heap size. 

  public class GetHeapSize {
    public static void main(String[]args){

        //Get the jvm heap size.
        long heapSize = Runtime.getRuntime().totalMemory();

        //Print the jvm heap size.
        System.out.println("Heap Size = " + heapSize);
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/20656383)
 You can get your heap memory size through below programe. 

  public class GetHeapSize {
    public static void main(String[] args) {
        long heapsize = Runtime.getRuntime().totalMemory();
        System.out.println("heapsize is :: " + heapsize);
    }
} 
  

 then accordingly you can increase heap size also by using:
java -Xmx2g
http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/14937427)
 // Get current size of heap in bytes 

  long heapSize = Runtime.getRuntime().totalMemory(); 
  

 // Get maximum size of heap in bytes. The heap cannot grow beyond this size.// Any attempt will result in an OutOfMemoryException. 

  long heapMaxSize = Runtime.getRuntime().maxMemory();
  

 // Get amount of free memory within the heap in bytes. This size will increase // after garbage collection and decrease as new objects are created. 

  long heapFreeSize = Runtime.getRuntime().freeMemory(); 
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/498031)
 The Java heap size limits for Windows are: 

 
  maximum  possible heap size on 32-bit Java:  1.8 GB  
  recommended  heap size limit on 32-bit Java:  1.5 GB  (or  1.8 GB  with /3GB option) 
 

 This doesn't help you getting a bigger Java heap, but now you know you can't go beyond these values. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/14937429)
 Get current heap size: 

  public static long getHeapSize(){
    int mb = 1024*1024;

    //Getting the runtime reference from system
    Runtime runtime = Runtime.getRuntime();

    return ((runtime.totalMemory() - runtime.freeMemory()) / mb);
}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/17609263)
 java -d64 -Xms512m -Xmx4g HelloWorld 

 where,
-d64: Will enable 64-bit JVM
-Xms512m: Will set initial heap size as 512 MB
-Xmx4g: Will set maximum heap size as 4 GB
(here java file name is : HelloWorld.java) 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/4335461)
  com.sun.management.OperatingSystemMXBean bean =
  (com.sun.management.OperatingSystemMXBean)
    java.lang.management.ManagementFactory.getOperatingSystemMXBean();
long max = bean.getTotalPhysicalMemorySize();
  

 returns available RAM size for JVM (limited by 32bit), not the heap size. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41690963)
 Please use below command to change heap size to 6GB 

  export JAVA_OPTS="-Xms6144m -Xmx6144m -XX:NewSize=256m -XX:MaxNewSize=356m -XX:PermSize=256m -XX:MaxPermSize=356m"
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/1596030)
 To increase the heap size you can use the -Xmx argument when starting Java; e.g. 

  -Xmx256M
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/20536187)
 when you run the file you need to add -Xmx## to the command line. 

  java -Xmx4G
  

 would give you a JVM with 4 Gb available. 

 EDIT: if possible you should load one bit at a time like @Oleg mentioned. 



