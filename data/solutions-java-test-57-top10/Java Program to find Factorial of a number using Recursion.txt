Query: Java Program to find Factorial of a number using Recursion
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/35072776)
 Simple one liner solution, though internally it is doing a loop, as it can't possible without it, but you don't need to do it yourselves: 

  Long factorialNumber = LongStream.rangeClosed(2, N).reduce(1, Math::multiplyExact);
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/13433776)
 Use Stirling approximation for Gamma function http://en.wikipedia.org/wiki/Stirling%27s_approximation 

   

 But it will be not precise. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/13433808)
 There is another post on here which you might like to have a look at: 

 https://stackoverflow.com/questions/891031/is-there-a-method-that-calculates-a-factorial-in-java 

 Also - this link has lots of different implementations for factorial functions - you might find what you are looking for on here.  At the very least, you will learn tons about factorials.. 

 http://www.luschny.de/math/factorial/FastFactorialFunctions.htm 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/52468517)
 I know this is marked duplicate, but solving it using  recursion  and  BigInteger  just coz you  (@Abdalnassir Ghzawi) requested for it. 

  public BigInteger factorial(BigInteger n) {
    BigInteger res;
    if (n == BigInteger.ZERO) {
        res = BigInteger.ONE;
    } else {
        res = n.multiply(factorial(n.subtract(BigInteger.ONE)));
    }

    return res;
}
  

 You'll need to call it using :  

  System.out.println(new RecursiveFunctionsExamples().factorial(new BigInteger("6")));
  

  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/23501657)
 A recursive solution using ternary operators. 

  public static int fac(int n) {
    return (n < 1) ? 1 : n*fac(n-1);
}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/9712521)
 25! is bigger than  Long.MAX_VALUE ... 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/9712491)
 You've overflowed  long . 
Use  BigInteger  instead. 



