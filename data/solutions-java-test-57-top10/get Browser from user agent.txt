Query: get Browser from user agent
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/8637327)
 You can read  user-agent  header from  request  to get the detail about the browser 

  ((HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest()).getHeaders();
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2363561)
 You can get the browser user agent using this: 

  request.getHeader("User-Agent");
  

 The version information should be in there, but reliably extracting it programmatically is difficult, since every browser user agent looks different. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1328393)
 Your best bet is User-Agent header. You can get it like this in JSP or Servlet, 

  String userAgent = request.getHeader("User-Agent");
  

 The header looks like this, 

  User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.13) Gecko/2009073021 Firefox/3.0.13
  

 It provides detailed information on browser. However, it's pretty much free format so it's very hard to decipher every single one. You just need to figure out which browsers you will support and write parser for each one. When you try to identify the version of browser, always check newer version first. For example, IE6 user-agent may contain IE5 for backward compatibility. If you check IE5 first, IE6 will be categorized as IE5 also. 

 You can get a full list of all user-agent values from this web site, 

 http://www.user-agents.org/ 

 With User-Agent, you can tell the exact version of the browser. You can get a pretty good idea on OS but you may not be able to distinguish between different versions of the same OS, for example, Windows NT and 2000 may use same User-Agent. 

 There is nothing about resolution. However, you can get this with Javascript on an AJAX call. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/18030465)
 In Java there is no direct way to get browser and OS related information. 

 But to get this few third-party tools are available. 

 Instead of trusting third-party tools, I suggest you to  parse  the  user agent . 

  String  browserDetails  =   request.getHeader("User-Agent");
  

 By doing this you can separate the browser details and OS related information easily according to your requirement. .  

          String  browserDetails  =   request.getHeader("User-Agent");
        String  userAgent       =   browserDetails;
        String  user            =   userAgent.toLowerCase();

        String os = "";
        String browser = "";

        log.info("User Agent for the request is===>"+browserDetails);
        //=================OS=======================
         if (userAgent.toLowerCase().indexOf("windows") >= 0 )
         {
             os = "Windows";
         } else if(userAgent.toLowerCase().indexOf("mac") >= 0)
         {
             os = "Mac";
         } else if(userAgent.toLowerCase().indexOf("x11") >= 0)
         {
             os = "Unix";
         } else if(userAgent.toLowerCase().indexOf("android") >= 0)
         {
             os = "Android";
         } else if(userAgent.toLowerCase().indexOf("iphone") >= 0)
         {
             os = "IPhone";
         }else{
             os = "UnKnown, More-Info: "+userAgent;
         }
         //===============Browser===========================
        if (user.contains("msie"))
        {
            String substring=userAgent.substring(userAgent.indexOf("MSIE")).split(";")[0];
            browser=substring.split(" ")[0].replace("MSIE", "IE")+"-"+substring.split(" ")[1];
        } else if (user.contains("safari") && user.contains("version"))
        {
            browser=(userAgent.substring(userAgent.indexOf("Safari")).split(" ")[0]).split("/")[0]+"-"+(userAgent.substring(userAgent.indexOf("Version")).split(" ")[0]).split("/")[1];
        } else if ( user.contains("opr") || user.contains("opera"))
        {
            if(user.contains("opera"))
                browser=(userAgent.substring(userAgent.indexOf("Opera")).split(" ")[0]).split("/")[0]+"-"+(userAgent.substring(userAgent.indexOf("Version")).split(" ")[0]).split("/")[1];
            else if(user.contains("opr"))
                browser=((userAgent.substring(userAgent.indexOf("OPR")).split(" ")[0]).replace("/", "-")).replace("OPR", "Opera");
        } else if (user.contains("chrome"))
        {
            browser=(userAgent.substring(userAgent.indexOf("Chrome")).split(" ")[0]).replace("/", "-");
        } else if ((user.indexOf("mozilla/7.0") > -1) || (user.indexOf("netscape6") != -1)  || (user.indexOf("mozilla/4.7") != -1) || (user.indexOf("mozilla/4.78") != -1) || (user.indexOf("mozilla/4.08") != -1) || (user.indexOf("mozilla/3") != -1) )
        {
            //browser=(userAgent.substring(userAgent.indexOf("MSIE")).split(" ")[0]).replace("/", "-");
            browser = "Netscape-?";

        } else if (user.contains("firefox"))
        {
            browser=(userAgent.substring(userAgent.indexOf("Firefox")).split(" ")[0]).replace("/", "-");
        } else if(user.contains("rv"))
        {
            browser="IE-" + user.substring(user.indexOf("rv") + 3, user.indexOf(")"));
        } else
        {
            browser = "UnKnown, More-Info: "+userAgent;
        }
        log.info("Operating System======>"+os);
        log.info("Browser Name==========>"+browser);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/1430009)
 The http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.43 states that all clients are supposed to sent User-Agent headers. It however, does not state that they should identify the client in the manner a server wishes to. Android therefore complies with the specification, and there is not a lot you can do about it. 

 The best you could do is to use the http://developer.android.com/reference/java/net/URLConnection.html#setRequestProperty%28java.lang.String,%20java.lang.String%29 method to attempt to get a preferable user-agent value in the request. There are no guarantees that it would work, but it is likely. The method needs to be called in the following manner: 

  connection.setRequestProperty("User-Agent","MyAppName/1.0");
  

 The stock Android browser uses WebKit. If you want to set WebKit's user-agent string, you'll either have to use a static value, or read the user-agent string from WebKit. I haven't attempted this, but the WebKit user-agent string is available in Android via the http://developer.android.com/reference/android/webkit/WebSettings.html#getUserAgentString%28%29. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/21876454)
 Try using user-agent as lowercase, because it works if we directly access from header. 

 String browserName = requestProvider.get().getHeader("user-agent"); 

 alternate way to get IP address is 

 String ip = requestProvider.get().getHeader("True-Client-IP"); this works if we have akamai integeration. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/9389052)
 I found that this page checks for user agent to ensure it is a web browser that is checking this page. So you need to set  User-agent  in your request headers to get the content. 

 Here's a python snippet I used: 

  >>> import requests
>>> headers = {'User-agent': 'Mozilla/5.0'} # fake as a browser
>>> r = requests.get('http://molestia.ponify.me:8062/7.html', headers=headers)
>>> print r.text
<HTML><meta http-equiv="Pragma" content="no-cache"></head<body>81,1,200,200,72,128,Unknown - daksMusic Becoming Popular daks Remix</body></html>
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/13229552)
 Here is the code explaining how to do it using  user-agent-utils : 

  String userAgent = req.getHeader("user-agent");
UserAgent ua = UserAgent.parseUserAgentString(userAgent);
Version browserVersion = ua.getBrowserVersion();
String browserName = ua.getBrowser().toString();
int majVersion = Integer.parseInt(browserVersion.getMajorVersion());
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/17031158)
 You have to set a  User Agent : 

  Document doc = Jsoup.connect(url).timeout(30000).userAgent("Mozilla/17.0").get();
  

  (Or others; best you choose a browser user agent)  

 Else you'll get blocked. 

 Please see also: https://stackoverflow.com/questions/15367765/jsoup-selectdivclass-rslt-prod-returns-null-when-it-shouldnt/15384490#15384490 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/16026758)
 If you just want to know what to set your user agent to so you can mimic the response that browser will get you can use this site. 

 http://www.whatsmyuseragent.com/ 



