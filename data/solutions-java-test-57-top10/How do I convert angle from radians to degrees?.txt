Query: How do I convert angle from radians to degrees?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/17764581)
 Java's  Math  library gives you methods to convert between degrees and radians: http://docs.oracle.com/javase/6/docs/api/java/lang/Math.html#toRadians(double) and http://docs.oracle.com/javase/6/docs/api/java/lang/Math.html#toDegrees(double): 

  public class examples
{
    public static void main(String[] args)
    {
         System.out.println( Math.toRadians( 180 ) ) ;
         System.out.println( Math.toDegrees( Math.PI ) ) ;
    }
}
  

 If your input is in degrees, you need to convert the number going in to  sin  to radians: 

  double angle = 90 ;
double result  = Math.sin( Math.toRadians( angle ) ) ;
System.out.println( result ) ;
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/17781399)
 use Math.toRadians to convert your degrees to radians to pass to Math.cos
for example 

  double blah = Math.cos(Math.toRadians(50));
  

 I think that is what you are asking.  There are quite a lot of similar questions here. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/8210810)
 You are getting a negative x velocity for a 15 degree angle because Math.cos and Math.sin accept the angle in radians and not degrees. 

 You must first convert your angle in degrees to an angle in radians like this: 

  xVel = velocity * Math.cos(angle * Math.PI / 180.0);
yVel = velocity * Math.sin(angle * Math.PI / 180.0);
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/29226873)
 The methods  Math.cos  and  Math.sin  take a number of radians for their arguments.  You are passing degrees into this method.  You need to convert your degrees into radians at the start of the method. 

  private double angleFromCoordinate(double lat1, double long1, double lat2,
        double long2) {
    double lat1Rad = Math.toRadians(lat1);
    double long1Rad = Math.toRadians(long1);
    double lat2Rad = Math.toRadians(lat2);
    double long2Rad = Math.toRadians(long2);
  

 then use the new variables  lat1Rad  and so on for the remaining mathematics. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/32549205)
 As the Javadoc for https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#cos-double- states 

 
   a - an angle, in radians. 
 

 You need to convert degrees to radians if you want to use degrees. 

 You can use https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toRadians-double- 

 Replace 

 <code(angleC)
  

 with 

 <code(Math.toRadians(angleC))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/17781347)
 You can use http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#toDegrees%28double%29/http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#toRadians%28double%29 

 
   Converts an angle measured in radians to an approximately equivalent
  angle measured in degrees/radians. 
 

 Note that http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#cos%28double%29 expect the parameter in radians: 

 
   a - an angle, in radians. 
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/9458051)
 You just have your parentheses  ()  in the wrong place. 

 You are adding degrees to a value in radians, which won't work.  toDegrees()  will do the conversion from radians to degrees for you,  then  you do the normalisation once you have a value in degrees. 

  

   Math.toDegrees( (Math.atan2(y, x))+360 ) % 360;
  

  

  ( Math.toDegrees(Math.atan2(y, x)) + 360 ) % 360;
  

 Remember also that all inputs to  Math.sin() ,  Math.cos()  and all the other trigonometric functions must be in radians. If your inputs are degrees you'll need to convert them using  Math.toRadians()  first. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/51356065)
 As per https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#sin-double-'s documentation, its argument should be given in radians, no degrees. You can use https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toRadians-double- to convert those degrees to Randians: 

  double test1 = Math.toDegrees(Math.asin ( vw * Math.sin(Math.toRadians(w-d))/va)); 
// Here ------------------------------------------------^
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/20679713)
 To convert degrees to radian you first need to convert the degrees to a factor (of the circles circumference) by dividing by 360 degrees. Next you multiply by 2PI rad (which is the circumference of a 'unit circle'). 

 When looking at the units you do this: degrees / degrees * radians = radians 

 So where you divide by 0.017 (2*PI / 360), you need to multiply instead: 

  temp = (float) (number * 0.0174532925);
  

 Furthermore it is nicer (more clear) if you do not use 'magic numbers' and add comments (so people know what you are doing): 

  // Convert to rad
temp = (float) (number * 2 * Math.PI / 360);
  

 And/or even use the available Java functionality: 

  // Convert to rad
temp = Math.toRadians(number);
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/13951173)
 Are you trying to use degrees? Keep in mind that  sin  and  cos  are expecting radians. 

  Math.cos(Math.toRadians(354))
  



