Query: How to delete a character from a string using python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/19259168)
 Use the http://docs.python.org/2/library/string.html#string.translate method: 

  >>> s = 'EXAMPLE'
>>> s.translate(None, 'M')
'EXAPLE'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/32594712)
 Here's what I did to slice out the "M": 

  s = 'EXAMPLE'
s1 = s[:s.index('M')] + s[s.index('M')+1:]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/5448808)
 You can delete all unwanted characters from a string using its http://docs.python.org/library/stdtypes.html?highlight=translate#str.translate with  None  for the   table   argument followed by a string containing the character(s) you want removed for its   deletechars   argument. 

  lst = ['x', 3, 'b']

print str(lst).translate(None, "'")

# [x, 3, b]
  

 If you're using a version of Python before 2.6, you'll need to use the  string  module's  translate()  function instead because the ability to pass  None  as the   table   argument wasn't added until Python 2.6. Using it looks like this: 

  import string

print string.translate(str(lst), None, "'")
  

 Using the  string.translate()  function will also work in 2.6+, so using it might be preferable. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3559592)
 To replace a specific position: 

  s = s[:pos] + s[(pos+1):]
  

 To replace a specific character: 

  s = s.replace('M','')
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/40634432)
 The string you're searching for to replace must also be a Unicode string.  

  newToke = thisToken.replace(u'\u2013','')
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/3560349)
 http://docs.python.org/library/userdict.html#UserString.MutableString 

 Mutable way: 

  import UserString

s = UserString.MutableString("EXAMPLE")

>>> type(s)
<type 'str'>

# Delete 'M'
del s[3]

# Turn it for immutable:
s = str(s)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/15886411)
  import string
s = 'abcdefgABCDEFGHIJKLMNOP'
s.translate(None,string.ascii_lowercase)
  

 http://docs.python.org/2/library/string.html#string.translate function will delete all characters from the string that are in  deletechars , a list of characters. Then, the string will be translated using table  (we are not using it in this case) . 

 To remove only the lower case letters, you need to pass http://docs.python.org/2/library/string.html#string.ascii_lowercase as the list of letters to be deleted. 

 The  table  is None because when the table is  None , only the character deletion step will be performed. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/34869503)
 Try String.translate. 

  >>> "Hey look words".translate(None, 'aeiouAEIOU')
'Hy lk wrds'
  

 
   string.translate(s, table[, deletechars]) 
  
   Delete all characters from s that are in deletechars (if present), and then translate the characters using table, which must be a 256-character string giving the translation for each character value, indexed by its ordinal. If table is None, then only the character deletion step is performed. 
 

 https://docs.python.org/2/library/string.html#string.Template.substitute 

 Or if you're using the newfangled Python 3: 

  >>> table = str.maketrans(dict.fromkeys('aeiouAEIOU'))
>>> "Hey look words.translate(table)
'Hy lk wrds'
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/23170544)
 You can use the method http://docs.python.org/2/library/string.html#string.translate for this. 

 
   Delete all characters from s that are in deletechars (if present), and
  then translate the characters using table, which must be a
  256-character string giving the translation for each character value,
  indexed by its ordinal. If table is None, then only the character
  deletion step is performed. 
 

 Example: 

  s = 'How to run very fast | running.com'

print s

s = s.translate(None, '|')

print s
  

 Output: 

  How to run very fast | running.com
How to run very fast  running.com
  

 Or using the https://docs.python.org/2/library/string.html#string.replace method: 

  foo = 'How to run very fast | running.com'

bar = foo.replace("|", "")

print foo
print bar
  

 Output: 

  How to run very fast | running.com
How to run very fast  running.com
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/22788783)
 You can use this: 

  clean_string = ''.join(c for c in s if c.isalnum() or c.isspace())
  

 It iterates through each character, leaving you only with the ones that satisfy at least one of the two criteria, then joins them all back together. I am using https://docs.python.org/2/library/stdtypes.html#str.isalnum to check for alphanumeric characters, rather than both  isalpha()  and  isdigit()  separately. 

 You can achieve the same thing using a https://docs.python.org/2/library/functions.html#filter: 

  clean_string = filter(lambda c: c.isalnum() or c.isspace(), s)
  



