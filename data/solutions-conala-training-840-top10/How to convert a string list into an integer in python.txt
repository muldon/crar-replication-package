Query: How to convert a string list into an integer in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/6378909)
 Use  split()  to split at the commas, use  int()  to convert to integer: 

  user_lst = map(int, user.split(","))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/9088037)
 because you call the to string function on the entire list 

 try: 

  a = [3]
print "".join([str(v) for v in a])
  

 After reading the headline of the question are you just trying to get a single integer from a list, or do you want to convert a list of integer into a "larger" integer, e.g.: 

  a = [3, 2]
print "".join([str(v) for v in a]) ## This gives a string and not integer
>>> "32"
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/15352534)
  

  import ast
res = ast.literal_eval('[156, 100, 713]')
  

 http://docs.python.org/2/library/ast.html#module-ast 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/38022159)
 You can use https://docs.python.org/3/library/stdtypes.html#str.split inside a https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions to do this.  

 As  [1 2 3]  is not the proper representation of a python list in a string, we can remove the brackets to get  '1 2 3'  which on splitting becomes  ['1', '2', '3'] . This can be easily converted to a integer nested list by casting it to an int using the https://docs.python.org/3/library/functions.html#int callable.  

  >>> l = ['[12 9 15]','[98 12 18]','[56 45 45]']   
>>> [[int(j) for j in i[1:-1].split()] for i in l]
[[12, 9, 15], [98, 12, 18], [56, 45, 45]]
  

 For further reading https://stackoverflow.com/q/34835951/4099593  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/33629819)
 The error you are getting because  join  wants elements to be  string  type, but in your list there is  integer  too, so 1st you have to convert them to type string. 

 you can use list comprehension and str and join to join them 

  >>> lists = [10,"test",10.5]
>>> ",".join(str(x) for x in lists)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/53872151)
 
   convert '1' '2' which is string to 1, 2 which is integer print an
  error msg since 'to' string is included and cannot be converted to
  integer 
 

  source = ['1', '2', 'to', '3']
result = []

for item in source:
    try:
        result.append(int(item))
    except ValueError as ex:
        print('Not integer: {}'.format(item))

print(result)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/34405540)
 . Splitting a string and converting a string to an integer are very common tasks, and Python has built in tools to achieve them. 

  str.split  splits a string into a list by a given delimiter.
 int  can convert a string to an integer. You can use  map  to apply a function to all elements of a list. 

  >>> map(int, "123|456|890|60".split('|'))
[123, 456, 890, 60]
  



