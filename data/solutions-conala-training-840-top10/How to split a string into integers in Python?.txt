Query: How to split a string into integers in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/6429671)
 This should work: 

  [ int(x) for x in "40 1".split(" ") ]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/6429669)
 Of course you can call  split , but it will return strings, not integers.  

  >>> x, y = "42 0".split()
>>> [int(x), int(y)]
[42, 0]
  

  

  [int(x) f x in "42 0".split()]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/54401445)
 I suggest checking if the substring is a digit: 

  In [1]: [int(i) for i in '1 2 3a'.split() if i.isdigit()]
Out[1]: [1, 2]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/8080829)
 This should work: 

  date(*map(int, day.split('/')))

>>> map(int, day.split('/'))
[2011, 10, 11]
>>> date(*map(int, day.split('/')))
datetime.date(2011, 10, 11)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/8080861)
 You can loop over the list you get from day.split() and convert each entry to an int. 

  today = date([int(x) for x in day.split('/')]) 
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/6429667)
  l = (int(x) for x in s.split())
  

 If you are sure there are always two integers you could also do: 

  a,b = (int(x) for x in s.split())
  

 or if you plan on modifying the array after 

  l = [int(x) for x in s.split()]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/10916640)
 Use  str.split : 

  numbers = "19 01 23 75 03 34".split()
  

 If you also want to parse them to integers you can use  map  and  int : 

  numbers = map(int, "19 01 23 75 03 34".split())
  

 See it working online: http://ideone.com/vOONu 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/9857749)
 Something like this - for each line read into string variable  a : 

  >>> a = "123,456"
>>> b = a.split(",")
>>> b
['123', '456']
>>> c = [int(e) for e in b]
>>> c
[123, 456]
>>> x, y = c
>>> x
123
>>> y
456
  

 Now you can do what is necessary with  x  and  y  as assigned, which are integers. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/4553134)
 If all your numbers are positive integers, you can do that without regular expressions by using the http://docs.python.org/library/stdtypes.html#str.isdigit method: 

  >>> text = "GoTo: 7018 6453 12654\n"
>>> [token for token in text.split() if token.isdigit()]
['7018', '6453', '12654']
  



