Query: How can I compare two lists in python and return matches
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1388864)
 You can use  

  def returnMatches(a,b):
       return list(set(a) & set(b))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/34631617)
 You can use: 

  a = [1, 3, 4, 5, 9, 6, 7, 8]
b = [1, 7, 0, 9]
same_values = set(a) & set(b)
print same_values
  

 Output: 

  set([1, 7, 9])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/1388842)
 Use http://docs.python.org/library/stdtypes.html#set.intersection, it's fast and readable. 

  >>> set(a).intersection(b)
set([5])
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/38181023)
 Can use itertools.product too. 

  >>> common_elements=[]
>>> for i in list(itertools.product(a,b)):
...     if i[0] == i[1]:
...         common_elements.append(i[0])
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/35713174)
 Just use a list comprehension: 

  def returnNotMatches(a, b):
    return [[x for x in a if x not in b], [x for x in b if x not in a]]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/1388856)
 Do you want duplicates? If not maybe you should use sets instead: 

  
>>> set([1, 2, 3, 4, 5]).intersection(set([9, 8, 7, 6, 5]))
set([5])
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/5142340)
 Also you can try this,by keeping common elements in a new list.  

  new_list = []
for element in a:
    if element in b:
        new_list.append(element)
  



