Query: Merge 2 dataframes with same values in a column
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/43315516)
 You can use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.merge.html without parameter  on  if only common column in both DataFrame is joined column  Column A  with left join: 

  print (DF1)
  Column A Column B  Column C
0       A.       ab         1
1       B.       bc         9
2       C.       fg         7

print (DF2)
  Column A  column D  column E
0       A.         1         8
1       B.         2         9
2       C.         3         7
3       B.         4         3
4       A.         5         1
5       A.         6         0
  

 

  df = DF2.merge(DF1,how='left')
print (df)
  Column A  column D  column E Column B  Column C
0       A.         1         8       ab         1
1       B.         2         9       bc         9
2       C.         3         7       fg         7
3       B.         4         3       bc         9
4       A.         5         1       ab         1
5       A.         6         0       ab         1
  

 If multiple same columns add  on : 

  df = DF2.merge(DF1,how='left', on='Column A')
print (df)
  Column A  column D  column E Column B  Column C
0       A.         1         8       ab         1
1       B.         2         9       bc         9
2       C.         3         7       fg         7
3       B.         4         3       bc         9
4       A.         5         1       ab         1
5       A.         6         0       ab         1
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/52503737)
 You can use pandas merge with outer join 

  df1.merge(df2,on =['first_column'],how='outer')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/43314946)
 Assuming that  'Column A'  is the only column in common,  merge  uses all common columns by default. 

  DF2.merge(DF1, 'left')

  Column A  column D  column E Column B  Column C
0       A.         1         8       ab         1
1       B.         2         9       bc         9
2       C.         3         7       fg         7
3       B.         4         3       bc         9
4       A.         5         1       ab         1
5       A.         6         0       ab         1
  

 

  join  uses the index, so we set the index of the  DF1  and  join  it to  DF2 .  By default, it would require we set the index of  DF2  as well, but we specify the  on='Column A'  parameter so that we can keep  'Column A'  in the dataframe proper. 

  DF2.join(DF1.set_index('Column A'), on='Column A')

  Column A  column D  column E Column B  Column C
0       A.         1         8       ab         1
1       B.         2         9       bc         9
2       C.         3         7       fg         7
3       B.         4         3       bc         9
4       A.         5         1       ab         1
5       A.         6         0       ab         1
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/45532785)
 You can use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.merge.html with left join, if only  X  is joined column  on  parameter can be omit: 

  df = pd.merge(df1, df2, how='left')
print (df)
    A    B      X   C    D
0  NA   50  IW233  12  Jan
1  EU   23  IW455  50  Aug
2  LA   21  IW455  50  Aug
3  ME  100  IW100  16  Nov
  

  

  df = pd.merge(df1, df2, on='X', how='left')
print (df)
    A    B      X   C    D
0  NA   50  IW233  12  Jan
1  EU   23  IW455  50  Aug
2  LA   21  IW455  50  Aug
3  ME  100  IW100  16  Nov
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/51365031)
 You could make a new column in df1 and merge on that. 

  import pandas as pd
df1= pd.DataFrame({'upc': [ 23456793749, 78907809834, 35894796324, 67382808404, 93743008374]})
df2= pd.DataFrame({'upc': [ 4567937, 9078098, 8947963, 3828084, 7430083]})

df1['upc_old'] = df1['upc'] #in case you still need the old (longer) upc column
df1['upc'] = df1['upc'].astype(str).str[2:-2].astype(int)

merged_df = pd.merge(df1, df2, on='upc')
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/37142930)
 You want http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.combine_first.html: 

  In [19]:
df1 = pd.DataFrame([ [1, 'a'],    [2, 'b'],    [None, None], [3, None] ], 
                   columns=["a", "b"], index=[0,1,2,3])
df2 = pd.DataFrame([ [None, None],[None, 'x'],[4, 'c'], [5, 'd'] ],
                   columns=["a", "b"], index=[0,1,2,3])
df1.combine_first(df2)

Out[19]:
     a  b
0  1.0  a
1  2.0  b
2  4.0  c
3  3.0  d
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/38731184)
  files = ['file1', 'file2']

def read(f):
    f = f + '.csv'
    df = pd.read_csv(f, usecols=['A', 'B'])
    return df.drop_duplicates(subset=['A']).set_index('A').B

pd.concat([read(f) for f in files], axis=1, keys=files)
  

 https://i.stack.imgur.com/vG4XW.png 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/53214955)
 You can melt df2 and then merge using the default 'inner' merge 

  df3 = df1.merge(df2.melt(id_vars = ['A', 'B'], var_name='date'))

    A   B   date    value
0   1   1   01-2016 0.10
1   2   1   02-2017 0.12
2   1   2   03-2017 0.15
3   2   2   04-2020 0.64
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/46642190)
 I think you need http://pandas.pydata.org/pandas-docs/stable/generated/pandas.merge.html with  left join  and parameter  indicator=True , then compare column  _merge  with http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.eq.html (same as  == ) and last convert boolean  True  and  False  to  1  and  0  by http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.astype.html: 

  cols = list('ABCD')
df1['Target'] = pd.merge(df1[cols], 
                      df2[cols], how='left', indicator=True)['_merge'].eq('both').astype(int)
print (df1)

   A  B   C   D  E  F  Target
0  1  1  20  20  3  2       1
1  1  1  12  14  1  3       0
2  2  1  13  43  4  3       0
3  2  2  12  34  1  4       1
  

  

  print (pd.merge(df1[cols], df2[cols], how='left', indicator=True))
   A  B   C   D     _merge
0  1  1  20  20       both
1  1  1  12  14  left_only
2  2  1  13  43  left_only
3  2  2  12  34       both
  



