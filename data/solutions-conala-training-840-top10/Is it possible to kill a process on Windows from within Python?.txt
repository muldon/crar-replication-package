Query: Is it possible to kill a process on Windows from within Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/24832377)
 How about this, I tested it with ActiveState Python 2.7: 

  import sys, traceback, os

def pkill (process_name):
    try:
        killed = os.system('tskill ' + process_name)
    except Exception, e:
        killed = 0
    return killed
  

  

  pkill("program_name")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/6278951)
 I would think you could just use http://technet.microsoft.com/en-us/library/bb491009.aspx and the Python http://docs.python.org/library/os.html#os.system 

  import os
os.system("taskkill /im make.exe")
  

 

 Note: I would just note you might have to fully qualify the taskkill path.  I am using a Linux box so I can't test... 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/41755192)
  

  import os
os.system("taskkill /f /im  Your_Process_Name.exe")
  

 
 /f   : Specifies that process(es) be forcefully terminated. 
 /im  (ImageName ): Specifies the image name of the process to be
terminated.  
 https://technet.microsoft.com/en-us/library/bb491009.aspx 
 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/41706690)
 in windows you could use  taskkill  within  subprocess.call : 

  subprocess.call(["taskkill","/K","/IM","firefox.exe"])
  

 Cleaner/more portable solution with  psutil  (well, for Linux you have to drop the  .exe  part or use  .startwith("firefox") : 

  import psutil,os
for pid in (process.pid for process in psutil.process_iter() if process.name()=="firefox.exe"):
    os.kill(pid)
  

 that will kill all processes named  firefox.exe  

 EDIT:  os.kill(pid)  is "overkill".  process  has a  kill()  method, so: 

  for process in (process for process in psutil.process_iter() if process.name()=="firefox.exe"):
    process.kill()
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/6279358)
 You can use the  TerminateProcess  of the win32 api to kill a process. See the following example : http://code.activestate.com/recipes/347462-terminating-a-subprocess-on-windows/ 

 You need to give it a process handle. If the process is started from your code, the process handle is returned by the CreateProcess or popen. 

 If the process was started by something else, you need to get this handle you can use http://code.activestate.com/recipes/305279-getting-process-information-on-windows/ or http://timgolden.me.uk/python/wmi/cookbook.html to retrieve it. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/1643773)
 If you want to kill a process from Python, on a Unix-like platform, you can send signals equivalent to Ctrl-C at the console using Pythons os module e.g.  

  # Get this processes PID
pid_of_process = os.getpid()
# Send the interrupt signal to this process
os.kill(pid_of_process, signal.SIGINT)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/25664252)
 This should kill the task after 10 seconds 

  import time, subprocess
task = subprocess.Popen(["command"])
time.sleep(10)
task.kill()
  

 If you're trying to get list of files/folders in C:\ in windows here's another way of doing it 

  import os
with open("output.txt","w") as f:
    f.write("\n".join(os.listdir("C:\\")))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/23535519)
 Use subprocess. 

  import subprocess
import time

p = subprocess.Popen(['notepad.exe'])
time.sleep(10)
p.kill()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/44302603)
 There is a nice cross-platform python utility http://pythonhosted.org/psutil/ that exposes a http://pythonhosted.org/psutil/#psutil.Process.kill routine on a processes that can be listed with psutil.process_iter().  

 There is already an example in the other thread: https://stackoverflow.com/a/4230226/4571444 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/32713721)
 You have hard-coded the signal  1  in  os.kill .  What is  1  supposed to be?  On Unix it would be  SIGHUP  but there is no such thing on Windows.  I suggest using the constants defined in the  signal  module, like so: 

  os.kill(PyId, signal.SIGTERM)
  

 You could also consider using  signal.SIGINT . 



