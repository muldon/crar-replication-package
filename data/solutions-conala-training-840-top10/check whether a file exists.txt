Query: check whether a file exists
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/26433646)
 To check if a file exists,  

  from sys import argv

from os.path import exists
script, filename = argv
target = open(filename)
print "file exists: %r" % exists(filename)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/8876254)
 Use https://docs.python.org/3.3/library/os.path.html?highlight=os.path#os.path.isfile with https://docs.python.org/3.3/library/os.html?highlight=os.access#os.access: 

  import os
import os.path

PATH='./file.txt'

if os.path.isfile(PATH) and os.access(PATH, os.R_OK):
    print "File exists and is readable"
else:
    print "Either the file is missing or not readable"
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/27581592)
 You can use the "OS" library of Python: 

  >>> import os
>>> os.path.exists("C:\\Users\\####\\Desktop\\test.txt") 
True
>>> os.path.exists("C:\\Users\\####\\Desktop\\test.tx")
False
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/17344732)
 This is the simplest way to check if a file exists. Just  because  the file existed when you checked doesn't  guarantee  that it will be there when you need to open it. 

  import os
fname = "foo.txt"
if os.path.isfile(fname):
    print("file does exist at this time")
else:
    print("no such file exists at this time")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/33299675)
  os.path.exists(file)   # you cant use wildcard here
os.path.isfile(file)   # to check for is it a file or not
  

 You can try this if you want only files: 

  import os
import glob

PATH = "/abc/python/UP*.dat"
filter(os.path.isfile, glob.glob(PATH))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35602588)
 In 2016 the best way is still using  os.path.isfile : 

  >>> os.path.isfile('/path/to/some/file.txt')
  

 Or in Python 3 you can use  pathlib : 

  import pathlib
path = pathlib.Path('/path/to/some/file.txt')
if path.is_file():
    ...
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/53084404)
  import os

# for testing purpose args defaulted to current folder & file. 
# returns True if file found
def file_exists(FOLDER_PATH='../', FILE_NAME=__file__):
    return os.path.isdir(FOLDER_PATH) \
        and os.path.isfile(os.path.join(FOLDER_PATH, FILE_NAME))
  

 Basically a folder check, then a file check with proper directory separator using  os.path.join . 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/82846)
 You have the https://docs.python.org/2/library/os.path.html#os.path.exists function: 

  import os.path
os.path.exists(file_path)
  

 This returns  True  for both files and directories but you can instead use 

  os.path.isfile(file_path)
  

 to test if it's a file specifically. It follows symlinks. 



