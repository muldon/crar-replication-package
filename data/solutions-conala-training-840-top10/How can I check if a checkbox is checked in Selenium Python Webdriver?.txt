Query: How can I check if a checkbox is checked in Selenium Python Webdriver?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/18076075)
 I'm using  driver.find_element_by_name("< check_box_name >").is_selected()  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/14443493)
 I find another way that works, but uses javascript inside. 

  def is_checked(self, driver, item):
  checked = driver.execute_script(("return document.getElementById('%s').checked") % item)
  return checked
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/49478987)
 Considering provided HTML code sample you need to https://stackoverflow.com/questions/7534622/selecting-an-iframe-using-python-selenium before handling check-box: 

  driver.switch_to.frame("frameContent")
driver.find_element_by_xpath("//tr[@id='record_1']//input").click()
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/32216788)
 Click the  recaptcha-anchor  instead: 

  driver.find_element_by_id("recaptcha-anchor").click()
  

 You might also need to http://selenium-python.readthedocs.org/en/latest/waits.html#explicit-waits: 

  from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

recaptcha_anchor = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "recaptcha-anchor"))
)
recaptcha_anchor.click()
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/14442938)
 There is a WebElement property called  is_selected() , and f a check box this indicates whether  not it is checked. Therefe you can verify if it is checked/unchecked by doing something like this: 

  driver.find_element_by_name('<check_box_name>').is_selected()
  

  

  driver.find_element_by_id('<check_box_id>').is_selected()
  

 I remember having the same issue not being able to find documentation. It's easier to find once you know the name (https://seleniumhq.github.io/selenium/docs/api/py/webdriver_remote/selenium.webdriver.remote.webelement.html?highlight=is_selected#selenium.webdriver.remote.webelement.WebElement.is_selected are some docs,  is_selected  is towards the bottom), but the way I have gone about trying to find different options/properties f Selenium objects is to just drop  dir(some_object)  in the code and see what options come up (this is how  is_selected  appeared). 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/35442960)
  driver.find_element_by_xpath  is just looking for the checkbox and returning it as  WebElement .  

  driver.find_element_by_xpath("""//*[@id="delete-browsing-history-checkbox"]""").click()
  

 Also, you forgot apostrophes in the first xpath after  @id= . It should be like in the example above. 

 
   Edit 
 

 You can try locating the checkbox by id 

   driver.find_element_by_id("delete-browsing-history-checkbox").click()
  

 
   Edit 2 
 

 The checkbox are inside  iframe .  

  driver.switch_to.frame("settings") # switch to the iframe by name attribute
# driver.switch_to.frame(driver.find_element_by_name("settings")) # should also work
driver.find_element_by_id("delete-browsing-history-checkbox").click()
driver.switch_to.default_content() # switch back to main window
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47071232)
 This is the the only way I could find to check all the boxes in that page and break out of loop. Give this a shot as well. 

  from selenium import webdriver
import time

driver = webdriver.Chrome()
driver.get('https://www.pkobp.pl/poi/?clients=1,2,3')
for tickbox in driver.find_elements_by_css_selector(".input-checkbox"):
    try:
        tickbox.click()
        time.sleep(7)
    except:
        break
driver.quit()
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/32953298)
 https://selenium-python.readthedocs.org/api.html#selenium.webdriver.remote.webelement.WebElement.is_selected  is a method  that returns a boolean, call it: 

  for checkbox in checkboxes:
    if checkbox.is_selected(): # If checkbox is ticked
        checkbox.click() # to untick it
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/28182694)
 Yes you can use  is_selected()  to test if that element is  selected . If you use  find_elements_by_xxx() , then you just need to loop through it and  assert  their results. 

  

  from selenium import webdriver

driver = webdriver.Firefox()
url = 'http://www.tizag.com/htmlT/htmlcheckboxes.php'
driver.get(url)
checkboxes = driver.find_elements_by_name('sports')

# simply use is_selected() can yield their Selected status
[c.is_selected() for c in checkboxes]
[False, False, False, False, True, False, False, True]
  

 

  # to assert they are all unchecked, use not any()
assert not any([c.is_selected() for c in checkboxes])


# so to assert they are all checked, just use all()
assert all([c.is_selected() for c in checkboxes])

---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
<ipython-input-661-c6f9ba4afaf2> in <module>()
----> 1 assert all([c.is_selected() for c in checkboxes])

AssertionError: 
  

 

 Updated:</h3>

 You can simply find all checkboxes by xpath, this usually works: 

  driver.find_elements_by_xpath('.//input[@type="checkbox"]')
  

 BUT this is not a guarantee, you do need to come up with custom solution from time to time. 

 And this is a list that Webdriver supports to  find  element: 

  [_ for _ in dir(driver) if 'find' in _]
Out[10]: 
['find_element',
 'find_element_by_class_name',
 'find_element_by_css_selector',
 'find_element_by_id',
 'find_element_by_link_text',
 'find_element_by_name',
 'find_element_by_partial_link_text',
 'find_element_by_tag_name',
 'find_element_by_xpath',
 'find_elements',
 'find_elements_by_class_name',
 'find_elements_by_css_selector',
 'find_elements_by_id',
 'find_elements_by_link_text',
 'find_elements_by_name',
 'find_elements_by_partial_link_text',
 'find_elements_by_tag_name',
 'find_elements_by_xpath']
  

 Apparently there's no  by_type , so it gives you an  AttributeError . 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/21213446)
 The checkbox HTML is: 

  <input id="C179003030-ORNL_DAAC-box" name="catalog_item_ids[]" type="checkbox" value="C179003030-ORNL_DAAC">
  

 so you can use 

  browser.find_element_by_id("C179003030-ORNL_DAAC-box").click()
  

 One way you can find elements' attributes is using the Google Chrome Developer Tools: 

   



