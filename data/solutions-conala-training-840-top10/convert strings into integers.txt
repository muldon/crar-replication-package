Query: convert strings into integers
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/18627860)
 Though in your second list you express the integers as binary, they are still of type  int .  You can convert the strings, however: 

  a = [int(x, 2) for x in a]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/25479053)
 If your strings are strings representation of number, then: 

  [tuple(int(s) for s in i.split(',')) for i in k]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/6420330)
 There is nothing  really  wrong with your approach except it is not necessary to convert the string into a list since strings are iterables. 

  >>> s = '0123456' 
>>> map(lambda x:int(x), s)
[0, 1, 2, 3, 4, 5, 6]
  

 If you prefer the list comprehension/iterator see https://stackoverflow.com/questions/6420273/looking-for-a-snippet-to-convert-a-string-into-a-list-of-integers/6420279#6420279 answer. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/11687359)
 I don't really know what you exactly mean by "compare", but if it is not always only strict egality you'd better work with integers. You could need to sort your data or whatever, and it will be easier this way !  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/48431854)
  # to string
a = [1,2,3]
s = repr(a)
print(s)

# from string
import ast
print(ast.literal_eval(s))
  

 Unlike  eval , https://docs.python.org/3.6/library/ast.html#ast.literal_eval "can be used for safely evaluating strings containing Python values from untrusted sources without the need to parse the values oneself." 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/7368801)
 Use the https://docs.python.org/2/library/functions.html#map function (in Python 2.x): 

  results = map(int, results)
  

 In Python 3, you will need to convert the result from <a href="https://docs.python.org/3/library/functions.html#map"  to a list: 

  results = list(map(int, results))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/10062733)
 this does not convert the integers to strings and concats them: 

  >>> sum([(10 ** i) * input[len(input)-i-1] for i in range(len(input))])
123
  

 this is a for-loop in one line. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/18524687)
  L2 = [reduce(lambda x,y : 10 * x + y, l) for l in L1]
  

 If you want a solution that doesn't go through strings. 



