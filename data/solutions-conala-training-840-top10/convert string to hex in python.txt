Query: convert string to hex in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/17495933)
 Use http://docs.python.org/2/library/functions.html#hex: 

  >>> x = 0xa1b2c3
>>> hex(x)
'0xa1b2c3'
  

 or http://docs.python.org/library/string.html#formatspec: 

  >>> "{:#x}".format(x)
'0xa1b2c3'
  

 or http://docs.python.org/2/library/functions.html#format: 

  >>> format(x, '#x')
'0xa1b2c3'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49853281)
 Python has native support for both HEX and base64 encoding: 

  import base64

def main():
    b16 = bytearray('10000000000002ae'.decode('hex'))
    b64 = base64.b64encode(b16)

    print b64
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/33704357)
 Python has native support for both HEX and base64 encoding: 

  encoded = HEX_STRING.decode("hex").encode("base64")
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/41959873)
 Since you are having string of  hex  values. You may remove  ' 0x'  from the string to get the single hex number string. For example: 

  my_str =  "0x00 0x01 0x13 0x00"
hex_str = my_str.replace(' 0x', '')
  

 where value hold by  hex_str  will be: 

  '0x00011300'   # `hex` string
  

 Now you may convert  hex  string to  int  as: 

  >>> int(hex_str, 16)
70400
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/17495936)
 Why not just do http://docs.python.org/2/library/functions.html#hex? 

  >>> testNum = 0xa1b2c3
>>> hex(testNum)
    '0xa1b2c3'
>>> test = hex(testNum)
>>> isinstance(test, str)
    True
  

  hex  returns a string representation. See  help(hex)  

  hex(...)
    hex(number) -> string

    Return the hexadecimal representation of an integer or long integer.
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/49796372)
  In Python 2:  

  >>> "7061756c".decode("hex")
'paul'
  

  In Python 3:  

  >>> bytes.fromhex('7061756c').decode('utf-8')
'paul'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/209529)
  int(hexString, 16)  does the trick, and works with and without the 0x prefix: 

  >>> int("a", 16)
10
>>> int("0xa",16)
10
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/12393519)
 Here's my solution when working with hex integers and not hex strings: 

  def convert_hex_to_ascii(h):
    chars_in_reverse = []
    while h != 0x0:
        chars_in_reverse.append(chr(h & 0xFF))
        h = h >> 8

    chars_in_reverse.reverse()
    return ''.join(chars_in_reverse)

print convert_hex_to_ascii(0x7061756c)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/42230475)
 In Python 3, arbitrary encodings including Hex and Base64 has been moved to  codecs  module. To get a Base64  str  from a hex  str : 

  import codecs

hex = "10000000000002ae"
b64 = codecs.encode(codecs.decode(hex, 'hex'), 'base64').decode()
  



