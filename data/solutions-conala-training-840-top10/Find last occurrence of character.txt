Query: Find last occurrence of character
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/26443334)
 You can use  rfind : 

  >>> "abcd}def}".rfind('}')
8
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49693992)
 you can do this split on last occurrence 

  my_string='folder1/folder2/folder3/new_folder/image2.png'
print(my_string.rsplit("/",1)[1])
output:-
image2.png
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/14496084)
 This should do it 

  old_string = "this is going to have a full stop. some written sstuff!"
k = old_string.rfind(".")
new_string = old_string[:k] + ". - " + old_string[k+1:]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/14496072)
 I would use a regex: 

  import re
new_list = [re.sub(r"\.(?=[^.]*$)", r". - ", s) for s in old_list]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27942164)
 You can do this if you want the last number after the last  -  

  >>> s = "POS--K    100    100    001    -    1462"
>>> a = s.split('-')[-1]
>>> a
'    1462'
>>> a.strip()
'1462'
  

 Or as Padraic mentioned in a https://stackoverflow.com/questions/27942128/get-everything-after-last-character-occurrence-python/27942164?noredirect=1#comment44281754_27942164, you can use  rsplit  

  >>> s = "POS--K    100    100    001    -    1462"
>>> a = s.rsplit('-')[1]
>>> a
'    1462'
>>> a.strip()
'1462'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/14496145)
 To replace from the right: 

  def replace_right(source, target, replacement, replacements=None):
    return replacement.join(source.rsplit(target, replacements))
  

 In use: 

  >>> replace_right("asd.asd.asd.", ".", ". -", 1)
'asd.asd.asd. -'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/31950730)
 You can use generator expression to do this in a Pythonic way. 

  max(test_string.rfind(i) for i in "([{")
  

 This iterates through the list/tuple of characters that you want to check and uses https://docs.python.org/2/library/string.html#string.rfind on them, groups those values together, and then returns the maximum value. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/31950779)
 This is pretty concise, and will do the trick. 

  max(map(test_string.rfind, '([{'))
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/7660920)
  before, sep, after = theString.rpartition("-")
  

 This splits the str about the last occurrence of "-" and your answer would be the variable  before . 



