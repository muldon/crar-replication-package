Query: Checking whether a variable is an integer
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/39718212)
 Here is a simple example how you can determine an integer 

  def is_int(x):
    print round(x),
    if x == round(x):
        print 'True',
    else:
        print 'False'

is_int(7.0)   # True
is_int(7.5)   # False
is_int(-1)    # True    
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/15560515)
 Why not try something like: 

  if x%1 == 0: 
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/13323813)
 use the int function to help 

  intchecker = float(input('Please enter a integer: '))
intcheck = 0
while intcheck != 1:
    if intchecker - int(intchecker) > 0:
        intchecker = float(input("You didn't enter a integer. "
                                 "Please enter a integer: "))
    else:
        intcheck = 1
print('you have entered a integer')
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/23464130)
 A simple method I use in all my software is this. It checks whether the variable is made up of numbers. 

  test = input("Enter some text here: ")
if test.isdigit() == True:
   print("This is a number.")
else:
   print("This is not a number.")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/12270752)
 why not just check if the value you want to check is equal to itself cast as an integer as shown below? 

  def isInt(val):
    return val == int(val)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/36544070)
 A simple way to do this is to directly check if the remainder on division by 1 is 0 or not. 

  if this_variable % 1 == 0:
    list.append(this_variable)
else:
    print 'Not an Integer!'
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/11061440)
 If the variable is entered like a string (e.g.  '2010' ):  

  if variable and variable.isdigit():
    return variable #or whatever you want to do with it. 
else: 
    return "Error" #or whatever you want to do with it.
  

 Before using this I worked it out with  try/except  and checking for  (int(variable)) , but it was longer code. I wonder if there's any difference in use of resources or speed. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/38468036)
 A more general approach that will attempt to check for both integers and integers given as strings will be 

  def isInt(anyNumberOrString):
    try:
        int(anyNumberOrString) #to check float and int use "float(anyNumberOrString)"
        return True
    except ValueError :
        return False

isInt("A") #False
isInt("5") #True
isInt(8) #True
isInt("5.88") #False *see comment above on how to make this True
  



