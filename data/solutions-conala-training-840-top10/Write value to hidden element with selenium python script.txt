Query: Write value to hidden element with selenium python script
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/15049248)
 Try this workaround(tested in Firefox and Chrome): 

  from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException

browser = webdriver.Firefox() # Get local session(use webdriver.Chrome() for chrome) 
browser.get("http://www.example.com") # load page from some url
assert "example" in browser.title # assume example.com has string "example" in title

try:
    # temporarily make parent(assuming its id is parent_id) visible
    browser.execute_script("document.getElementById('parent_id').style.display='block'")
    # now the following code won't raise ElementNotVisibleException any more
    browser.find_element_by_xpath("//input[@itemcode='XYZ']").send_keys(1)
    # hide the parent again
    browser.execute_script("document.getElementById('parent_id').style.display='none'")
except NoSuchElementException:
    assert 0, "can't find input with XYZ itemcode"
  

 Another workaround is even simpler(assuming the text box's id is "XYZ", otherwise use any JS code that can retrieve it) and probably better if you only want to change the text box's value: 

  browser.execute_script("document.getElementById('XYZ').value+='1'")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49795696)
 You can retrieve that value via  execute_script  method of the  selenium webdriver  

  print(browser.execute_script("return $('#addr').val();"))
  

  Output : 

  14ropRunS5iY9sx9d9mpCRNEsXj7RtTtuS
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/18500869)
 I don't think you need to execute JS to get the hidden input's value. 

 You can use  get_attribute  to the value attribute 

 
   http://selenium.googlecode.com/git/docs/api/py/webdriver_remote/selenium.webdriver.remote.webelement.html#selenium.webdriver.remote.webelement.WebElement.get_attribute 
 

 So in your case, try: 

  captcha_value = driver.find_element_by_id("current_captcha").get_attribute("value")
driver.find_element_by_id("capchta").send_keys(captcha_value)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/44147626)
 As workaround, you can try execute javascript with selenium. 

 For example, to unhide element 

  driver.execute_script("document.getElementById('DoMemberSearch').type = 'text';")
  

 or set value directly 

  driver.execute_script("document.getElementById('DoMemberSearch').value = '%s';" % Var4)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/23087842)
 The problem is that the input you are clicking on is really hidden by setting  display: none  style. 

 To workaround it, execute javascript code to click on the input and set  checked  attribute: 

  browser.execute_script("""var element = document.getElementById('rdoAddressOption0');
                          element.click();
                          element.checked=true;""")
browser.find_by_id('body_content_btnContinue').first.click()
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/53389015)
 If you want to click on input next to hidden, try 

  loginButton = driver.find_element_by_xpath("//input[@src='ok.png']")
#  loginButton = driver.find_element_by_xpath("//input[@name='cmd' and @value='lg']/following-sibling::input")
loginButton.click()
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/29919667)
 Grab the element you want to click: 

  # Or using xparth or something
element = driver.find_element_by_css_selector(css_selector)
  

 Click it using javascript:  

  driver.execute_script("$(arguments[0]).click();", element)
  

  NOTE: I'm using jQuery otherwise select it native with javascript  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/20636564)
 I have solved it this way: 

  from selenium import webdriver
driver = webdriver.Firefox()
driver.get("http://pythondev.zyante.com/")
loginForm = driver.find_element_by_id("user_area")
loginLink = loginForm.find_element_by_tag_name("a")
webdriver.ActionChains(driver).move_to_element(loginLink).perform()
email = driver.find_element_by_id('username')
email.send_keys('my_email')
passwd = driver.find_element_by_id('passwd')
passwd.send_keys('my_pass')
button = loginForm.find_element_by_class_name("loginButton")
webdriver.ActionChains(driver).move_to_element(button).click().perform()
  

 Above code works for me. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/44172541)
 Your select dropdown is hidden  so for that i would suggest first make it visible using javascriptexecuter then select the value 

 Use below code :  

  element=driver.find_element_by_xpath("//select[@data-role='dropdownlist']")
driver.execute_script("arguments[0].setAttribute('style', 'display: block;')",element)
select = Select(element)
select.select_by_value("100")
  

 And The other way is use  Explicitwait 
First click on down arrow and of dropdown and then click on value 100  

 Something like below code in python : 

  from selenium.webdriver.support import expected_conditions as EC

wait = WebDriverWait(driver, 10)
element = wait.until(EC.visibility_of_element_located((By.XPATH, ".//*[@id='grid']/div[3]/span[2]/span/span/span[2]/span")))
element.click

element = wait.until(EC.visibility_of_element_located((By.XPATH, ".//ul[@data-role='staticlist']/li[5]")))
element.click
  

 Note : please make correction as per python syntax  



