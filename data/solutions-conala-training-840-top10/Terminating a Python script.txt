Query: Terminating a Python script
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/73680)
 Another way is: 

  raise SystemExit
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/14836329)
 A simple way to terminate a Python script early is to use the built-in function quit(). There is no need to import any library, and it is efficient and simple. 

 Example: 

  #do stuff
if this == that:
  quit()
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/33087529)
  python -i <script>  

 'i' is for interactive. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/51226312)
 For quitting the process and terminating from background aswell. Use  CTRL+\  

 You can stop the interactive python by using  CTRL+D . 

 For stopping python scripts use  CTRL+Z . (Process won't be terminated though. Use killall for that.) 

 To terminate all python scripts running in background. Run  killall python  or  sudo killall python .  Run with caution  

 And to stop other scripts use  CTRL+C  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/73695)
  from sys import exit
exit()
  

 As a parameter you can pass an exit code, which will be returned to OS. Default is 0. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/16150238)
 You can also use simply  exit() . 

 Keep in mind that  sys.exit() ,  exit() ,  quit() , and  os._exit(0)   kill  the Python interpreter. Therefore, if it appears in a script called from another script by  execfile() , it stops execution of both scripts.  

 See "https://stackoverflow.com/a/1028632/1897240" to avoid this. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/9519489)
 In a command-line environment you could interrupt the script using https://en.wikipedia.org/wiki/Control-C#In_command-line_environments: 

  $ python -c'import time; time.sleep(300)'
^CTraceback (most recent call last):
  File "<string>", line 1, in <module>
KeyboardInterrupt
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/25158144)
 You should look at the https://docs.python.org/2/library/subprocess.html#popen-objects in https://docs.python.org/2/library/subprocess.html, they are completely appropriate for what you want to do: 

  import subprocess, time, signal

p = subprocess.Popen(['python', '-u', 'myscript.py'], stdout=subprocess.PIPE)
time.sleep(5)
p.send_signal(signal.SIGTERM)
output = p.communicate()[0]

print('Process has exited with code %d' % p.wait())
print('Output is %s' % str(output))
  

 If you send a signal to stop the process, some data may be lost in the process output buffer. This is why you may want to ensure the script is not buffering its output (use "-u" option as above if your script is also a python script). 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/40704008)
 This post is old but I recently ran into the same problem of  CTRL+C  not terminating python scripts on my  Linux . I used the  CTRL + \  ( SIGQUIT ). 



