Query: How to convert pandas index in a dataframe to a column?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/39832803)
 IIUC you need http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.values.html: 

  start = pd.to_datetime('2015-02-24')
rng = pd.date_range(start, periods=5)

df = pd.DataFrame({'a': range(5), 'b':list('ABCDE')}, index=rng)  
print (df)
            a  b
2015-02-24  0  A
2015-02-25  1  B
2015-02-26  2  C
2015-02-27  3  D
2015-02-28  4  E

print (df.values)
[[0 'A']
 [1 'B']
 [2 'C']
 [3 'D']
 [4 'E']]
  

 if need index values also first convert  datetime  to  string  values in  index  and then use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.reset_index.html for converting  index  to column: 

  df.index = df.index.astype(str)
print (df.reset_index().values)
[['2015-02-24' 0 'A']
 ['2015-02-25' 1 'B']
 ['2015-02-26' 2 'C']
 ['2015-02-27' 3 'D']
 ['2015-02-28' 4 'E']]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/46290532)
 You can just do  df.index.values : 

  df = pd.DataFrame(index=['a', 'b', 'c'])

df.index.values
# array(['a', 'b', 'c'], dtype=object)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/47547450)
 You can convert  Series  to  DataFrame , then to http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_records.html and last convert to  tuples : 

  t = [tuple(x) for x in s.reset_index().to_records(index=False)]
print (t)
[(0, 21, 1.0), (0, 22, 1.0), (0, 23, 1.0), 
 (0, 24, 1.0), (0, 26, 1.0), (0, 27, 1.0), (0, 28, 1.0)]
  

 Alternative: 

  t1 = s.to_frame().set_index(0, append=True).index.tolist()
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/47547606)
 You can use if  s  is your series :   

  s.reset_index().apply(tuple,1) 

0    (0.0, 21.0, 1.0)
1    (0.0, 22.0, 1.0)
2    (0.0, 23.0, 1.0)
3    (0.0, 24.0, 1.0)
4    (0.0, 26.0, 1.0)
5    (0.0, 27.0, 1.0)
6    (0.0, 28.0, 1.0)
dtype: object
  

 If you want the output to be a list then add  .tolist()  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/44773747)
 Need assign output back or  inplace=True  parameter: 

  df = df.reset_index()
  

 

  df.reset_index(inplace=True)
  

 

  print (df)
              datetime           id         LocalTime  ZPosition  XPosition
0  2017-01-02 00:14:39  10453190861  1483312478909238          0         -9
1  2017-01-02 00:14:40  10453191020  1483312479673076          0         -8
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/49666600)
 If you want the datetime as an index you can  

  pq.set_index(pd.to_datetime(pq.index), inplace=True, drop=True)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/51364789)
 You have to convert the  Index  to a  Series  using http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.to_series.html: 

  c = x.index.to_series().apply(lambda t: t%2==0)
  

 if you want to call  apply  as  Index  objects have no  apply  method 

 There are a limited number of methods and operations for an Index: http://pandas.pydata.org/pandas-docs/stable/api.html#modifying-and-computations 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/33679909)
 add a list comprehension in this line: 

  list = [df.columns[:,].values.astype(str).tolist()] + [[index] + vals for index,value in zip(df.index.tolist(),df.values.tolist())]
  

 also, because you have your columns in your first item as  item[colindex] = column at colindex ,  I would maybe change:  ['Index 1',x1,y1]  to  [x1,y1,'Index 1'] ? I dont know if the position of  Index  item matters but this seems to make more sense so that the columns line up? Although I dont know how you are using your data so maybe not :) 

 EDITTED:  df.index.tolist()  is better than  df.index.values.tolist()  and i think it returns just items so you need to initialize  [index]  as a list instead of just  index  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/39833244)
 If  A  is dataframe and  col  the column: 

  import pandas as pd
output = pd.np.column_stack((A.index.values, A.col.values))  



