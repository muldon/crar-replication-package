Query: How to change QPushButton text and background color
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/24671124)
 Apart from some inconsistencies with your code example setting the background color and text color of a  QPushButton  works just fine with: 

  setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')
  

 Example (using PySide): 

  from PySide import QtGui

app = QtGui.QApplication([])

button = QtGui.QPushButton()
button.setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')
button.setText('Press Me')
menu = QtGui.QMenu()
menuItem1 = menu.addAction('Menu Item1')
menuItem2 = menu.addAction('Menu Item2')

button.setMenu(menu)
button.show()

app.exec_()
  

  

   


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/43779167)
 Here is a sample code. This will help you. 

  QPushButton button1, button2;
button1.setStyleSheet("background-color:#ff0000;");

//To get Background color
QColor color = button1.palette().button().color();

//To set fetched color
button2.setStyleSheet("background-color:" + color.name() +";");
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/20668186)
 You can change the style of the button: 

  self.pushButton.setStyleSheet("background-color: red")
  

 It's like CSS. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/43779249)
 Here is a sample code. You can choose any style to set background color. 

  QPushButton button1, button2, button3;

button1.setStyleSheet("background-color: red");

button2.setStyleSheet("background-color:#ff0000;");

button3.setStyleSheet("background-color:rgb(255,0,0)");
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/6188522)
 You can use a http://doc.qt.nokia.com/latest/stylesheet.html. 

  testbutton.setStyleSheet('QPushButton {color: blue}')
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/6188836)
 You can use the http://doc.trolltech.com/4.2/qwidget.html#palette-prop property of your  QPushButton  and apply your blue color to its  ButtonText  color role: 

  testbutton = qt.QPushButton("Test")
testbutton.setFlat(True)

palette = qt.QPalette(testbutton.palette()) # make a copy of the palette
palette.setColor(qt.QPalette.ButtonText, qt.QColor('blue'))
testbutton.setPalette(palette) # assign new palette
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/34334656)
 I solved for font text and background 

   self.my_line_edit.setStyleSheet(
                """QLineEdit { background-color: green; color: white }""")
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/37654162)
 you need to set the right "role" and append "setAutoFillBackground()": 

  button = QtGui.QPushButton()
palette = self.button.palette()
role = self.button.backgroundRole() #choose whatever you like
palette.setColor(role, QColor('red'))
button.setPalette(palette)
self.button.setAutoFillBackground(True)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/14713866)
 i think you should use QT-Stylesheets to style a QPushButton 

  self.Qpushbutton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                    "border:1px solid rgb(255, 170, 255);")
  

 or  border-image  to add picture for it  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/14719013)
 Here is an example using  QRegion  and  setMask  to customize the shape of the window,  QPalette  to change the background color, and  setStyleSheet  for other properties: 

  #!/usr/bin/env python
#-*- coding:utf-8 -*-

from PyQt4 import QtGui, QtCore

class MyWindow(QtGui.QWidget):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)

        self.region = QtGui.QRegion(QtCore.QRect(0, 0, 222, 222), QtGui.QRegion.Ellipse)
        self.setMask(self.region)

        self.palette = QtGui.QPalette()
        self.palette.setBrush(QtGui.QPalette.Background, QtGui.QColor('grey').dark(150))
        self.setPalette(self.palette)

        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)

        self.label = QtGui.QLabel(self)
        self.label.setText("A round widget!")
        self.label.setStyleSheet("QLabel { background-color : lightblue; color : white; }")
        self.label.setAlignment(QtCore.Qt.AlignCenter)

        self.layout = QtGui.QHBoxLayout(self)
        self.layout.addWidget(self.label)

if __name__ == "__main__":
    import sys

    app = QtGui.QApplication(sys.argv)
    app.setApplicationName('MyWindow')

    main = MyWindow()
    main.resize(222, 222)
    main.show()

    sys.exit(app.exec_())
  



