Query: Convert list of lists to list of integers
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/54713697)
 You cannot directly convert lists to  int , but you can individually convert their elements  with a list comprehension: 

  mydict_int = dict((k, [int(s) for s in v]) for k,v in mydict.items())
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19202904)
 Use  split  to split a string into a list, for example: 

  >>> '2 2 4 5 7'.split()
['2', '2', '4', '5', '7']
  

 As you see, elements are string. If you want to have elements as integers, use  int  and a list comprehension: 

  >>> [int(elem) for elem in '2 2 4 5 7'.split()]
[2, 2, 4, 5, 7]
  

 So, in your case, you would do something like: 

  import sys

list_of_lists = []

for line in sys.stdin:
    new_list = [int(elem) for elem in line.split()]
    list_of_lists.append(new_list)
  

 You will end up having a list of lists: 

  >>> list_of_lists
[[3], [2], [2, 2, 4, 5, 7]]
  

 If you want to have those lists as variables, simply do: 

  list1 = list_of_lists[0]  # first list of this list of lists
list1 = list_of_lists[1]  # second list of this list of lists
list1 = list_of_lists[2]  # an so on ...
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/32181242)
 You'd need to do something like this: 

  >>> test_list_2 = [[1,2,3,4,5,6], 0, [7,8,9,10], [11,12,13,14]]
>>> def lift_int(v):
...     if not isinstance(v, list): 
...         return [v]
...     else:
...         return v
... 
>>> test_list_2 = [item for sublist in test_list_2 for item in lift_int(sublist)]
>>> test_list_2
[1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/54713825)
  new = {}
for i in mydict:
    new[i] = [int(k) for k in mydict[i]]
  

 this is how you can convert the strings into integers. but this code assumes that there won't be any non integer values in the list 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/855419)
 I would rather prefer using only comprehension lists: 

  [[int(y) for y in x] for x in T1]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/13126044)
 use  split()  to split the string into list, and then use  int()  to convert them into integers. 

 using  map() : 

  In [10]: lis=['25 32 49 50 61 72 78 41\n',
   ....:  '41 51 69 72 33 81 24 66\n']

In [11]: [map(int,x.split()) for x in lis]
Out[11]: [[25, 32, 49, 50, 61, 72, 78, 41], [41, 51, 69, 72, 33, 81, 24, 66]]
  

 or using list comprehension: 

  In [14]: [[int(y) for y in x.split()] for x in lis]
Out[14]: [[25, 32, 49, 50, 61, 72, 78, 41], [41, 51, 69, 72, 33, 81, 24, 66]]
  

 you can directly create this list from your file also, no need of  readlines() :   

  with open("file") as f:
    lis=[map(int,line.split()) for line in f]
    print lis
...
[[25, 32, 49, 50, 61, 72, 78, 41], [41, 51, 69, 72, 33, 81, 24, 66]]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/21786745)
  for i in range(len(list_of_values) - 1):
    print [list_of_values[i]] + [map(list, zip(*list_of_values[i+1:]))]
  

  Output  

  [['a', 'b', 'c'], [['d', 'g', 'j'], ['e', 'h', 'k'], ['f', 'i', 'l']]]
[['d', 'e', 'f'], [['g', 'j'], ['h', 'k'], ['i', 'l']]]
[['g', 'h', 'i'], [['j'], ['k'], ['l']]]
  

  

  list_of_values = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]
for i in range(len(list_of_values) - 1):
    print [list_of_values[i]] + [map(sum, zip(*list_of_values[i+1:]))]
  

  Output  

  [[1, 2, 3], [21, 24, 27]]
[[4, 5, 6], [17, 19, 21]]
[[7, 8, 9], [10, 11, 12]]
  



