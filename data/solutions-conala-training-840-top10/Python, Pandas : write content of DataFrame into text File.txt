Query: Python, Pandas : write content of DataFrame into text File
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/31247279)
 You can use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html#pandas-dataframe-to-csv, and setting both  index  and  header  to  False : 

  In [97]: print df.to_csv(sep=' ', index=False, header=False)
18 55 1 70
18 55 2 67
18 57 2 75
18 58 1 35
19 54 2 70
  

  pandas.DataFrame.to_csv  can write to a file directly, for more info you can refer to the docs linked above. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/31247247)
 You can just use http://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html and access the np attribute  .values : 

  np.savetxt(r'c:\data\np.txt', df.values, fmt='%d')
  

 yields: 

  18 55 1 70
18 55 2 67
18 57 2 75
18 58 1 35
19 54 2 70
  

 or http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv: 

  df.to_csv(r'c:\data\pandas.txt', header=None, index=None, sep=' ', mode='a')
  

 Note for  np.savetxt  you'd have to pass a filehandle that has been created with append mode. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/33794937)
 look on these lines: 

  tweets = pd.DataFrame()
tweets['text'] = list(map(lambda tweet: tweet['text'], tweets_data))
  

 You probably try to extract  tweet['text']  which does not exist in some of the dictionaries. If  the "text" field exists in only some of the lines you are loading, than you may want to write something like that: 

  tweets = pd.DataFrame()
tweets['text'] = [tweet.get('text','') for tweet in tweets_data]
tweets['lang'] = [tweet.get('lang','') for tweet in tweets_data]
#and so on...
  

 If for some reason, in some of the jsons "text" do not exists, you will get ' ' in the DataFrame. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/48353097)
 If I understand you correctly, this should do what you want: 

  df.apply(lambda x: open('{}.txt'.format(x.filename), 'w').write(x.sex), axis=1)
  

 Note you can't use .to_csv as this is a method of a DataFrame or Series. It can't be used on a string like 'a' or 'b' 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/37193303)
 From https://docs.python.org/2/library/gzip.html 

  import gzip
content = "Lots of content here"
with gzip.open('file.txt.gz', 'wb') as f:
    f.write(content)
  

 with  pandas  

  import gzip


content = df.to_csv(
      sep='|',
      header=True,
      index=False,
      quoting=csv.QUOTE_ALL,
      quotechar='"',
      doublequote=True,
      line_terminator='\n')

with gzip.open('foo-%s.csv.gz' % todaysdatestring, 'wb') as f:
    f.write(content)
  

 The trick here being that  to_csv  outputs text if you don't pass it a filename.  Then you just redirect that text to  gzip 's  write  method. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/38635222)
 Set the  Content-Disposition  to tell the browser to download the file instead of showing its content on the page. 

  resp = make_response(df.to_csv())
resp.headers["Content-Disposition"] = "attachment; filename=export.csv"
resp.headers["Content-Type"] = "text/csv"
return resp
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50159291)
 You can try reading your file and then spliting the content using  str.split(",", 2)  and then convert the result to a DF. 

    

  import pandas as pd
content = []
with open(filename, "r") as infile:
    header = infile.readline().strip().split(",")
    content = [i.strip().split(",", 2) for i in infile.readlines()]

df = pd.DataFrame(content, columns=header)
print(df)
  

  Output:  

    book_id          title                                            content
0       1   book title 1   All Passion Spent is written in three parts, ...
1       2   Book Title 2    In particular Mr FitzGeorge, a forgotten acq...
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/42812265)
 I think you can use  StringIO : 

  from pandas.compat import StringIO
df = pd.read_csv(StringIO(file_data))
  



