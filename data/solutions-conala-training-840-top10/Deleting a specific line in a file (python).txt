Query: Deleting a specific line in a file (python)
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/4710090)
 Assuming your file is in the format of one nickname per line, use this. 

 First, open the file: 

  f = open("yourfile.txt","r")
  

 Next, get all your lines from the file: 

  lines = f.readlines()
  

 Now you can close the file: 

  f.close()
  

  

  f = open("yourfile.txt","w")
  

 Then, write your lines back, except the line you want to delete. You might want to change the  "\n"  to whatever line ending your file uses. 

  for line in lines:
  if line!="nickname_to_delete"+"\n":
    f.write(line)
  

 At the end, close the file again. 

  f.close()
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/10758647)
 You could use readlines to get an array of lines and then use del on the first index of the array. This might help. http://www.daniweb.com/software-development/python/threads/68765/how-to-remove-a-number-of-lines-from-a-text-file- 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/5947880)
 change the line: 

      if not "tom" in line:
  

  

      if "tom" != line.strip():
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/35666885)
 If you use Linux, you can try the following approach. 
Suppose you have a text file named  animal.txt :                 

  $ cat animal.txt  
dog
pig
cat 
monkey         
elephant  
  

 Delete the first line: 

  >>> import subprocess
>>> subprocess.call(['sed','-i','/.*dog.*/d','animal.txt']) 
  

          

  $ cat animal.txt
pig
cat
monkey
elephant
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/28057753)
  

  f = open("target.txt","r+")
d = f.readlines()
f.seek(0)
for i in d:
    if i != "line you want to remove...":
        f.write(i)
f.truncate()
f.close()
  

 This solution opens the file in r/w mode ("r+") and makes use of seek to reset the f-pointer then truncate to remove everything after the last write. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/27920544)
 I liked the fileinput approach as explained in this answer:
https://stackoverflow.com/questions/16623579/deleting-a-line-from-a-text-file-python/16624863#16624863 

 Say for example I have a file which has empty lines in it and I want to remove empty lines, here's how I solved it: 

  import fileinput
import sys
for line_number, line in enumerate(fileinput.input('file1.txt', inplace=1)):
    if len(line) > 1:
            sys.stdout.write(line)
  

 
   Note: The empty lines in my case had length 1 
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/7356095)
 The http://docs.python.org/library/stdtypes.html?highlight=readlines#file.readlines method returns a list of  lines , not words, so your code would only work where one of your words is on a line by itself. 

 Since http://docs.python.org/library/stdtypes.html?highlight=readlines#file.next over lines this can be done much easier: 

  infile = "messy_data_file.txt"
outfile = "cleaned_file.txt"

delete_list = ["word_1", "word_2", "word_n"]
fin = open(infile)
fout = open(outfile, "w+")
for line in fin:
    for word in delete_list:
        line = line.replace(word, "")
    fout.write(line)
fin.close()
fout.close()
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/26912445)
 The best and fastest option, rather than storing everything in a list and re-opening the file to write it, is in my opinion to re-write the file elsewhere. 

  with open("yourfile.txt", "r") as input:
    with open("newfile.txt", "w") as output: 
        for line in input:
            if line!="nickname_to_delete"+"\n":
                output.write(line)
  

 That's it! In one loop and one only you can do the same thing. . 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/52740226)
 Just split the line and pop the element you don't need. 

  fobj_in = open('85488_66325_R85V54','r')
fobj_out = open('85488_66325_R85V54.txt', 'a')
for line in fobj_in:
     items = line.split()
     items.pop(3)
     fobj_out.write(' '.join(items)+'\n')
fobj_in.close()
fobj_out.close()
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/33186106)
 To remove the string within the same file, I used this code   

  f = open('./test.txt','r')
a = ['word1','word2','word3']
lst = []
for line in f:
    for word in a:
        if word in line:
            line = line.replace(word,'')
    lst.append(line)
f.close()
f = open('./test.txt','w')
for line in lst:
    f.write(line)
f.close()
  



