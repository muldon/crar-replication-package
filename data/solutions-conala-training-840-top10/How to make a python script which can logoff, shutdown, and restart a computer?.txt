Query: How to make a python script which can logoff, shutdown, and restart a computer?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/14764271)
 To restart: 

  shutdown /r
  

 To log off: 

  shutdown /l
  

 The final code block(as requested): 

 Log off: 

  def shutdown(self):
    import subprocess
    subprocess.call(["shutdown", "-f", "-s", "-t", "60"])
  

 Restart: 

  def shutdown(self):
    import subprocess
    subprocess.call(["shutdown", "-f", "-r", "-t", "60"])
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/39977903)
  

  import subprocess
  

 To shutdown your Windows PC: 

  subprocess.call(["shutdown", "/s"])
  

 To restart your windows PC 

  subprocess.call(["shutdown", "/r"])
  

 To logout your Windows PC: 

  subprocess.call(["shutdown", "/l "])
  

 To shutdown your Windows PC after 900s: 

  subprocess.call(["shutdown", "/r", "/s", "900"])
  

 To abort shutting down because there is no good reason to shutdown your pc with a python script, you were just copy-pasting code from stackoverflow: 

  subprocess.call(["shutdown", "/a "])
  

 I only tried these function calls in Python 3.5. First of all, I do not think this has changed since python 2.7, and second: it is 2016, so I guess you have made the switch already since asking this question. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/38318291)
 You could reboot a Windows system by using:  os.system("shutdown -t 0 -r -f")   

 Example: 

  import os
print "REBOOTING"
os.system("shutdown -t 0 -r -f")
  

 Change the number in front of -t to change the number of seconds before shutdown. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/34050751)
  import os
os.system('shutdown -s')
  

 This will work for you. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/14764341)
 If you can't get  shutdown  to work somehow, you can always just call the function it calls out of the USER library. You  could  do this via  ctypes  or  win32api , but you can also just do this: 

  subprocess.call(['rundll32', 'user.exe,ExitWindowsExec')
  

 Or you could call the higher-level shell function that the start menu uses: 

  subprocess.call(['rundll32', 'shell32.dll,SHExitWindowsEx 2')
  

 (See MSDN documentation on these functions.) 

 I think this is probably the worst way to do it. If you want to run a command, run  shutdown ; if you want to use the API, use  win32api . But if you've got a bizarrely screwed-up system where  shutdown /r  just doesn't work, it's an option. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/8802566)
 Try  os.system("shutdown -l") .   

  shutdown -l  is the windows shell command for logoff 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/23013375)
  import os
os.system("shutdown now -h")
  

 execute your script with root privileges.  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41964470)
 The best way to shutdown a system is to use the following codes 

  import os
os.system('systemctl poweroff') 
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/23911431)
 Sleep computer (from http://www.howtogeek.com/howto/windows-vista/quick-tip-create-shutdown-restart-lock-icons-in-windows-vista/): 

  b9 = Button(win, text = "SLEEP", command = lambda: subprocess.call(['rundll32.exe', 'powrprof.dll', 'SetSuspendState','0','1','0']))
  

  

  b9 = Button(win, text = "SLEEP", command = lambda: subprocess.call(['rundll32.exe', 'powrprof.dll', 'SetSuspendState']))
  

 Restart system: 

  b10 = Button(win, text = "RESTART", command = lambda: subprocess.call(["shutdown.exe", "-f", "-r", "-t", "0"]))
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/32431854)
 From https://serverfault.com/a/188132: 

  import os
import subprocess

def logoff():
    ppid = os.environ['PPID']
    subprocess.call(["kill", "-HUP", ppid])
  

 You'll have to catch the https://docs.python.org/2/library/exceptions.html#exceptions.KeyboardInterrupt exception: 

  def main():
    try:
        display_status()
    except KeyboardInterrupt:
        logoff()


def display_status():
    pass  # your code goes here

if __name__ == '__main__':
    main()
  



