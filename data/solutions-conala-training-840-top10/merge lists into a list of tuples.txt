Query: merge lists into a list of tuples
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/36718712)
 This approach will assume that there are no duplicate first elements in tuples inside the same original list. 

  a = [("Test","Name"),("D1","value1"),("D2","value2"),("D3","Value3")]
b = [("D1","value-n1"),("D2","value-n2"),("D2","value-n3")]

b_lookup = {t[0]: t[1:] for t in b}
c = []

for tup in a:
    if tup[0] in b_lookup:
        c.append(tup + b_lookup.pop(tup[0]))  # also removes element from b_lookup
    else:
        c.append(tup)

print(c)
  

 Output: 

  [('Test', 'Name'), ('D1', 'value1', 'value-n1'), ('D2', 'value2', 'value-n3'), ('D3', 'Value3')]
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/6563724)
 Just  zip  them: 

  >>> l1 = ['a', 'b', 'c']
>>> l2 = ['d', 'e', 'f']
>>> zip(l1, l2)
[('a', 'd'), ('b', 'e'), ('c', 'f')]
  

 If you need lists, not tuples, in the result: 

  >>> [list(l) for l in zip(l1, l2)]
[['a', 'd'], ['b', 'e'], ['c', 'f']]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/29035298)
 Use a list comprehension: 

  [(i + start, a, b) for i, (a, b) in enumerate(zip(list_a, list_b))]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/5146593)
 In python 3.0 zip returns a zip object. You can get a list out of it by calling  list(zip(a, b)) . 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/2407425)
 Youre looking for the builtin function http://docs.python.org/library/functions.html#zip. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/52271172)
 I am not sure if this a pythonic way or not but this seems simple if both lists have the same number of elements :  

  list_a = [1, 2, 3, 4]

list_b = [5, 6, 7, 8]

list_c=[(list_a[i],list_b[i]) for i in range(0,len(list_a))]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/19525705)
 Try: 

  x = zip(listA, listB, listC)    

 Python is beautiful like that.  Now this will give you tuples, not lists within your list.  Converting from tuple to list requires a  y = list(x)  call. 



