Query: Importing files from different folder
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/36251540)
 This works for me on windows  

  # some_file.py on mainApp/app2 
import sys
sys.path.insert(0, sys.path[0]+'\\app2')

import some_file
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/38978765)
 Worked for me in python3 on linux 

  import sys  
sys.path.append(pathToFolderContainingScripts)  
from scriptName import functionName #scriptName without .py extension  
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/47563957)
 In my case I had a class to import.  My file looked like this: 

  # /opt/path/to/code/log_helper.py
class LogHelper:
    # stuff here
  

 In my main file I included the code via: 

  path.append("/opt/path/to/code/")
from log_helper import LogHelper
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/50474562)
  First  import sys 

   import sys
  

  Second  append the folder path  

  sys.path.insert(0, '/the/folder/path/name-folder/')
  

  Third  Make a blank file called __ init __.py in your subdirectory (this tells Python it is a module) 

 
 name-file.py

 
 name-folder

 
 __ init __.py 
 name-module.py 
  
  
 

  Fourth  import the module inside the folder 

  from name-folder import name-module
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/52586031)
 I was faced with the same challenge, especially when importing multiple files, this is how I managed to overcome it. 

  import os, sys

from os.path import dirname, join, abspath
sys.path.insert(0, abspath(join(dirname(__file__), '..')))

from root_folder import file_name
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/27097894)
 From what I know,  add an  __init__.py  file directly in the folder of the functions you want  to  import  will do  the job. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/40612922)
 When modules are in parallel locations, as in the question: 

  application/app2/some_folder/some_file.py
application/app2/another_folder/another_file.py
  

 This shorthand makes one module visible to the other: 

  import sys
sys.path.append('../')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/33143646)
 Considering  application  as the root directory for your python project, create an empty  __init__.py  file in  application ,  app  and  folder  folders. Then in your  some_file.py  make changes as follows to get the definition of func_name: 

  import sys
sys.path.insert(0, r'/from/root/directory/application')

from application.app.folder.file import func_name ## You can also use '*' wildcard to import all the functions in file.py file.
func_name()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/43865369)
  # impts all functions    
impt config
# you invoke it this way
config.my_function()
  

  

  # impt specific function
from config impt my_function
# you invoke it this way
my_function()
  

 If the app.py is invoked not from the same folder you can do this: 

  # csfp - current_script_folder_path
csfp = os.path.abspath(os.path.dirname(__file__))
if csfp not in sys.path:
    sys.path.insert(0, csfp)
# impt it and invoke it by one of the ways described above
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/45068315)
 You can refresh the Python shell by pressing f5, or go to Run-> Run Module. This way you don't have to change the directory to read something from the file. Python will automatically change the directory. But if you want to work with different files from different directory in the Python Shell, then you can change the directory in sys, https://stackoverflow.com/a/4383597/3982001 earlier.  



