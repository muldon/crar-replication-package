Query: Open file in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/5250760)
 When you need to open a file that has a certain encoding, you would use the  codecs  module.  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/113050)
  file()  is a type, like an int or a list.  open()  is a function for opening files, and will return a  file  object. 

 This is an example of when you should use open: 

  f = open(filename, 'r')
for line in f:
    process(line)
f.close()
  

 This is an example of when you should use file: 

  class LoggingFile(file):
    def write(self, data):
        sys.stderr.write("Wrote %d bytes\n" % len(data))
        super(LoggingFile, self).write(data)
  

 As you can see, there's a good reason for both to exist, and a clear use-case for both. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/52284734)
 
  When you want to load a binary file, use
 f = open(filename, 'b') .  
  For opening a text file, use  f = io.open(filename, encoding='utf-8') .  
 

 In  python 3  however  open(filename, encoding='utf-8')  does the same thing and can be used instead. 

 
    Note:   codecs.open  is now https://bugs.python.org/issue8796 and replaced by https://docs.python.org/2/library/io.html#io.open after its introduction in  python 2.6 . For more information on codecs and unicode in python see the https://docs.python.org/2/howto/unicode.html. 
 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/42548356)
  with open('1', 'r') as fp:
    content = fp.read()
  

 This way, the file will always be closed. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/5336452)
  #!/usr/bin/python
# -*- coding: UTF-8 -*-
import codecs
f=codecs.open(u'仿宋人笔意.txt','r','utf-8')
print f.read()
f.close()
  

 worked just fine here 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/22004651)
 Convert the filename to url using http://docs.python.org/2/library/urllib.html#urllib.pathname2url: 

  import os
try:
    from urllib import pathname2url         # Python 2.x
except:
    from urllib.request import pathname2url # Python 3.x

url = 'file:{}'.format(pathname2url(os.path.abspath('1.html')))
webbrowser.open(url)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/28121192)
  open('text.txt', 'w').write('some text')
  

 works the same way and  open  has been the canonical way to open a file (and hence create a  file  instance) for a long time, even on Python 2.x. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/29730777)
 If you are using Python 2, use  codecs.open  instead of  open  and  unicode  instead of  str : 

  # -*- coding: utf-8 -*-
import codecs
outFile = codecs.open('./myFile.txt', 'wb', 'utf-8')
outFile.write(u"●")
outFile.close()
  

 In Python 3, pass the  encoding  keyword argument to  open : 

  # -*- coding: utf-8 -*-
outFile = open('./myFile.txt', 'w', encoding='utf-8')
outFile.write("●")
outFile.close()
  



