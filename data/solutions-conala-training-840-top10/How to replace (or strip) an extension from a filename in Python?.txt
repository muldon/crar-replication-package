Query: How to replace (or strip) an extension from a filename in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/3548689)
 Try http://docs.python.org/library/os.path.html#os.path.splitext it should do what you want. 

  import os
print os.path.splitext('/home/user/somefile.txt')[0]+'.jpg'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/6258249)
 This is how I would find and replace strings in files using python. This is a simple little function that will recursively search a directories for a string and replace it with a string. You can also limit files with a certain file extension like the example below. 

  import os, fnmatch
def findReplace(directory, find, replace, filePattern):
    for path, dirs, files in os.walk(os.path.abspath(directory)):
        for filename in fnmatch.filter(files, filePattern):
            filepath = os.path.join(path, filename)
            with open(filepath) as f:
                s = f.read()
            s = s.replace(find, replace)
            with open(filepath, "w") as f:
                f.write(s)
  

 This allows you to do something like: 

  findReplace("some_dir", "find this", "replace with this", "*.txt")
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/42149546)
 For Python >= 3.4: 

  from pathlib import Path

filename = '/home/user/somefile.txt'

p = Path(filename)
new_filename = p.parent.joinpath(p.stem + '.jpg') # PosixPath('/home/user/somefile.jpg')
new_filename_str = str(new_filename) # '/home/user/somefile.jpg'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/20643068)
 Another way to do is to use the http://docs.python.org/2/library/stdtypes.html method.  

 For example: 

  filename = '/home/user/somefile.txt'
(prefix, sep, suffix) = filename.rpartition('.')

new_filename = prefix + '.jpg'

print new_filename
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/40671090)
 I prefer the following one-liner approach using https://docs.python.org/2/library/stdtypes.html#str.rsplit%20%22str.rsplit(): 

  my_filename.rsplit('.', 1)[0] + '.jpg'
  

 Example: 

  >>> my_filename = '/home/user/somefile.txt'
>>> my_filename.rsplit('.', 1)
>>> ['/home/user/somefile', 'txt']
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/21737105)
 Well, there's no reason for the  base  variable... 

  os.rename(thisFile, os.path.splitext(thisFile)[0] + ".doc")
  

 . 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/42288083)
 Expanding on AnaPana's answer, how to  remove  an extension using https://docs.python.org/3/library/pathlib.html (Python >= 3.4): 

  >>> from pathlib import Path

>>> filename = Path('/some/path/somefile.txt')

>>> filename_wo_ext = filename.with_suffix('')

>>> filename_replace_ext = filename.with_suffix('.jpg')

>>> print(filename)
/some/path/somefile.ext    

>>> print(filename_wo_ext)
/some/path/somefile

>>> print(filename_replace_ext)
/some/path/somefile.jpg
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/7719562)
 Any of the solutions above work, but on linux I have found that there is a newline at the end of the extension string which will prevent matches from succeeding. Add the  strip()  method to the end. For example:   

  import os.path
extension = os.path.splitext(filename)[1][1:].strip() 
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/20306283)
 I don't know what you need is, but if it's retrieving filename without extension, you have the  os.path.splitext  http://docs.python.org/3/library/os.path.html#os.path.splitext: 

  >>> import os
>>> name, extension = os.path.splitext("movies.csv")
>>> name
'movies'
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/34969916)
 You are  comparing a string with a tuple . You've probably meant to use  in : 

  if file_extension.lower() in (".p", ".pickle"):
  

 And, you should pass a filename to  splitext() , not the file object. Replace: 

  file_name, file_extension = os.path.splitext(load_list)
  

  

  filename = askopenfilename()
_, file_extension = os.path.splitext(filename)
  



