Query: pandas: combine two columns in a DataFrame
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/53570079)
 One can use  assign  method of  DataFrame : 

  df= (pd.DataFrame({'Year': ['2014', '2015'], 'quarter': ['q1', 'q2']}).
  assign(period=lambda x: x.Year+x.quarter ))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/48717096)
 Use  .combine_first . 

  df['Period'] = df['Year'].combine_first(df['Quarter'])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/43179423)
 Use  combine_first  

  df.A.combine_first(df.B)
  

 Consider the dataframe  df  

  df = pd.DataFrame(dict(A=[1, 2, np.nan, np.nan], B=[np.nan, np.nan, 'C', np.nan]))
  

  

  df.A.combine_first(df.B)

0      1
1      2
2      C
3    NaN
Name: A, dtype: object
  

 You can assign it to a new column  'C'  

  df.assign(C=df.A.combine_first(df.B))

     A    B    C
0  1.0  NaN    1
1  2.0  NaN    2
2  NaN    C    C
3  NaN  NaN  NaN
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/33934727)
 You can use  combine_first : 

  df['c'] = df['b'].combine_first(df['a'])
  

 Docs: http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.Series.combine_first.html 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/46828880)
 As your data are inserted to a dataframe, this command should solve your problem: 

  df['period'] = df[['Year', 'quarter']].apply(lambda x: ' '.join(x.astype(str)), axis=1)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/54086739)
 I think the best way to combine the columns in pandas is by converting both the columns to integer and then to str. 

  df[['Year', 'quarter']] = df[['Year', 'quarter']].astype(int).astype(str)
df['Period']= df['Year'] + 'q' + df['quarter']
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/32529152)
  df = pd.DataFrame({'Year': ['2014', '2015'], 'quarter': ['q1', 'q2']})
df['period'] = df[['Year', 'quarter']].apply(lambda x: ''.join(x), axis=1)
  

 Yields this dataframe 

     Year quarter  period
0  2014      q1  2014q1
1  2015      q2  2015q2
  

 This method generalizes to an arbitrary number of string columns by replacing  df[['Year', 'quarter']]  with any column slice of your dataframe, e.g.  df.iloc[:,0:2].apply(lambda x: ''.join(x), axis=1) . 

 You can check more information about apply() method http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/26620409)
 You may use  combine_first  with  fillna : 

 
   DataFrame. combine_first ( other ) 
  
   Combine two DataFrame objects and
  default to non-null values in frame calling the method. Result index
  columns will be the union of the respective indexes and columns 
 

 You can read the doc from http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.combine_first.html 

  import pandas as pd
d1 = pd.DataFrame([[nan,1,1],[2,2,2],[3,3,3]], columns=['a','b','c'])

d1
    a  b  c
0 NaN  1  1
1   2  2  2
2   3  3  3

d2 = pd.DataFrame([[1,nan,1],[nan,2,2],[3,3,nan]], columns=['b','d','e'])

d2
    b   d   e
0   1 NaN   1
1 NaN   2   2
2   3   3 NaN
  

 

  d2.combine_first(d1) # d1's values are prioritized, if d2 has no NaN
    a  b  c   d   e
0 NaN  1  1 NaN   1
1   2  2  2   2   2
2   3  3  3   3 NaN

d2.combine_first(d1).fillna(5) # simply fill NaN with a value
   a  b  c  d  e
0  5  1  1  5  1
1  2  2  2  2  2
2  3  3  3  3  5
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/51462275)
 Let us suppose your   dataframe  is  df  with columns   Year   and   Quarter  . 

  import pandas as pd
df = pd.DataFrame({'Quarter':'q1 q2 q3 q4'.split(), 'Year':'2000'})
  

 Suppose we want to see the dataframe; 

  df
>>>  Quarter    Year
   0    q1      2000
   1    q2      2000
   2    q3      2000
   3    q4      2000
  

 Finally, concatenate the   Year   and the   Quarter   as follows. 

  df['Period'] = df['Year'] + ' ' + df['Quarter']
  

 You can now  print    df    to see the resulting dataframe. 

  df
>>>  Quarter    Year    Period
    0   q1      2000    2000 q1
    1   q2      2000    2000 q2
    2   q3      2000    2000 q3
    3   q4      2000    2000 q4
  

 If you do not want the space between the year and quarter, simply remove it by doing; 

  df['Period'] = df['Year'] + df['Quarter']
  



