Query: How do I divide the members of a list by the corresponding members of another list in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/3731555)
 If you happen to be using  numpy , you can use the following ideas: 

  import numpy as np
conversion_rate = np.divide(trials, conversions)
  

 or, using broadcasting: 

  import numpy as np
trials = np.array([2, 2, 2, 8, 8, 4])
conversions = np.array([1, 0, 2, 4, 8, 3])
conversion_rate = 1.0 * trials / conversions
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/3731566)
 Without using zip and float: 

  [1.0*conversions[n]/trials[n] for n in xrange(len(trials))]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/30725514)
 Using https://docs.python.org/2/library/itertools.html#itertools.izip (Python2.7): 

  import itertools

[[float(aaa) / bbb for (aaa, bbb) in itertools.izip(aa, bb)] \
    for (aa, bb) in itertools.izip(a, b)]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/30725494)
 Zip the two lists and use a list comprehension: 

  from __future__ import division   # in python2 only
result = [[x/y for x,y in zip(xs, ys)] for xs, ys in zip(a, b)]
  

 

  

  In [1]: a = [[1, 0, 2], [0, 0, 0], [1], [1]]
   ...: b = [[5, 6, 4], [6, 6, 6], [3], [3]]
   ...: 

In [2]: result = [[x/y for x,y in zip(xs, ys)] for xs, ys in zip(a, b)]

In [3]: result
Out[3]: [[0.2, 0.0, 0.5], [0.0, 0.0, 0.0], [0.3333333333333333], [0.3333333333333333]]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/23908251)
 You can try using a  set  and its  intersection()  method: 

  L1 = [100, 111, 223, 456, 789, 880]
L2 = [100, 789, 223, 556, 998, 332, 989, 987]    

n = ...
print len(set(L2).intersection(L1)) > n
# True or False
  

 If you want to get the interesection elements you can just print the result of  intersection() : 

  print set(L2).intersection(L1)
# set([100, 789, 223])  # list(...) to convert to list
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/39970678)
  

  >>> out=[]
>>> for s1, s2 in zip(q, r):
...    inner=[]
...    for n, d in zip(s1, s2):
...       inner.append(float(n)/d)
...    out.append(inner)
... 
>>> out
[[1.1666666666666667, 2.0, 1.5], [1.3333333333333333, 1.25, 1.2]]
  

 Or, use numpy: 

  >>> q=[[7.,2.,3.],[4.,5.,6.]]
>>> r=[[6.,1.,2.],[3.,4.,5.]]
>>> np.array(q)/np.array(r)
array([[ 1.16666667,  2.        ,  1.5       ],
       [ 1.33333333,  1.25      ,  1.2       ]])
  

 Or, if you have int literals: 

  >>> q=[[7,2,3],[4,5,6]]
>>> r=[[6,1,2],[3,4,5]]
>>> np.array(q, dtype=float)/np.array(r)
array([[ 1.16666667,  2.        ,  1.5       ],
       [ 1.33333333,  1.25      ,  1.2       ]])
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50399689)
 Break it down into pieces, and they're all easy: 

 
   if the number of members (num_members) exceed the max household size  
 

  if hh['num_members'] > max_household_size:
  

 
   I will divide the household into two households 
 

      hh1, hh2 = {}, {}
  

 
   each containing half of the members of the lists (define randomly) 
 

 OK, let's write a function to help with this: 

  def split_list(lst):
    lst1 = []
    lst2 = []
    for member in lst:
        if random.random() < 0.5:
            lst1.append(member)
        else:
            lst2.append(member)
    return lst1, lst2
  

 And now, we can just call that function once for males, once for females, and gather all the results back up into two new dicts: 

      hh1['list_female'], hh2['list_female'] = split(hh['list_female'])
    hh1['list_male'], hh2['list_male'] = split(hh['list_male'])
    hh1['num_members'] = len(hh1['list_male']) + len(hh1['list_female'])
    hh2['num_members'] = len(hh2['list_male']) + len(hh2['list_female'])
  

 There are ways you can make this more terse, or more clever, but start with code you can definitely understand, and then see if you can improve it from there without confusing yourself; don't try to write the cleverest thing first. 

 Of course you still need to figure out what to  do  with this  hh1  and  hh2 , and I'm sure there are other parts of your problem that aren't trivial, but this should be enough to get you unstuck. 



