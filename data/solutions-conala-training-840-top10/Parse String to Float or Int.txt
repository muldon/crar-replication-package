Query: Parse String to Float or Int
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/379909)
  float("545.2222")  and  int(float("545.2222"))  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/44994308)
 I use this function for that 

  import ast

def parse_str(s):
   try:
      return ast.literal_eval(str(s))
   except:
      return
  

 It will convert the string to its type 

  value = parse_str('1')  # Returns Integer
value = parse_str('1.5')  # Returns Float
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/52790187)
 You can use  str()  to convert any variable to string,  int()  to convert string integers to integers and  float()  to convert string floating numbers to float value. 

  str_to_float = float("545.2222")
str_to_int = int("31")
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/39940402)
 Use: 

  def num(s):
    try:
        for each in s:
            yield int(each)
    except ValueError:
        yield float(each)
a = num(["123.55","345","44"])
print a.next()
print a.next()
  

 This is the most Pythonic way I could come up with.  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/3988355)
 You need to take into account rounding to do this properly. 

 I.e. int(5.1) => 5
     int(5.6) => 5  -- wrong, should be 6 so we do int(5.6 + 0.5) => 6 

  def convert(n):
    try:
        return int(n)
    except ValueError:
        return float(n + 0.5)
  



