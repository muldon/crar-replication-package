Query: How can I use sum() function for a list in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/32244359)
  numbers = [1, 2, 3]
numsum = sum(list(numbers))
print(numsum)
  

 This would work, if your are trying to Sum up a list. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/28264783)
 OR you can use https://docs.python.org/2/library/functions.html#zip : 

  >>> l=[[1,2,3],[4,5,6],[7,8,9]]
>>> sum(zip(*l)[0])
12
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/25047602)
 One approach is to use a https://docs.python.org/2/tutorial/classes.html#generator-expressions: 

  total = sum(int(v) for name,v in table)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/30219121)
 This doesn't work.   sum()  is for adding up numbers, not strings.  Use  ''.join()  instead. 

  >>> ''.join(['good ', 'morning'])
'good morning'
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/25047706)
 If you want to use lambda the following should solve it: 

  total = sum(map(lambda x: int(x[1]), table))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/53220132)
 In the last answer, you don't need to make a list from numbers; it is already a list: 

  numbers = [1, 2, 3]
numsum = sum(numbers)
print(numsum)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/13909058)
 This: 

  sum([2, 4, 7, 12, 3])
  

 You use  sum()  to add all the elements in a list. 

  

  x = [2, 4, 7, 12, 3]
sum(x)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/21800306)
 Just put the list comprehension inside the function. (with  return ) 

  >>> def addhours(listoflists):
...     return [sum(lst) for lst in zip(*listoflists)]
...
>>> addhours([[1,2,3],[1,2,3],[2,3,4]])
[4, 7, 10]
  

 Why your code does not work? 

  def addhours(listoflists):
    for list in zip(*listoflists):
        newsum = sum (list)  # <---- This statement overwrites newsum
    return newsum # returns the last sum.
  

 You need a list to hold sums as items. 

  def addhours(listoflists):
    result = []
    for lst in zip(*listoflists):
        result.append(sum(lst)) # Append to the list instead of overwriting.
    return result
  

 BTW, don't use  list  as a variable name. It shadows builtin function http://docs.python.org/3/library/functions.html#func-list. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/25047611)
  sum(map(int,zip(*table)[-1]))
  

 is one way to do it ... there are many options however 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/37816825)
 You can simply use index slicing in python and the sum function. 

  return sum(L[a:b])
  



