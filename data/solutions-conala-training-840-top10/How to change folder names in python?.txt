Query: How to change folder names in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/33284528)
 The following code will rename all of the files in that directory with similar names but with  _  excluded. 

  #UNTESTED
import os
directoryname="C:\\Users\\Ineke\\Documents\\Python Scripts\\images"
lijstmetfiles = os.listdir(directoryname)
for i in lijstmetfiles:
    os.rename(os.path.join(directoryname, i),
              os.path.join(directoryname,
                           i.replace('_','')))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/28391566)
  os.chdir  to change directory. just do some tweak to locate to other directory 

   #!/usr/bin/env python
    import glob
    import os
    directory='/path/folder1/folder2'
    os.chdir(directory)
    files=glob.glob('*.pdf')
    for filename in files:
        os.unlink(filename)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/8362041)
 Assuming the script is in the same directory as the files you want to rename, and you already have the list of files that you want to rename, you can do this: 

  for file in rename_list:
    os.rename(file, file[4:6] + file[:2] + file[2:4] + file[6:])
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/34535448)
 That script rename that files and change their location to the parent folder, in this case, parent of the data folder. Maybe you have some file with these number in the parent folder. You should attach the folder name to the rename function's second parameter. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/15427958)
 You can use below code to write only File name from a folder. 

  import os

a = open("output.txt", "w")
for path, subdirs, files in os.walk(r'C:\temp'):
   for filename in files:
      a.write(filename + os.linesep) 
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/34686110)
 I think your code needs some formatting help. 

 The basic issue is that  os.listdir()  returns names relative to the directory specified (in this case an absolute path). But your script can be running from any directory. Manipulate the file names passed to os.rename() to account for this. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/19482983)
 In your example, when you get a list of files in a  files_to_Change  directory, you get file names without the directory name:  

  >>> files = os.listdir('test_folder')
>>> print files[0]
.com.apple.timemachine.supported
  

 So in order to get the full path to that file, from whereever you're in your directory tree, you should join the directory name ( files_to_Change ) with the file name: 

  import os
join = os.path.join

src = 'files_to_Change'
files = os.listdir( src )


for i in files:
    old = i
    new, ext = os.path.splitext ( old )
    os.rename( join( src, old ), join( src, fileName ))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/11916749)
 The error is coming because your current working directory doesn't points to  'C:/Users/Any/Desktop/test' , by default it points to  c:\python27  if you're using  python 2.7, you can check yours by  os.getcwd() , so you should change your current working directory to  'C:/Users/Any/Desktop/test'  before applying that rename. 

 use  os.chdir()  to change the current working directory. 

  import os
import sys
words = os.listdir('C:/Users/Any/Desktop/test')
dirlist = os.listdir('C:/Users/Any/Desktop/test')

words = [w.replace('E', 'e') for w in words]
print words 

os.chdir('C:/Users/Any/Desktop/test')  #this changes the current working directory
os.rename(dirlist[1], words[1])
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/8735360)
  os.rename("Joe Blow", "Blow, Joe")
  

 .  Which part are you having trouble with? 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/25416519)
 Use sys.argv to get the command line arguments. For example  test.py : 

  import os
import sys

path = sys.argv[1]
print(os.listdir(path))
  

 and then you can create a batch file which should placed in a folder that belongs to the  PATH  variable. In order to do so, create a text document with the following contents and save it as  ListDir.bat . Copy the ListDir.bat to either your python folder, or Windows folder (both should be in your  PATH )  

 ListDir.bat: 

  python C:\test.py "%CD%"
PAUSE
  

 The  %CD%  refers to the current directory in the windows prompt. So assuming the python script  test.py  is in  C:\  the first line executes the test.py script with the argument current directory.  

 I used  PAUSE  to get user input before completing the script, you could choose not to. 

 After you save the  ListDir.bat  file. You can navigate to the folder you want to use it in, and just call  ListDir  



