Query: Python Check if all of the following items is in a list
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/18170471)
 You're checking if the actual list is in there, not the tuple. Here, you can use http://docs.python.org/2/library/functions.html#all: 

  all(i in a3.f.items() for i in L[0].f.items())
  

  

  >>> set(L[0].f.items()) & set(a3.f.items())) == set(L[0].f.items())
True # Note that without the bool call this returns set([('a', 1)]), which can
     # be useful if you have more than one sublist tuples.
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/740300)
 This will do it in one line. 

  >>> a=[2,3,4]
>>> b=[1,2]
>>> bool(sum(map(lambda x: x in b, a)))
True
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/35995543)
 You can use a list comprehension: 

 For Python 2: 

  cluster_list = [{k: v} for k, v in centroid.iteritems()]
# [{'A': [1.0, 1.0]}, {'B': [2.0, 1.0]}]
  

 For Python 3: 

  cluster_list = [{k: v} for k, v in centroid.items()]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/740297)
 Best I could come up with: 

  any([True for e in (1, 2) if e in a])
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/52189801)
 In python 3 we can start make use of the unpack asterisk. Given two lists: 

  any({*a} & {*b})
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/24399987)
 1 line without list comprehensions. 

  >>> any(map(lambda each: each in [2,3,4], [1,2]))
True
>>> any(map(lambda each: each in [2,3,4], [1,5]))
False
>>> any(map(lambda each: each in [2,3,4], [2,4]))
True
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/39246091)
 Try this, all  will check the existence of  dictA  in  listA . 

  [i for i in listA if all(j in i.items() for j in dictA.items())]
  

     

  [{'c1': 4, 'gtm': 3, 'id': '111', 't': 1, 'tid': 2},
 {'c1': 4, 'c2': 5, 'gtm': 3, 'id': '333', 't': 1, 'tid': 2}]
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/740294)
  >>> L1 = [2,3,4]
>>> L2 = [1,2]
>>> [i for i in L1 if i in L2]
[2]


>>> S1 = set(L1)
>>> S2 = set(L2)
>>> S1.intersection(S2)
set([2])
  

 Both empty lists and empty sets are False, so you can use the value directly as a truth value. 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/740309)
 In some cases (e.g. unique list elements), set operations can be used. 

  >>> a=[2,3,4]
>>> set(a) - set([2,3]) != set(a)
True
>>> 
  

 Or, using http://docs.python.org/library/stdtypes.html#set.isdisjoint, 

  >>> not set(a).isdisjoint(set([2,3]))
True
>>> not set(a).isdisjoint(set([5,6]))
False
>>> 
  



