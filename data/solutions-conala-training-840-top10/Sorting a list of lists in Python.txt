Query: Sorting a list of lists in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9543233)
 http://en.wikipedia.org/wiki/Schwartzian_transform 

  list_1_sorted, list_2_sorted = zip(*sorted(zip(list_1, list_2),
  key=operator.itemgetter(0), reverse=True))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/9543232)
 You can use  zip : 

  >>> list_1 = ['string1', 'string2', 'string3']
>>> list_2 = [5, 2, 8]
>>> s = sorted(zip(list_2, list_1), reverse=True)
>>> list_1_sorted = [e[1] for e in s]
>>> list_2_sorted = [e[0] for e in s]
>>> list_1_sorted
['string3', 'string1', 'string2']
>>> list_2_sorted
[8, 5, 2]
>>> 
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/21054786)
 You can use http://docs.python.org/2/library/functions.html#zip: 

  >>> [list(t) for t in zip(*sorted(zip(*s)))]
[['A', 'E', 'J', 'M', 'S'], ['C', 'A', 'F', 'A', 'A'], ['A', 'B', 'F', 'B', 'B']]
  

 where  s  is your list of lists. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/18776084)
 Just pass it as the key function to sort: 

  my_list.sort(key=lambda x: abs(x[0] - x[3]))
  

 For example: 

  In [1]: my_list = [[1, 2], [3, 7], [4, 6]]

In [2]: my_list.sort(key=lambda x: abs(x[0] - x[1]))

In [3]: my_list
Out[3]: [[1, 2], [4, 6], [3, 7]]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7997011)
 Python's sorting is stable, so you will maintain the order after the first item regardless. 

  li1.sort(key=lambda x: not x.startswith('b.'))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/34123931)
 Use  sorted(list, key=int) : 

  lst= [['7','10','8','9','11','12'],['3','1','2','4','6','5']]

for i in lst:
    i = sorted(i, key=int)
    print(i)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/23809874)
 Python's sort is called http://en.wikipedia.org/wiki/Timsort. Its average case performance is O(nlog(n)). It performs really well with pre-sorted lists because it's implementation is designed to seek out runs of sorted elements in the list. 



