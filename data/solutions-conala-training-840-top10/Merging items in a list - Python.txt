Query: Merging items in a list - Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/54445447)
 You can slice the list while iterating an index over the length of the list with a step of 3 in a list comprehension: 

  [''.join(the_list[i:i + 3]) for i in range(0, len(the_list), 3)]
  

 You can also create an iterator from the list and use  zip  with  itertools.repeat  to group 3 items at a time: 

  from itertools import repeat
i = iter(the_list)
[''.join(t) for t in zip(*repeat(i, 3))]
  

  

  ['abcde', 'fghijklm']
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/35448993)
  >>> items = [(4,2),(1,1),(2,4),(8,6),(11,4),(10,2),(7,3),(6,1)]
>>> new_items = [items[i:i+2] for i in range(0, len(items), 2)] 
>>> new_items
[[(4, 2), (1, 1)], [(2, 4), (8, 6)], [(11, 4), (10, 2)], [(7, 3), (6, 1)]]
  

 You can do it with the while loop like this.  

  >>> new_items = []
>>> while items:
...     new_items.append((items.pop(0), items.pop(0)))
... 
>>> new_items
[((4, 2), (1, 1)), ((2, 4), (8, 6)), ((11, 4), (10, 2)), ((7, 3), (6, 1))]
  

 However this is destructive to  items  and isn't very efficient due to using  pop(0)  which is O(n) 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/16483704)
 You could use a  defaultdict : 

  >>> from collections import defaultdict
>>> d = defaultdict(list)
>>> a = [1,1,1,2,2,3]
>>> b = [4,7,9,5,6,11]
>>> for k,v in zip(a,b):
...     d[k].append(v)
... 
>>>[x[1] for x in sorted(d.items())]
[[4, 7, 9], [5, 6], [11]]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/35449022)
 You can use a list comprehension where you zip the items in pairs. 

  Items = [(4, 2), (1, 1), (2, 4), (8, 6), (11, 4), (10, 2), (7, 3), (6, 1)]
New_Items = [list(pair) for pair in zip(Items[::2], Items[1::2])]

>>> New_Items
[[(4, 2), (1, 1)], [(2, 4), (8, 6)], [(11, 4), (10, 2)], [(7, 3), (6, 1)]]
  



