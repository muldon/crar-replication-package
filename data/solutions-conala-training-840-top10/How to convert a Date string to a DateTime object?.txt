Query: How to convert a Date string to a DateTime object?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/44984277)
 you have a date string like this, "24052010" and you want date object for this, 

  from datetime import datetime
cus_date = datetime.strptime("24052010", "%d%m%Y").date()
  

 this cus_date will give you date object. 

 you can retrieve date string from your date object using this, 

  cus_date.strftime("%d%m%Y")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/2803877)
 You can use http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior in the http://docs.python.org/library/datetime.html package of Python: 

  >>> datetime.datetime.strptime('24052010', "%d%m%Y").date()
datetime.date(2010, 5, 24)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/5868392)
  dateobj.date()  will give you the  datetime.date  object, such as  datetime.date(2011, 5, 1)  

 Use: 

  dateobj = datetime.datetime.strptime(datestr,'%Y-%m-%d').date()
  

 See also: Python documentation on https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/29688540)
 You can use the  datetime.datetime.strptime()  function to create a datetime object, then  datetime.datetime.strftime()  to return your correctly formatted date like so: 

  from datetime import datetime
dt = datetime.strptime('2015-04-08T07:52:00Z', '%Y-%m-%dT%H:%M:%SZ')
print dt.strftime('%d/%m/%Y')
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/32868633)
 To create a date object from the arabic date string: 

  #!/usr/bin/env python
# -*- coding: utf-8 -*-
from datetime import date

d = date(*map(int, u"١٩٩٤-٠٤-١١".split('-')))
# -> datetime.date(1994, 4, 11)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/15557928)
 This should work: 

  import datetime
s = "30-01-12"
slist = s.split("-")
sdate = datetime.date(int(slist[2]),int(slist[0]),int(slist[1]))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/35357691)
 Use time module to convert data. 

 Code snippet: 

  import time 
tring='20150103040500'
var = int(time.mktime(time.strptime(tring, '%Y%m%d%H%M%S')))
print var
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/31985198)
 You can use the format -  '%Y %B %d'  along with  datetime.datetime.strptime()  method to convert string to date. Where  %Y  is 4 digit year,  %B  is complete month name, and  %d  is date. 

 Example/Demo - 

  >>> datetime.datetime.strptime('2015 June 1','%Y %B %d')
datetime.datetime(2015, 6, 1, 0, 0)

>>> datetime.datetime.strptime('2015 June 1','%Y %B %d').date()
datetime.date(2015, 6, 1)
  

 Use the first one, if you are content with  datetime  object, if you want the  date()  object itself, you can use the second one. 



