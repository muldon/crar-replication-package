Query: how to get a single result from a SQLite query in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/27326503)
 If you're not using pysqlite which has the built in  cursor.fetchone  

  cursor.execute("select value from table order by value desc limit 1")
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/7011319)
 i think you're looking for http://docs.python.org/library/sqlite3.html#sqlite3.Cursor.fetchone : 

  cursor.fetchone()[0]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/7011685)
 Or you could write a wrapper function that, given SQL, returns a scalar result: 

  def get_scalar_result(conn, sql):
    cursor=conn.cursor()
    cursor.execute(sql)

    return cursor.fetchone()[0]
  

 I apologize for the possibly less than syntactically correct Python above, but I hope you get the idea. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/34776463)
 use  fetchone : 

  c.execute(qry)
y=c.fetchone()[0]
print y
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/20534863)
 Supply the value using parametrized SQL: 

  x = c.execute("SELECT Four FROM keys2 WHERE One = ?", "B")
  

 The problem with the SQL you posted is that the value  B  must be quoted.  

  x = c.execute("SELECT Four FROM keys2 WHERE One = 'B'")
  

 would also have worked, but it is better to always use parametrized SQL (to guard against SQL injection) and let sqlite3 do the quoting for you. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/10938206)
 This code using the sqlite3 module should fetch the rows of the result from the query into the  output  list: 

  conn = sqlite3.connect('database.db')
c = conn.cursor()
c.execute('select y1 from table where pagenr=? and x1=?',
(pagenr_value, x1_value))
output = c.fetchall()
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/27677862)
 Change it to 

  self.cur.execute( """SELECT sum(kaxia) FROM es_data WHERE strftime('%m',es_date)= ? AND es_orig=1""",(str(i),) )
  

 Your code will be 

  for i in range(1,13):
    x = self.cur.execute( """SELECT sum(kaxia) FROM es_data WHERE strftime('%m',es_date)= ? AND es_orig=1""",(str(i),) )
    m_totes_1=x.fetchone()[0]
    print q_totes_1
    if m_totes_1 is None:
        m_totes_1=0.0
  

 You are also a victim of SQL Injection. (Always use  ?   

   


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/32422884)
  try:
    cur.execute(sql_query, sql_)
    self.con.commit()

except sqlite3.Error as er:
    print 'er:', er.message
  

 gives you the error. 
Or : er.args. This is a list, I don't know if it may contain more than one element. First element is the message returned by er.message 

 Another possibility :   

  a,b,c = sys.exc_info()
for d in traceback.format_exception(a,b,c) :
   print d,
  

 Sqlite error is in c 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/35622077)
 You are executing a insert query, it's result is not having any thing to fetch. You should run a select query and then fetch the data.  

 
   fetchone() 

  Fetches the next row of a query result set, returning a single sequence, or None when no more data is available.
  
 

 An example -  

  >>> cur.execute('INSERT INTO DT(Date, Time) Values (?,?)', (z[0],z[1]))
<sqlite3.Cursor object at 0x0353DF60>
>>> print cur.fetchone()
None
>>> cur.execute('SELECT Date, Time from DT')
<sqlite3.Cursor object at 0x0353DF60>
>>> print cur.fetchone()
(u'2016-02-25', u'12-46-16')
  


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/28940911)
 A single cursor object works only with a single query at a time;  execute()  overwrites any previous results. 

 If you want to execute two queries at the same time, use two cursors: 

  c = db.cursor()
c2 = db.cursor()
for row in c.execute("SELECT name FROM sqlite_master WHERE type='table'"):
    tablename = row[0]
    for row2 in c2.execute("SELECT * FROM %s ORDER BY Date DESC" % tablename):
        ...
  

 Note: it would be a bad idea to modify the table while some other query on it is still running. 



