Query: Get Filename Without Extension in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/678242)
 Getting the name of the file without the extension : 

  import os
print(os.path.splitext("path_to_file")[0])
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/4444973)
 .  os.path.splitext  is your friend: 

  os.path.splitext('1.1.1.jpg')
>>> ('1.1.1', '.jpg')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/7202805)
  import os.path
extension = os.path.splitext(filename)[1][1:]
  

 To get only the text of the extension, without the dot. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/19488791)
 If you want to keep the path to the file and just remove the extension 

  >>> file = '/root/dir/sub.exten/file.data.1.2.dat'
>>> print ('.').join(file.split('.')[:-1])
/root/dir/sub.exten/file.data.1.2
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/37760212)
 os.path.splitext()  won't  work if there are multiple dots in the extension. 

 For example, images.tar.gz 

  >>> import os
>>> file_path = '/home/dc/images.tar.gz'
>>> file_name = os.path.basename(file_path)
>>> print os.path.splitext(file_name)[0]
images.tar
  

 You can just find the index of the first dot in the basename and then slice the basename to get just the filename without extension. 

  >>> import os
>>> file_path = '/home/dc/images.tar.gz'
>>> file_name = os.path.basename(file_path)
>>> index_of_dot = file_name.index('.')
>>> file_name_without_extension = file_name[:index_of_dot]
>>> print file_name_without_extension
images
  



