Query: Dictionary to lowercase in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51039681)
 In Python 3: 

  d = dict()
d = {k.casefold(): v for k, v in d.items()}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30733011)
 Just use a comprehension to run through the dictionary again and convert all keys to lowercase. 

  alphlower = {k.lower(): v for k, v in alphabet.iteritems()}
  

 Result 

 
   {' ': 27, 'a': 1, 'c': 3, 'b': 2, 'e': 5, 'd': 4, 'g': 7, 'f': 6, 'i': 9, 'h': 8, 'k': 11, 'j': 10, 'm': 13, 'l': 12, 'o': 15, 'n': 14, 'q': 17, 'p': 16, 's': 19, 'r': 18, 'u': 21, 't': 20, 'w': 23, 'v': 22, 'y': 25, 'x': 24, 'z': 26} 
 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/30732980)
 use dict comprehensions 

  alphabet =  {k.lower(): v for k, v in alphabet.items()}
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/30733065)
  d1 = {'A':1, 'B': 2, 'C': 3, 'D':4, 'E': 5, 'F': 6, 'G':7, 'H':8, 'I':9, 'J':10,'K':11, 'L':12, 'M':13, 'N':14, 'O':15,'P': 16,'Q': 17,'R': 18,'S':19,'T':20}
print dict((k.lower(), v) for k, v in d1.iteritems())
  

 You may please visit https://stackoverflow.com/questions/4223654/how-to-ensure-that-a-python-dict-keys-are-lowercase 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/44229724)
 I'd define a function to recursively lowercase a value, and then use it in a dict comprehension: 

  import types
def lowerValues(arg):
    # Handle iterables
    if hasattr(arg, "__iter__"):
        return [lowerValues(item) for item in arg]
    elif isinstance(arg, types.StringTypes):
        return arg.lower()
    else:
        return arg

book_data = {k.lower() : lowerValues(v) for k,v in book_data.items()}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/40789531)
 If you want keys and values of multi-nested dictionary (json format) lowercase, this might help.
Need to have support for dict comprehensions what should be in  Python 2.7  

  dic = {'A':['XX', 'YY', 'ZZ'],
       'B':(u'X', u'Y', u'Z'),
       'C':{'D':10,
            'E':('X', 'Y', 'Z'),
            'F':{'X', 'Y', 'Z'}
           },
       'G':{'X', 'Y', 'Z'}
      }
  

   PYTHON2.7   -- also supports OrderedDict 

  def _lowercase(obj):
    """ Make dictionary lowercase """
    if isinstance(obj, dict):
        t = type(obj)()
        for k, v in obj.items():
            t[k.lower()] = _lowercase(v)
        return t
    elif isinstance(obj, (list, set, tuple)):
        t = type(obj)
        return t(_lowercase(o) for o in obj)
    elif isinstance(obj, basestring):
        return obj.lower()
    else:
        return obj 
  

   PYTHON 3.6   

  def _lowercase(obj):
    """ Make dictionary lowercase """
    if isinstance(obj, dict):
        return {k.lower():_lowercase(v) for k, v in obj.items()}
    elif isinstance(obj, (list, set, tuple)):
        t = type(obj)
        return t(_lowercase(o) for o in obj)
    elif isinstance(obj, str):
        return obj.lower()
    else:
        return obj
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/764244)
 You will need to use either a loop or a list/generator comprehension.  If you want to lowercase all the keys and values, you can do this:: 

  dict((k.lower(), v.lower()) for k,v in {'My Key':'My Value'}.iteritems())
  

 If you want to lowercase just the keys, you can do this:: 

  dict((k.lower(), v) for k,v in {'My Key':'My Value'}.iteritems())
  

 http://www.python.org/dev/peps/pep-0289/ (used above) are often useful in building dictionaries; I use them all the time.  . 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/38572808)
  Shorter way in python 3:   {k.lower(): v for k, v in my_dict.  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/30683983)
 you may simply use  string.ascii_lowercase  which is string of all lowercase characters, then you  zip  the lowercase letters and list of number ranging from  0  to  len(string.ascii_lowercase)  and then convert them to  dict . 

 However you may want to use some other set of alphabet as  string.ascii_letters ,  string.ascii_uppercase  ,  string.letters ,  string.punctuation , etc. 

 You can easily filter the keys that you want in your dictionary either by concatenating the above mentioned strings as  string.ascii_lowercase+string.ascii_uppercase  would give us a string containing first the 26 lowercase alphabets and then 26 uppercase alphabets, you may also apply slicing methods to get desired set of characters, like  string.ascii_lowercase[0:15]  would give you  "abcdefghijklmn"  

  import string

alphabets = string.ascii_lowercase
print dict(zip(alphabets, range(len(alphabets))))
>>> {'a': 0, 'c': 2, 'b': 1, 'e': 4, 'd': 3, 'g': 6, 'f': 5, 'i': 8, 'h': 7, 'k': 10, 'j': 9, 'm': 12, 'l': 11, 'o': 14, 'n': 13, 'q': 16, 'p': 15, 's': 18, 'r': 17, 'u': 20, 't': 19, 'w': 22, 'v': 21, 'y': 24, 'x': 23, 'z': 25}
  



