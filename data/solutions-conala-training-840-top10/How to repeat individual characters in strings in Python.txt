Query: How to repeat individual characters in strings in Python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/38273689)
 Or another way to do it would be using  map :  

  "".join(map(lambda x: x*7, "map"))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/38273445)
 If you want to repeat  individual  letters you can just replace the letter with n letters e.g. 

  >>> s = 'abcde'
>>> s.replace('b', 'b'*5, 1)
'abbbbbcde'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/38273684)
 And since I use numpy for everything, here we go: 

  import numpy as np
n = 4
''.join(np.array(list(st*n)).reshape(n, -1).T.ravel())
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/38273552)
 Another way: 

  def letter_repeater(n, string):
    word = ''
    for char in list(string):
        word += char * n
    print word

letter_repeater(4, 'monkeys')


mmmmoooonnnnkkkkeeeeyyyyssss
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/38273538)
 Or using regular expressions: 

  

  >>> import re
>>> s = '123abc'
>>> n = 3
>>> re.sub('(.)', r'\1' * n, s)
'111222333aaabbbccc'
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/38273369)
  

  >>> s = '123abc'
>>> n = 3
>>> ''.join([char*n for char in s])
'111222333aaabbbccc'
>>> 
  

 (changed to a list comp from a generator expression as using a list comp inside join is https://stackoverflow.com/a/9061024/2302482) 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/38273442)
 An alternative https://docs.python.org/3/library/itertools.html-problem-overcomplicating-style option with  repeat() ,  izip()  and  chain() : 

  >>> from itertools import repeat, izip, chain
>>> "".join(chain(*izip(*repeat(s, 2))))
'112233aabbcc'
>>> "".join(chain(*izip(*repeat(s, 3))))
'111222333aaabbbccc'
  

 Or, "I know regexes and I'll use it for everything"-style option: 

  >>> import re
>>> n = 2
>>> re.sub(".", lambda x: x.group() * n, s)  # or re.sub('(.)', r'\1' * n, s) - thanks Eduardo
'112233aabbcc'
  

 Of course, don't use these solutions in practice. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/2030081)
 Generating strings from (for example) lowercase characters: 

  import random, string

def randomword(length):
   letters = string.ascii_lowercase
   return ''.join(random.choice(letters) for i in range(length))
  

 Results: 

  >>> randomword(10)
'vxnxikmhdc'
>>> randomword(10)
'ytqhdohksy'
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/40434194)
 A https://en.wikipedia.org/wiki/One-liner_program solution that doesn't require  itertools : 

  def extendedString(a,b):
    return ''.join(x+y for x,y in zip(*(s+s[-1]*(max(len(a),len(b))-len(s)) for s in (a,b))))
  

 Output: 

  $ extendedString('abc','1234')
'a1b2c3c4'
$ extendedString('abc','12')
'a1b2c2'
  



