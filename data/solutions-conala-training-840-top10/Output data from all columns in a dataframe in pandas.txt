Query: Output data from all columns in a dataframe in pandas
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/42593121)
 You need convert  list  to  numpy array  and then https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.reshape.html: 

  df = pd.DataFrame(np.array(my_list).reshape(3,3), columns = list("abc"))
print (df)
   a  b  c
0  1  2  3
1  4  5  6
2  7  8  9
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/14717374)
 Just compare the column with that value: 

  In [9]: df = pandas.DataFrame([1,2,3,4], columns=["data"])

In [10]: df
Out[10]: 
   data
0     1
1     2
2     3
3     4

In [11]: df["desired"] = df["data"] > 2.5
In [11]: df
Out[12]: 
   data desired
0     1   False
1     2   False
2     3    True
3     4    True
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/38503561)
 Inserting  data  into a pandas dataframe and  providing column name .    

  import pandas as pd
df = pd.DataFrame([['A','C','A','B','C','A','B','B','A','A'], ['ONE','TWO','ONE','ONE','ONE','TWO','ONE','TWO','ONE','THREE']]).T
df.columns = [['Alphabet','Words']]
print(df)   #printing dataframe.
  

 This is our printed data: 

 https://i.stack.imgur.com/BuKLt.png 

 For making a   group of dataframe in pandas and counter  ,  
You need to provide one more column which counts the grouping,  let's call that column as,  "COUNTER"  in  dataframe . 

  

  df['COUNTER'] =1       #initially, set that counter to 1.
group_data = df.groupby(['Alphabet','Words'])['COUNTER'].sum() #sum function
print(group_data)
  

  OUTPUT:  

 <a href="https://i.stack.imgur.com/EpdTH.png"  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/54633986)
  

  import pandas as pd

df = pd.DataFrame({'dummy_1' : [0, 0, 0, 1, 1, 0],
                    'dummy_2' : [1, 1, 0, 0, 1, 1],
                    'dummy_3' : [1, 1, 1, 0, 0, 0]})

df['dummy_12'] = df['dummy_1']*df['dummy_2']
df['dummy_13'] = df['dummy_1']*df['dummy_3']
df['dummy_23'] = df['dummy_2']*df['dummy_3']

print(df)
  

 Output: 

      dummy_1  dummy_2  dummy_3  dummy_12  dummy_13  dummy_23                                                                                     
0        0        1        1         0         0         1                                                                                     
1        0        1        1         0         0         1                                                                                     
2        0        0        1         0         0         0                                                                                     
3        1        0        0         0         0         0                                                                                     
4        1        1        0         1         0         0                                                                                     
5        0        1        0         0         0         0    
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/29856933)
 To get the following output Dataframe, as above:  

     a    b    d
A  10   20   30
B  60   80   100
C  150  180  210
  

 ... execute the following: 

  df3 = pandas.DataFrame(df1.values*df2.values, columns=df1.columns, index=df1.index)
  

 This performs column-wise multiplication. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/46186626)
 This works for me: 

  pandas.factorize( ['B', 'C', 'D', 'B'] )[0]
  

 Output: 

  [0, 1, 2, 0]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/47705241)
  import pandas as pd

list=df.columns
df_new = pd.DataFrame()

for i in range(int(0.5*len(list))):
    df_new[list[2*i]] = (df[[list[2*i], list[2*i+1]]].mean(axis=1))
  

 Output 

         2013-01-01  2013-02-03
A         1.5         3.5
B         5.5         7.5
  

 I dont understand your Desired Output: 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/54960897)
 Use nested list comprehension with  range  and flattening for list of tuples, last use  DataFrame  constructor: 

  zipped = zip(df['id'], df['start'], df['end'])

df = pd.DataFrame([(i, y) for i, s, e in zipped for y in range(s, e+1)],
                   columns=['id','number'])
print (df)
   id  number
0   1     101
1   2     102
2   2     103
3   2     104
4   3     108
5   3     109
  



