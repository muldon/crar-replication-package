Query: get item's position in a list
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/10125837)
 Here is another way to do this: 

  try:
   id = testlist.index('1')
   print testlist[id]
except ValueError:
   print "Not Found"
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/364641)
 Use enumerate: 

  testlist = [1,2,3,5,3,1,2,1,6]
for position, item in enumerate(testlist):
    if item == 1:
        print position
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/8309441)
  pos = mylist.index(max(mylist))
  

 This includes all internal python logic - Therefore the best possible implementation. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/853055)
 It looks likes you want, for a list of sublists and a given item, to return a list of pairs where each pair is (the index of the sublist, the index of the item within the sublist). You can do that using http://docs.python.org/tutorial/datastructures.html#list-comprehensions and Python's built in http://docs.python.org/library/functions.html#enumerate function: 

  def getPosition(list, item):
    return [(i, sublist.index(item)) for i, sublist in enumerate(list)]
  

  Edit:  See @scribble's answer above/below. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/853189)
 If you don't want a exception if the item is not in the list try this. . 

  xs = [['1', '2', '4', '6'], ['7', '0', '1', '4']]
def get_positions(xs, item):
    for i, xt in enumerate( xs ):
        try: # trying beats checking
            yield (i, xt.index(item))
        except ValueError: 
            pass

print list(get_positions(xs, '1'))
print list(get_positions(xs, '6'))

# Edit for fun: The one-line version, without try:

get_positions2 = lambda xs,item: ((i,xt.index(item)) for  i, xt in enumerate(xs) if item in xt)

print list(get_positions2(xs, '1'))
print list(get_positions2(xs, '6'))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/13167889)
 Copy your  List  to  List_copy .
Retrieve the highest value and get its position by: 

  Highest_value = max(List_copy)
Highest_position = List_copy.index(max(List_copy))
  

 Assign  0  to the  Highest_value . 

  List_copy[Highest_position] = 0
  

 And run your line again. 

  Second_Highest = max(List_copy)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/364638)
  for i in xrange(len(testlist)):
  if testlist[i] == 1:
    print i
  

 xrange instead of range as requested (see comments). 



