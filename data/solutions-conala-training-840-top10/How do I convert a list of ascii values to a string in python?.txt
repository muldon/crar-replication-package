Query: How do I convert a list of ascii values to a string in python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/184708)
  import array
def f7(list):
    return array.array('B', list).tostring()
  

 from http://www.python.org/doc/essays/list2str.html 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/180615)
 You are probably looking for 'chr()': 

  >>> L = [104, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100]
>>> ''.join(chr(i) for i in L)
'hello, world'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/31800289)
 def working_ascii():
    """
        G    r   e    e    t    i     n   g    s    !
        71, 114, 101, 101, 116, 105, 110, 103, 115, 33
    """ 

  hello = [71, 114, 101, 101, 116, 105, 110, 103, 115, 33]
pmsg = ''.join(chr(i) for i in hello)
print(pmsg)

for i in range(33, 256):
    print(" ascii: {0} char: {1}".format(i, chr(i)))
  

 working_ascii() 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/181057)
 Same basic solution as others, but I personally prefer to use map instead of the list comprehension: 

  
>>> L = [104, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100]
>>> ''.join(map(chr,L))
'hello, world'
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/3256017)
 Do you mean the ascii values? 

  nums = [d(c) f c in mystring]
  

  

  nums = []
f chr in mystring:
    nums.append(d(chr))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/18272133)
 Encode each value in the list to a string: 

  [x.encode('UTF8') for x in EmployeeList]
  

 You need to pick a valid encoding; don't use  str()  as that'll use the system default (for Python 2 that's ASCII) which will not encode all possible codepoints in a Unicode value. 

 UTF-8 is capable of encoding all of the Unicode standard, but any codepoint outside the ASCII range will lead to multiple bytes per character. 

 However, if all you want to do is test for a specific string, test for a  unicode  string and Python won't have to auto-encode all values when testing for that: 

  u'1001' in EmployeeList.values()
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/7362985)
 One liner: 

  a = "1a2b3c"
print ''.join(chr(int(a[i] + a[i+1], 16)) for i in xrange(0, len(a), 2))
  

  

  xrange(0, len(a), 2) # gives alternating indecis over the string
a[i] + a[i+1]        # the pair of characters as a string
int(..., 16)         # the string interpreted as a hex number
chr(...)             # the character corresponding to the given hex number
''.join()            # obtain a single string from the sequence of characters
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/8452992)
 You can use a list comprehension: 

  >>> s = 'hi'
>>> [ord(c) for c in s]
[104, 105]
  



