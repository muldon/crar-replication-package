Query: Get all object attributes
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/53820171)
 You can use  dir(your_object)  to get the attributes and  getattr(your_object, your_object_attr)  to get the values 

 usage : 

  for att in dir(your_object):
    print (att, getattr(your_object,att))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/39392891)
 I use  __dict__  

  Example : 

  class MyObj(object):
  def __init__(self):
    self.name = 'Chuck Norris'
    self.phone = '+6661'

obj = MyObj()
print(obj.__dict__)

# Output:  
# {'phone': '+6661', 'name': 'Chuck Norris'}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/53820273)
 You can use  dir(your_object)  to get the attributes and  getattr(your_object, your_object_attr)  to get the values 

 usage : 

  for att in dir(your_object):
    print (att, getattr(your_object,att))
  

 This is particularly useful if your object have no __dict__. If that is not the case you can try var(your_object) also 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/6886507)
 Use the built-in function http://docs.python.org/library/functions.html#dir. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/31368099)
 Use  vars  

  for property, value in vars(your_class).iteritems():
    print(property, ":", value)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/2827681)
 as http://docs.python.org/py3k/library/functions.html#object: 

 
    Note :  object  does  not  have a  __dict__ , so you canâ€™t assign arbitrary attributes to an instance of the  object  class. 
 

 You could just use dummy-class instance. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/11093436)
 List comprehension is what you're after: 

  list_of_objects = [Object_1, Object_2, Object_3]
[x.time for x in list_of_objects]
  



