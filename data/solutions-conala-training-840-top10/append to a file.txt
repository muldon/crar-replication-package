Query: append to a file
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9297587)
 Use mode  a  instead of  w  to append to the file: 

  with open('text.txt', 'a', encoding='utf-8') as file:
    file.write('Spam and eggs!')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/50268376)
 You can read the lines and put them in a list. Then you open the same file with write mode and write each line with the string you want to append. 

  filepath = "hole.txt"
with open(filepath) as fp:
    lines = fp.read().splitlines()
with open(filepath, "w") as fp:
    for line in lines:
        print(line + "#", file=fp)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/50268395)
 Assuming you can load the full text in memory, you could open the file, split by row and for each row append the '#'. Then save :-) : 

  with open(filepath, 'r') as f:     # load file
    lines = f.read().splitlines()  # read lines

with open('new_file.txt', 'w') as f: 
    f.write('\n'.join([line + '#' for line in lines]))  # write lines with '#' appended
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/41382974)
 when we using this line  open(filename, "a") , that  a  indicates the appending the file, that means allow to insert extra data to the existing file. 

 You can just use this following lines to append the text in your file 

  def FileSave(filename,content):
    with open(filename, "a") as myfile:
        myfile.write(content)

FileSave("test.txt","test1 \n")
FileSave("test.txt","test2 \n")
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/26833243)
  

  f = open('filename.txt', 'a')
f.write("stuff")
f.close()
  

 It's simple, but very useful. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/53862966)
 if you want to append to a file  

  with open("test.txt", "a") as myfile:
    myfile.write("append me")
  

 We declared the variable  myfile  to open a file named  test.txt . Open takes 2 arguments, the file that we want to open and a string that represents the kinds of permission or operation we want to do on the file  

 here is file mode options 

 
Mode    Description

'r' This is the default mode. It Opens file for reading.
'w' This Mode Opens file for writing. 
If file does not exist, it creates a new file.
If file exists it truncates the file.
'x' Creates a new file. If file already exists, the operation fails.
'a' Open file in append mode. 
If file does not exist, it creates a new file.
't' This is the default mode. It opens in text mode.
'b' This opens in binary mode.
'+' This will open a file for reading and writing (updating)
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/11847034)
 To append at the end of the file, you don't need to "iterate" over it â€“ simply open it in append mode: 

  with open("my_file", "a") as f:
    f.write("another line\n")
  

 Iterating over files can be used to  read  them, not to  write  them. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/5390393)
  list.append  doesn't return anything in Python: 

  >>> l = [1, 2, 3]
>>> k = l.append(5)
>>> k
>>> k is None
True
  

  

  >>> k = [1, 2, 3] + [5]
>>> k
[1, 2, 3, 5]
>>> 
  

 Or, in your code: 

  files = [file for file in ['default.txt'] + sys.argv[1:] if os.path.exists(file)]
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/46402529)
 I think you need http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html with http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.append.html, then http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop_duplicates.html and last http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html: 

  pd.read_csv('file').append(df).drop_duplicates().to_csv('file')
  



