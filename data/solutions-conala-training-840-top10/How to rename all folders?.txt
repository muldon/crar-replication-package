Query: How to rename all folders?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/45698590)
 This will rename files in subdirectories too: 

  import os
rootdir = "foo" + os.sep + "bar"
for subdir, dirs, files in os.walk(rootdir):
    for file in files:
        filepath = subdir + os.sep + file
        foldername = subdir.split(os.sep)[-1]

        number = ""
        foundnumber = False

        for c in filepath:
            if c.isdigit():
                foundnumber = True
                number = number + c
            elif foundnumber:
                break
        if foundnumber:
            newfilepath = filepath.replace(number,foldername)
            os.rename(filepath, newfilepath)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/38907763)
 Have a look at  os.walk  

  import os
for dir, subdirs, files in os.walk("."):
    for f in files:
        f_new = f + 'bak'
        os.rename(os.path.join(root, f), os.path.join(root, f_new))
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/38948934)
 You can use https://docs.python.org/3.5/library/os.html#os.walk to iterate over the directories and then https://docs.python.org/3.5/library/os.html#os.rename to rename all the files: 

  from os import walk, path, rename

for dirpath, _, files in walk('parent'):
    for f in files:
        rename(path.join(dirpath, f), path.join(dirpath, path.split(dirpath)[-1] + '_' + f))
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/30766452)
 You don't need all the lists, just rename all files on the fly. 

  import sys, os, glob

newnames = ["North", "South", "East", "West"]

for folder_name in glob.glob(sys.argv[1]):
    for new_name, old_name in zip(newnames, sorted(os.listdir(folder_name))):
       os.rename(os.path.join(folder_name, old_name), os.path.join(folder_name, new_name))
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/47105286)
 The Easiest and Cleanest, Iterate through all the files and rename with index. 

  import os
os.getcwd()
collection = "C:/darth_vader"
for i, filename in enumerate(os.listdir(collection)):
    os.rename("C:/darth_vader/" + filename, "C:/darth_vader/" + str(i) + ".jpg")
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/18805442)
 This shows how to sequence all files in a directory. For example, if the directory has 50 files, it will rename them 0-49. You can also loop through your folder names using some iterator as follows: 

  import os
for dirname in os.listdir("."):
    if os.path.isdir(dirname):
        for i, filename in enumerate(os.listdir(dirname)):
            os.rename(dirname + "/" + filename, dirname + "/" + str(i) + ".bmp")
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/18805599)
 You could use os.walk: 

  for root, dirs, files in os.walk(folder):
    for i,f in enumerate(files):
        absname = os.path.join(root, f)
        newname = os.path.join(root, str(i))
        os.rename(absname, newname)
  

 This should do exactly what you wanted. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/22176003)
 Use  os.walk . Give it a root directory path and it will recursively iterate over it. Do something like  

  for root, dirs, files in os.walk('root path'):
    for dir in dirs:
        if dir.endswith(' ') or dir.endswith('.'):
            os.rename(...)
  

  EDIT:  

 We should actually rename the leaf directories first - here is the workaround: 

  alldirs = []
for root, dirs, files in os.walk('root path'):
    for dir in dirs:
        alldirs.append(os.path.join(root, dir))

# the following two lines make sure that leaf directories are renamed first
alldirs.sort()
alldirs.reverse()

for dir in alldirs:
    if ...:
        os.rename(...)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/43902649)
  

  import os
import pathlib

OLD_DIR = 'files'
NEW_DIR = 'new_dir'

p = pathlib.Path(OLD_DIR)
for f in p.glob('**/*.xml'):
    new_name = '{}_{}'.format(f.parent.name, f.name)
    f.rename(os.path.join(NEW_DIR, new_name))
  

 If you don't have a modern version of Python (3.5+) you can also just use glob, os, and shutil: 

  import os
import glob
import shutil


for f in glob.glob('files/**/*.xml'):
    new_name = '{}_{}'.format(os.path.basename(os.path.dirname(f)), os.path.basename(f))
    shutil.move(f, os.path.join('new_dir', new_name))
  



