Query: How to check if type of a variable is string?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/26828432)
 In Python 3.x or Python 2.7.6 

  if type(x) == str:
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30814375)
 To test whether myvar is a string, can also use this: 

  if type(myvar) == str
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/30586306)
 Python 2 / 3 including unicode 

  from __future__ import unicode_literals
from builtins import str  #  pip install future
isinstance('asdf', str)   #  True
isinstance(u'asdf', str)  #  True
  

 http://python-future.org/overview.html 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/19469874)
 Also I want notice that if you want to check whether the type of a variable is a specific kind, you can compare the type of the variable to the type of a known object. 

 For string you can use this 

  type(s) == type('')
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/4847186)
 The type module also exists if you are checking more than ints and strings. 
http://docs.python.org/library/types.html 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/38813715)
  

  var = 1
if type(var) == int:
   print('your variable is an integer')
  

  

  var2 = 'this is variable #2'
if type(var2) == str:
    print('your variable is a string')
else:
    print('your variable IS NOT a string')
  

 hope this helps! 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/38854718)
  a = '1000' # also tested for 'abc100', 'a100bc', '100abc'

isinstance(a, str) or isinstance(a, unicode)
  

 returns True 

  type(a) in [str, unicode]
  

 returns True 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/38852224)
 So, 

 You have plenty of options to check whether your variable is string or not: 

  a = "my string"
type(a) == str # first 
a.__class__ == str # second
isinstance(a, str) # third
str(a) == a # forth
type(a) == type('') # fifth
  

 This order is for purpose.  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/4843178)
 In Python 2.x, you would do 

  isinstance(s, basestring)
  

  basestring  is the https://docs.python.org/2/library/functions.html#basestring of  str  and  unicode . It can be used to test whether an object is an instance of  str  or  unicode . 

 

 In Python 3.x, the correct test is 

  isinstance(s, str)
  

 The  bytes  class isn't considered a string type in Python 3. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/47079734)
 Please note, should you wanted to check your var type in if statement, the construct
 if type(varname) == "tuple":  won't work. But these will: 

  if type(varname) is tuple:
if type(varname) is list:
if type(varname) is dict:
if type(varname) is int:
if type(varname) is str:
  



