Query: How to access a tag called "name" in BeautifulSoup
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/14435491)
  

  from bs4 import BeautifulSoup as BS
soup = '<contact><name>Yesügey</name><lastName>Yeşil</lastName><phone>+90 333 9695395</phone></contact>'
soup = BS(soup)
print soup.find('name').string
# Prints YesĂźgey
  

 So instead of calling the name tag, I simply find it and get what's inside it :). 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30994054)
 http://www.crummy.com/software/BeautifulSoup/bs4/doc/#attributes: 

 
   A tag may have any number of attributes. You can access a tag’s
  attributes by treating the tag like a dictionary. 
 

  from bs4 import BeautifulSoup

soup = BeautifulSoup(data)
div = soup.find("div", class_="myself", title=True)
print(div["title"])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/33095816)
 This has nothing to do with your regex but the way the http://www.crummy.com/software/BeautifulSoup/bs4/doc/#string (the  text  argument is called  string  in in Beautiful Soup 4.4.0) argument works which is that it return None if a tag contains more than one thing. 
You can use http://www.crummy.com/software/BeautifulSoup/bs4/doc/#a-function do this: 

  def in_text(tag):
    return tag.name == 'a' and 'lalala' in tag.text

soup.find_all(in_text)
  

  

  [<a>lalala <del>10</del> lalala  ]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/50890712)
 According to the Beautiful Soup https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find 

 Since you need to find a tag within the parent, you may use <b>find</b> which allows finding a single instance of a tag. 

  

  >>> soup.item.find('name')
<name>processor</name>
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/52659852)
 Looks like you need  findNext  method. 

    

  from bs4 import BeautifulSoup


html = """<div class = "some class">
    <h4>X1</h4>
    www.someurl.com
</div>"""

soup = BeautifulSoup(html, "html.parser")
for tag in soup.find_all("h4", text="X1"):     #Find all h4 with required text. 
    print(tag.findNext("a").text)
  

  Output:  

 <code
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/45780504)
 You're looking for  tag.find_all : 

  mylist = soup.find_all('span', class_='bg_low2 bold')
  

 Now,  mylist  contains all your  span  tags, and you can access the i<sup>th</sup>  span 's data with  mylist[i]. . 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50780537)
  soup.find_all()  returns all the meal XML tags, and not the meal names as you would expect. For each meal tag that is found, you need to independently search for the  Name  tag inside: 

  meal_tag_list = b.find_all(attrs={'refs':'Meal'})
for meal_tag in meal_tag_list:
    meal_name = meal_tag.find("Name").text
    print(meal_name)
  

 If you want to extract the descriptions, you can use a similar approach: 

  meal_tag_list = b.find_all(attrs={'refs':'Meal'})
for meal_tag in meal_tag_list:
    description_tag_list = meal_tag.find("Descriptions")
    for description_tag in description_tag_list:
        description_text = description_tag.find("Text").text
        print(description_text)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/36624774)
 What you are wanting to list are called attributes not tags.  To access a tags attributes use the .attr value. 

 Use below as shown: 

  from bs4 import BeautifulSoup

contents = '<q tag1 tag2>Quote1</q>dome other text<q tag1 tag3>quote2</q>'

soup = BeautifulSoup(contents)

for tag in soup.findAll('q'):
    print(tag.attrs)
    print(tag.contents)
print('Finished')
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/7231860)
  s = BeautifulSoup(...)
s.find(text='Lets go somewhere')
  

 You can also use regex. 

 https://stackoverflow.com/questions/866000/using-beautifulsoup-to-find-a-html-tag-that-contains-certain-text 

  Edit: While the find method prints a string if you use it on the command line, that's actually just a representation of the object it returns; you can access the parent attribute on it to access its BeautifulSoup tag object.  



