Query: Python - Get Yesterday's date as a string in YYYY-MM-DD format
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/19459133)
 You have to convert your string date to python  datetime : 

  >>> from datetime import datetime, timedelta
>>> dt_str = "2013/10/11"
>>> dt = datetime.strptime(dt_str, "%Y/%m/%d")
>>> new_dt = dt + timedelta(days=1)
>>> print new_dt
 datetime.datetime(2013, 10, 12, 0, 0)
  

 If you now want to get the date as string: 

  >>> print new_dt.strftime("%Y/%m/%d")
 '2013/10/12'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/30484112)
 You Just need to subtract one day from today's date.  datetime.timedelta(1)  will gieve you a https://docs.python.org/3.5/library/datetime.html#datetime.timedelta which is a duration of one day and is subtractable from  datetime  object. Then you can use https://docs.python.org/3.5/library/datetime.html#datetime.datetime.strptime in orer to convert the date object to string based on your https://docs.python.org/3.5/library/datetime.html#strftime-and-strptime-behavior: 

  >>> from datetime import datetime, timedelta
>>> datetime.strftime(datetime.now() - timedelta(1), '%Y-%m-%d')
'2015-05-26'
  

 Note that instead of calling the  datetime.strftime  function, you can also directly use  strftime  method of  datetime  objects: 

  >>> (datetime.now() - timedelta(1)).strftime('%Y-%m-%d')
'2015-05-26'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/19459041)
  mydate  is a string.  

  from datetime import datetime
parsed_date = datetime.strptime(mydate, "%Y-%m-%d")

new_date = parsed_date + timedelta(days=1)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/40711383)
  >>> from datetime import datetime
>>> date = datetime.strptime("1/4/2014", "%m/%d/%Y")    
>>> datetime.strftime(date, "%Y-%m-%d")
'2014-01-04'
  

 https://docs.python.org/2/library/datetime.html#datetime.date.strftime  

 https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/53062398)
 Use http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.strftime.html for convert datetimes to string format: 

  df['Date'] = pd.to_datetime(df['Date']).dt.strftime('%Y/%m/%d %H:%M')

print (df)
               Date   Price
0  2018/10/29 19:30  163.09
1  2018/10/29 20:00  211.95
2  2018/10/29 20:30  205.86
3  2018/10/29 21:00  201.39
4  2018/10/29 21:30  126.68
5  2018/10/29 22:00  112.36
6  2018/10/29 22:30  120.94

print (type(df.loc[0, 'Date']))
<class 'str'>

print (df['Date'].dtype)
object
  

 So if want working with datetimeslike function, use only  to_datetime , format is  YYYY-MM-DD HH:MM:SS : 

  df['Date'] = pd.to_datetime(df['Date'])
print (df)
                 Date   Price
0 2018-10-29 19:30:00  163.09
1 2018-10-29 20:00:00  211.95
2 2018-10-29 20:30:00  205.86
3 2018-10-29 21:00:00  201.39
4 2018-10-29 21:30:00  126.68
5 2018-10-29 22:00:00  112.36
6 2018-10-29 22:30:00  120.94

print (type(df.loc[0, 'Date']))
<class 'pandas._libs.tslibs.timestamps.Timestamp'>

print (df['Date'].dtype)
datetime64[ns]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/51823047)
 Use  '%Y-%m-%d'  

  Ex:  

  import pandas as pd

df = pd.DataFrame({"Date": ["26-12-2007", "27-12-2007", "28-12-2007"]})
df["Date"] = pd.to_datetime(df["Date"]).dt.strftime('%Y-%m-%d')
print(df)
  

  Output:  

           Date
0  2007-12-26
1  2007-12-27
2  2007-12-28
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/502737)
 you first would need to convert string into datetime tuple, and then convert that datetime tuple to string, it would go like this: 

  lastconnection = datetime.strptime("21/12/2008", "%d/%m/%Y").strftime('%Y-%m-%d')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/215313)
 The easiest way is to use http://labix.org/python-dateutil.parser.parse() to parse the date string into a timezone aware datetime object, then use strftime() to get the format you want. 

  import dateutil.parser

d = dateutil.parser.parse('2008-09-26T01:51:42.000Z')
print(d.strftime('%m/%d/%Y'))  #==> '09/26/2008'
  



