Query: How to remove all the punctuation in a string? (Python)
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/16050971)
  import string

asking = "".join(l for l in asking if l not in string.punctuation)
  

 filter with http://docs.python.org/3/library/string.html#string.punctuation. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/39178095)
 https://docs.python.org/2/library/string.html#string.punctuation contains all the punctuations. Remove  @  from it. Then replace with  ''  whenever you get that punctuation string.  

  >>> import re
>>> a = string.punctuation.replace('@','')
>>> re.sub(r'[{}]'.format(a),'','The quick brown fox, like, totally jumped, @man!')
'The quick brown fox like totally jumped @man'
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/12437721)
 Modified solution from https://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python 

  import string
import re

regex = re.compile('[%s]' % re.escape(string.punctuation))
out = regex.sub(' ', "This is, fortunately. A Test! string")
# out = 'This is  fortunately  A Test  string'
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/12437738)
 This answer is for Python 2 and will only work for ASCII strings: 

 The string module contains two things that will help you: a list of punctuation characters and the "maketrans" function.  Here is how you can use them: 

  import string
replace_punctuation = string.maketrans(string.punctuation, ' '*len(string.punctuation))
text = text.translate(replace_punctuation)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/4371351)
 Use string.translate: 

  >>> import string
>>> test_case = ['hello', '...', 'h3.a', 'ds4,']
>>> [s.translate(None, string.punctuation) for s in test_case]
['hello', '', 'h3a', 'ds4']
  

 For the documentation of translate, see http://docs.python.org/library/string.html 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/5843547)
 Here is a regex to match a string of characters that are not a letters or numbers: 

  [^A-Za-z0-9]+
  

 Here is the Python command to do a regex substitution: 

  re.sub('[^A-Za-z0-9]+', '', mystring)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/43200929)
 In python3.x ,it can be done using : 

  import string
#make translator object
translator=str.maketrans('','',string.punctuation)
string_name=string_name.translate(translator)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/4371289)
  import string

print ''.join((x for x in st if x not in string.punctuation))
  

 ps st is the string. for the list is the same... 

  [''.join(x for x in par if x not in string.punctuation) for par in alist]
  

 i think works well. look at string.punctuaction: 

  >>> print string.punctuation
!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/4371272)
 To make a new list: 

  [re.sub(r'[^A-Za-z0-9]+', '', x) for x in list_of_strings]
  



