Query: Python: How to generate a 12-digit random number?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/13496227)
 There are many ways to do that: 

  import random

rnumber1 = random.randint(10**11, 10**12-1) # randint includes endpoint
rnumber2 = random.randrange(10**11, 10**12) # randrange does not

# useful if you want to generate some random string from your choice of characters
digits = "123456789"
digits_with_zero = digits + "0"

rnumber3 = random.choice(digits) + ''.join(random.choice(digits_with_zero) for _ in range(11))
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/15439939)
 If you want it as a string (for example, a 10-digit phone number) you can use this: 

  n = 10
''.join(["%s" % randint(0, 9) for num in range(0, n)])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/2673406)
 You could write yourself a little function to do what you want: 

  import random
def randomDigits(digits):
    lower = 10**(digits-1)
    upper = 10**digits - 1
    return random.randint(lower, upper)
  

 Basically,  10**(digits-1)  gives you the smallest {digit}-digit number, and  10**digits - 1  gives you the largest {digit}-digit number (which happens to be the smallest {digit+1}-digit number minus 1!). Then we just take a random integer from that range. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/25177982)
 I invite you to be careful about the random number generator you are using.
I made a test of the generated numbers distribution.
 

  import uuid
import numpy as np
import matplotlib.pyplot as plt

# Generation of 100000 numbers using the [0:8] + [0:8] technique
res1 = np.empty(shape=100000, dtype=int)
for i in xrange(res1.size):
    tmp = str(uuid.uuid4().int>>64)[0:8] + str(uuid.uuid4().int>>64)[0:8]
    res1[i] = int(tmp)

# Generation of 100000 numbers using the [0:16] technique
res2 = np.empty(shape=100000, dtype=int)
for i in xrange(res1.size):
    tmp = str(uuid.uuid4().int>>64)[0:16]
    res2[i] = int(tmp)

# Histogram plot
plt.setp(patches, 'facecolor', 'g', 'alpha', 0.75)
n, bins, patches = plt.hist(res1, 100, normed=1, histtype='stepfilled')
n, bins, patches = plt.hist(res2, 100, normed=1, histtype='stepfilled')
  

   

 As we notice, the methods are the same.
Nevertheless, the second one [0:16] can give 0 as a first digit, which make 15 digit numbers. 

 Why do not you use the function random. 

  # Generation of random numbers using `random` function
res3 = np.random.randint(1e15, 1e16, 100000)
# Plot
n, bins, patches = plt.hist(res3, 100, normed=1, histtype='stepfilled', label='randint')
  

   

 This way, you are sure to have a regular distribution of a 16 digit numbers. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/43360517)
 if you need to generate 4 digit number, just for knowledge purpose use. 

 As suggested by AChampion this solution can contain duplicates 

 
   
     
       from random import randint
      randint(1000, 9999) 
     
   
 

 Use bernie Solution to generate a random 4 digit number in which none of the digits are repeated. 

  int("".join(map(str,random.sample(range(0,9),4))))
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/40179611)
 You can use https://docs.python.org/3.5/library/random.html#random.choice to determine each digit.  choice  will give you one element from the given sequence. 

 The code could look like this: 

  import random
pin = ''.join(random.choice('0123456789') for _ in range(6))
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/43593479)
 Just loop until you have something you like: 

  import random

numbers = [0]
while numbers[0] == 0:
    numbers = random.sample(range(10), 4)

print(''.join(map(str, numbers)))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/22064711)
 Here's a solution, using random choice of characters in a string, which contains every digit except the digits you don't want. 

  import random

def randomIntWithNDigits(n):
    numbers = '12456789'
    result = ''
    for i in range(0,n):
        result+= random.choice(numbers)
    return result
  



