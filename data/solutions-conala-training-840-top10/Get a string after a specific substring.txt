Query: Get a string after a specific substring
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/51034772)
 You can use this package called "substring". Just type "pip install substring". You can get the substring by just mentioning the start and end characters/indices. 

 For example: 

  import substring

s = substring.substringByChar("abcdefghijklmnop", startChar="d", endChar="n")

print(s)
  

  Output:  

 s = defghijklmn 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/12572448)
 If you want to do this using regex, you could simply use a http://www.regular-expressions.info/brackets.html, to get the word "world" and then grab everything after, like so 

  (?:world).*
  

 The example string is tested http://rubular.com/r/u1k4Mkqbvp 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/12572391)
 The easiest way is probably just to split on your target word 

  my_string="hello python world , i'm a beginner "
print my_string.split("world",1)[1] 
  

 split takes the word(or character) to split on and optionally a limit to the number of splits. 

 In this example split on "world" and limit it to only one split. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/41626850)
 It's an old question but i faced a very same scenario, i need to split a string using as demiliter the word "low" the problem for me was that i have in the same string the word below and lower.  

 I solved it using the re module this way 

  import re

string = '...below...as higher prices mean lower demand to be expected. Generally, a high reading is seen as negative (or bearish), while a low reading is seen as positive (or bullish) for the Korean Won.'
  

 use re.split with regex to match the exact word 

  stringafterword = re.split('\\blow\\b',string)[-1]
print(stringafterword)
' reading is seen as positive (or bullish) for the Korean Won.'
  

 the generic code is: 

  re.split('\\bTHE_WORD_YOU_WANT\\b',string)[-1]
  

 Hope this can help someone! 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/12572399)
  s1 = "hello python world , i'm a beginner "
s2 = "world"

print s1[s1.index(s2) + len(s2):]
  

 If you want to deal with the case where  s2  is  not  present in  s1 , then use  s1.find(s2)  as opposed to  index . If the return value of that call is  -1 , then  s2  is not in  s1 . 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/52994179)
 You may use 

  [?&]sort_by=[^&]*$|(?<=[?&])sort_by=[^&]*&
  

 to replace with an empty string. See the https://regex101.com/r/fcwLae/1. 

 It matches 

 
  [?&]  - a  ?  or  &  
  sort_by=  - a literal substring 
  [^&]*  - 0+ chars other than  &   
  $  - end of string. 
  |  - or 
  (?<=[?&])  - a location preceded with  ?  or  &  
  sort_by=  - a literal substring 
  [^&]*  - 0+ chars other than  &   
  &  - a  &  char. 
 

 A https://ideone.com/s3PFIN: 

  key_to_remove = r'sort_by'
rx = r'[?&]{0}=[^&]*$|(?<=[?&]){0}=[^&]*&'.format(key_to_remove)
tests = ['?sort_by=name&role=user','?gender=male&sort_by=name_desc&role=user','?sort_by=name','?age=24&sort_by=fullname&gender=male','?age=24&sort_by=fullname']
for test in tests:
    print(test + " => " + re.sub(rx, "", test))
  

 Output: 

  ?sort_by=name&role=user                  => ?role=user
?gender=male&sort_by=name_desc&role=user => ?gender=male&role=user
?sort_by=name                            => 
?age=24&sort_by=fullname&gender=male     => ?age=24&gender=male
?age=24&sort_by=fullname                 => ?age=24
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/36635853)
 You can use a list comprehension within  collections.Counter : 

  >>> from collections import Counter
>>> Counter([d.rsplit('-',1)[0] for d in date_list])
Counter({'2016-03': 2, '2016-02': 2, '2016-01': 1})
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/32015550)
 This will remove all occurrences in a string 

  import re

s = "dasdasdsafs[image : image name : image]vvfd gvdfvg dfvgd"
s = re.sub(r'\[image :.*?: image\]', r'', s)
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/31500793)
 You just want the substring  after the  : , so either splitting will get us the substring or nothing will be removed if there is no  :  in the string: 

  for k,v in d.items():
    d[k] = [s.split(":", 1)[-1].lstrip() for s in v ]

print(d)
  

 Output: 

  {'E-mail': ['mail@domain.com', 'mail2@domain.com'], 'Phone': ['(111) 222-333', '(222) 333-444'], 'ID': ['1234567890'], 'Web': ['www.domain.com'], 'VAT': ['987654321'], 'Fax': ['(444) 555-666', '(777) 888-999']}
  

 Using  [-1]  as the index will mean we either get the second of two or the only string if there is nothing split. We also need to  lstrip  any leading whitespace from the substring after splitting. 

 You could also apply the same logic as you add the data to your defaultdict to  avoid having to iterate over and mutate the dict values after they have already been assigned. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/45923289)
 If you just want to get the substring from the beginning of the long string until a certain char, you can just do the following: 

  >>> ch = 'r'
>>> s = 'Hello, world!'
>>> print(s[:s.find(ch)])
#  Hello, wo
  



