Query: Python how to combine two matrices in numpy
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/20180238)
 Use http://docs.scipy.org/doc/numpy/reference/generated/numpy.concatenate.html: 

  >>> import numpy as np
>>> np.concatenate((A, B))
matrix([[ 1.,  2.],
        [ 3.,  4.],
        [ 5.,  6.]])
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/20180432)
 You can use http://docs.scipy.org/doc/numpy/reference/generated/numpy.vstack.html#numpy.vstack: 

  >>> np.vstack((A,B))
matrix([[ 1.,  2.],
        [ 3.,  4.],
        [ 5.,  6.]])
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/50386838)
 You can just use  np.array  to concatenate vectors into a matrix. 

  import numpy as np
a = np.ones(3)
b = np.ones(3) * 2
c = np.ones(3) * 3
matrix = np.array([a, b, c])
print(repr(matrix))
  

 Output: 

  array([[1., 1., 1.],
      [2., 2., 2.],
      [3., 3., 3.]])
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/50386896)
 Is this what you were looking for: 

  np.concatenate(comp_light(gray['chrome'][i],mask['chrome']) for i in range(12))
#[[ 0.44179545  0.44251159  0.78038469]
# [ 0.03981791  0.1526196   0.98748255]
# [-0.04485713  0.17308602  0.98388468]
# [-0.09494382  0.43736653  0.89425734]
# [-0.30896139  0.48596268  0.81754702]
# [-0.09564658  0.56019186  0.82282247]
# [ 0.24524103  0.40670384  0.88002774]
# [ 0.08200615  0.4203557   0.90364599]
# [ 0.20189239  0.34563383  0.91639332]
# [ 0.0855834   0.34030184  0.93641345]]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/36979007)
 If You want to work on existing array C, you could do it inplace: 

  >>> from numpy  import *
>>> A = matrix('1.0 2.0; 3.0 4.0')
>>> B = matrix('5.0 6.0')

>>> shA=A.shape
>>> shA
(2L, 2L)
>>> shB=B.shape
>>> shB
(1L, 2L)

>>> C = zeros((shA[0]+shB[0],shA[1]))
>>> C
array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.]])

>>> C[:shA[0]]
array([[ 0.,  0.],
       [ 0.,  0.]])
>>> C[:shA[0]]=A
>>> C[shA[0]:shB[0]]=B
>>> C
array([[ 1.,  2.],
       [ 3.,  4.],
       [ 0.,  0.]])
>>> C[shA[0]:shB[0]+shA[0]]
array([[ 0.,  0.]])
>>> C[shA[0]:shB[0]+shA[0]]=B
>>> C
array([[ 1.,  2.],
       [ 3.,  4.],
       [ 5.,  6.]])
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/50386892)
  import numpy as np
x=[[np.array([0.44179545, 0.44251159, 0.78038469])],
[np.array([0.03981791, 0.1526196 , 0.98748255])],
[np.array([-0.04485713,  0.17308602,  0.98388468])],
[np.array([-0.09494382,  0.43736653,  0.89425734])],
[np.array([-0.30896139,  0.48596268,  0.81754702])],
[np.array([-0.09564658,  0.56019186,  0.82282247])],
[np.array([0.24524103, 0.40670384, 0.88002774])],
[np.array([0.08200615, 0.4203557 , 0.90364599])],
[np.array([0.20189239, 0.34563383, 0.91639332])],
[np.array([0.0855834 , 0.34030184, 0.93641345])],
[np.array([0.11078827, 0.05101894, 0.99253364])],
[np.array([-0.1302858 ,  0.35921852,  0.92411453])]]
x1=np.concatenate(x,axis=0)
x1.reshape((12,3))
print(x1.shape)
  

 . All the array was stored in one list. And you can use np.concatenate() to combine. 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/28579960)
 Since the number of columns is the same of both sparse matrices you want to combine, you could try using  sparse.vstack : 

  sparse.hstack((mat1, mat2))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/14584537)
 If you are using cv2, (you will get Numpy support then), you can use Numpy function  np.hstack((img1,img2))  to do this. 

  

  import cv2
import numpy as np

# Load two images of same size
img1 = cv2.imread('img1.jpg')
img2 = cv2.imread('img2.jpg')

both = np.hstack((img1,img2))
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/50386839)
 try to create a new array before the loop like that : 

  light = []
for i in range(12):
    light.append(comp_light(gray['chrome'][i],mask['chrome']))
print(light)
  

 this way you should have all your arrays into the new light array 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/4662300)
 U can download numpy for python 3: http://sourceforge.net/projects/numpy/files/NumPy/1.5.1/numpy-1.5.1-win32-superpack-python3.1.exe/download 

 Its the best tool in the python for world for what u need 



