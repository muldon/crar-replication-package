Query: Clear text from textarea with selenium
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/26091144)
 In the most recent Selenium version, use: 

  driver.find_element_by_id('foo').clear()
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/46444357)
 It is general syntax 

  driver.find_element_by_id('Locator value').clear();
driver.find_element_by_name('Locator value').clear();
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/36614539)
 http://selenium-python.readthedocs.org/waits.html#explicit-waits until the textarea appear. 

  from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


...


url = "https://readability-score.com/"
text = "Hello hello hello, this is a test"

driver.get(url)
WebDriverWait(driver, 5).until(
    EC.presence_of_element_located((By.ID, "text_to_score"))
)  # Wait until the `text_to_score` element appear (up to 5 seconds)
driver.find_element_by_id("text_to_score").clear()
driver.find_element_by_id('text_to_score').send_keys(text)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/11836363)
 I'm using clear() in WebDriver without any hassle... 

  el = self.selenium.find_element_by_name(name)
el.clear()
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27799120)
 You can use 

   webElement.clear();
  

 If this element is a text entry element, this will clear the value. 

 Note that the events fired by this event may not be  as you'd expect. In particular, we don't fire any keyboard or mouse events. If you want to ensure keyboard events are fired, consider using something like  sendKeys(CharSequence) . E.g.:  

   webElement.sendKeys(Keys.BACK_SPACE); //do repeatedly, e.g. in while loop
  

  

   webElement.sendKeys(Keys.CONTROL + "a");
 webElement.sendKeys(Keys.DELETE);
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/8804082)
 I just found the  clear()  command - see http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#clear%28%29: 

 If this element is a text entry element, this will clear the value. Has no effect on other elements. Text entry elements are INPUT and TEXTAREA elements.  

  EDIT: 
So your approach would be: 

     element.clear();
   element.sendKeys('123.00');
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/46773859)
 As you mentioned    send_keys("TEST")   are not working, there are a couple of alternatives to send a  character sequence  to respective fields as mentioned below : 

 
  Use   Keys.NUMPAD3   [simulating   send_keys("3")  ]: 

  login.send_keys(Keys.NUMPAD3)
   
  Use  JavascriptExecutor  with   getElementById   : 

  self.driver.execute_script("document.getElementById('login_email').value='12345'")
   
  Use  JavascriptExecutor  with   getElementsById   :   

  self.driver.execute_script("document.getElementsById('login_password')[0].value='password'")
   
 

 

 Now comming to your specific issue, as you mentioned  I tried to use clear() or click() before sendkeys but nothing works correctly , so we will take help of   javascript   to   click()   on the text area to clear the  predefined text  and then use   send_keys   to populate the text field as follows: 

  self.driver.execute_script("document.getElementById('manage_description').click()")
self.driver.find_element_by_id('manage_description').send_keys("TEST")
  

 Update : 

 As you mentioned sometimes it works sometimes not, so I would suggest the following: 

 
 Induce  ExplicitWait  for  textarea  to be clickable. 
 Use   javascript   to send the  text  within the  textarea  too. 
  Your code will look like: 

  my_string = "TEST";
elem = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "manage_description")))
self.driver.execute_script("document.getElementById('manage_description').click()")
self.driver.execute_script("arguments[0].setAttribute('value', '" + my_string +"')", elem);
   
 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/20334755)
 If you show your current attempts it would be possible to fix them. Have you inspected the page's source code to make sure you're in the right frame and selecting the right element? 

 Generally speaking you can clear a textbox/textarea/whatnot by seleniums clear() function, like this: 

  1. driver.find_element_by_id("id of textbox").clear()

or 2. driver.find_element_by_css_selector("#...").clear()

etc etc
  

 If this does not work the error message generated will normally be a useful indicator at what's wrong. 

 If you however are sure you're really selecting the right element of the page, you might be doing the common mistake of trying to select something lying inside an iframe, without first having switched to this iframe. 

 This is done by: 

  driver.switch_to_frame("frame name") #switch to the iframe

#do what you want to do inside the iframe. for example: 
driver.find_element_by_id("textbox id").clear() #clear the textbox
#write something to the textbox

driver.switch_to_default_content() #switch back from the iframe when you're done
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/16640964)
 Have you tried with http://selenium-python.readthedocs.org/en/latest/api.html#module-selenium.webdriver.common.action_chains? 

  from selenium.webdriver import ActionChains
from selenium.webdriver.common.keys import Keys

driver.switch_to_frame(bodyFrame)

ActionChains(driver).send_keys(Keys.CONTROL, "a").perform()
ActionChains(driver).send_keys("Test").perform()

# alternative:
# body_ele = driver.find_element_by_xpath("//body[@role='textbox']")
# body_ele.send_keys(Keys.CONTROL, 'a')
# body_ele.send_keys("Test")
  

 In C#,  IWebElement.Clear  says "If this element is a text entry element, the Clear() method will clear the value. It has no effect on other elements. Text entry elements are defined as elements with INPUT or TEXTAREA tags.". Similarly, in https://code.google.com/p/selenium/source/browse/py/selenium/webdriver/remote/webelement.py#61, it says "Clears the text if it's a text entry element.", while in your case,  body  is not a text entry element. 



