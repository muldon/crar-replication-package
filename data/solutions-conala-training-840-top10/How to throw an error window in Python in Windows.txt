Query: How to throw an error window in Python in Windows
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/3365724)
 If you need a GUI error message, you could use http://easygui.sourceforge.net/: 

  >>> import easygui as e
>>> e.msgbox("An error has occured! :(", "Error")
  

 Otherwise a simple  print("Error!")  .  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/3365841)
 You can get a one-liner using tkinter. 

  import tkMessageBox

tkMessageBox.showerror('error title', 'error message')
  

 Here is some documentation for http://infohost.nmt.edu/tcc/help/pubs/tkinter/dialogs.html#tkMessageBox. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/3365917)
 Check out the http://wiki.python.org/moin/GuiProgramming section of the Python Wiki for info on message boxs 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3365770)
 If i recall correctly (don't have Windows box at the moment), the  ctypes  way is: 

  import ctypes
ctypes.windll.user32.MessageBoxW(None, u"Error", u"Error", 0)
  

 http://docs.python.org/release/3.0.1/library/ctypes.html is a standard module. 

 Note: For Python 3.x you don't need the  u  prefix. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/3365785)
 @Constantin is almost correct, but his example will produce garbage text.  Make sure that the text is unicode.  I.e.,  

  ctypes.windll.user32.MessageBoxW(0, u"Error", u"Error", 0)
  

 ...and it'll work fine. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/49908142)
 I know this is an old question, but I get asked this by my grad student all the time. Especially when they are copying code from the web. 

 You're almost certainly having a namespace clash.
You are doing an  import *  or importing names such as  Window, mouse, key  from pyglet and then doing an  import *  from tkinter. When using 2 graphics libraries at once, it a good idea to either deal either deal with the full namespace, e.g., referring to things like  pyglet.window.Window  or alias things, e.g.,  import pyglet.window as pw  and then using  pw.Window  or  pw.mouse . 

 The code you posted generates the same exception for me, but this version completes without an error: 

  # import pyglet
# from pyglet.gl import *
# from pyglet.window import Window, mouse, key
import tkinter  # import *  # for the subject data gui

master = tkinter.Tk()
  

  Note: I used lowercase  tkinter  because I'm using Python 3.6  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/51456736)
 This works for me with Python3 on Linux: 

  import tkinter as tk

# Create Tk window
root = tk.Tk()

# Add icon from GIF file where my GIF is called 'icon.gif' and
# is in the same directory as this .py file
root.tk.call('wm', 'iconphoto', root._w, tk.PhotoImage(file='icon.gif'))
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/18538416)
 You must not have  favicon.ico  in the same folder as your script or, namely, on your path.  Put in the full pathname.  For example, this works: 

  from tkinter import *
root = Tk()

root.iconbitmap(r'c:\Python32\DLLs\py.ico')
root.mainloop()
  

 But this blows up with your same error: 

  from tkinter import *
root = Tk()

root.iconbitmap('py.ico')
root.mainloop()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/14654287)
 You mixed up  ctypes  and  win32gui . 
The  hwnd  you've got is obtained via  ctypes  and is a  LP_c_long  object. That's why  win32gui.MoveWindow  didn't accept it.  

  ctypes.windll.user32.MoveWindow(titles[5][0], 0, 0, 760, 500, True)
  

 If you want to use  win32gui.MoveWindow , you can use python function as callback directly.   For example,  

  import win32gui

def enumHandler(hwnd, lParam):
    if win32gui.IsWindowVisible(hwnd):
        if 'Stack Overflow' in win32gui.GetWindowText(hwnd):
            win32gui.MoveWindow(hwnd, 0, 0, 760, 500, True)

win32gui.EnumWindows(enumHandler, None)
  



