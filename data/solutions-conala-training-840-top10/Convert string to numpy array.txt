Query: Convert string to numpy array
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/32155265)
 Use http://docs.scipy.org/doc/numpy/reference/generated/numpy.fromstring.html: 

  >>> s = '00101'
>>> np.fromstring(' '.join(s), sep=' ', dtype=int)
array([0, 0, 1, 0, 1])

>>> s = '00101' * 1000
>>> %timeit np.fromiter(s, dtype=int)
100 loops, best of 3: 2.33 ms per loop
>>> %timeit np.fromstring(' '.join(s), sep=' ', dtype=int)
1000 loops, best of 3: 499 Âµs per loop
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/44323021)
 Forward to string: 

  import numpy as np
def array2str(arr, precision=None):
    s=np.array_str(arr, precision=precision)
    return s.replace('\n', ',')
  

 Backward to array: 

  import re
import ast
import numpy as np
def str2array(s):
    # Remove space after [
    s=re.sub('\[ +', '[', s.strip())
    # Replace commas and spaces
    s=re.sub('[,\s]+', ', ', s)
    return np.array(ast.literal_eval(s))
  

 If you use  repr()  to convert array to string, the conversion will be trivial. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/50210642)
 This is one way to solve it: 

  import numpy as np
import re

txt = '[ 0.11591    0.044932   0.66926   -0.67844    0.47253   -0.84737\n  1.0734    -0.075396  -0.22688    0.84021   -0.46608    0.019941\n -0.0020394 -0.13038    0.8911    -0.40015    0.52048    0.69283\n -0.10257    0.54296   -0.416      0.36585    0.96078    0.50816\n  0.50144    0.66489   -0.79224    0.44567    0.90822   -0.67522\n  0.047322   0.48399   -0.53316    0.76157   -0.86072    0.091377\n  0.30159   -1.194      0.8679    -0.58691    0.48712   -0.66167\n -0.24265   -0.18849   -0.19353    0.0014832  0.88768    0.36672\n  0.16211    0.56235  ]'

txt = re.sub(r'\n','', txt)
myList = txt.split()[1:-1]
myList2 = list(map(float,myList))
n_arr = np.array(myList)
print(n_arr)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/16497843)
 I think there is an empty string( '' ) in your array. So, change your array's  ''  into  0 s.   

 Assuming your array is  a : 

  >>> a[a=='']='0'
>>> a2 = a.astype(np.float)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/13773873)
 Convert the the strings to  float128 .
 

  import numpy as np
strarray = ["535.","535.","534.68"]
floatarray = np.array(filter(None,strarray),dtype='|S10').astype(np.float128)
print floatarray
  

 Output: 

  [ 535.0  535.0  534.68]
  

 Or use the recommended  longdouble : 

  import numpy as np
strarray = ["535.","535.","534.68"]
floatarray = np.array(filter(None,strarray),dtype='|S10').astype(np.longdouble)
print floatarray
  

 Output: 

  [ 535.0  535.0  534.68]
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/34101484)
 Just turn the string into a list of strings (with  split ) and give that to  array . 

  In [21]: np.array("1,Hey,234,4456,789".split(','))
Out[21]: 
array(['1', 'Hey', '234', '4456', '789'], 
      dtype='|S4')
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/50882175)
 Numpy as can handle it much easier than all the answers: 

  s = '[ 0.  0.  1.]'
np.fromstring(s[1:-1],sep=' ').astype(int)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/41204684)
 If you have a numpy array, you can do the following: 

  >>> import numpy as np
>>> a = np.array([133, 53, 234, 241])
>>> a.astype(np.uint8).data.hex()
'8535eaf1'
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/11747162)
 You have to split the string by its commas first: 

  NP.array(v1fColor.split(","), dtype=NP.uint8)
  



