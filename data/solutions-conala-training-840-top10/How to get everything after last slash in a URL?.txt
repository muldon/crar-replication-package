Query: How to get everything after last slash in a URL?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/7253832)
 http://docs.python.org/library/stdtypes.html#str.rsplit should be up to the task: 

  In [1]: 'http://www.test.com/page/TEST2'.rsplit('/', 1)[1]
Out[1]: 'TEST2'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/49799272)
 Here's a more general, regex way of doing this: 

      re.sub(r'^.+/([^/]+)$', r'\1', url)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/3925147)
 Use https://docs.python.org/library/os.path.html#os.path.normpath, then https://docs.python.org/library/os.path.html#os.path.basename: 

  >>> os.path.basename(os.path.normpath('/folderA/folderB/folderC/folderD/'))
'folderD'
  

 The first strips off any trailing slashes, the second gives you the last part of the path. Using only  basename  gives everything after the last slash, which in this case is  '' . 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/15803460)
 urlparse is fine to use if you want to (say, to get rid of any query string parameters). 

  import urllib.parse

urls = [
    'http://www.test.com/TEST1',
    'http://www.test.com/page/TEST2',
    'http://www.test.com/page/page/12345',
    'http://www.test.com/page/page/12345?abc=123'
]

for i in urls:
    url_parts = urllib.parse.urlparse(i)
    path_parts = url_parts[2].rpartition('/')
    print('URL: {}\nreturns: {}\n'.format(i, path_parts[2]))
  

 Output: 

  URL: http://www.test.com/TEST1
returns: TEST1

URL: http://www.test.com/page/TEST2
returns: TEST2

URL: http://www.test.com/page/page/12345
returns: 12345

URL: http://www.test.com/page/page/12345?abc=123
returns: 12345
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/18918523)
  

  head, tail = os.path.split(url)
  

 Where tail will be your file name. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/7253830)
 You don't need fancy things, just see http://docs.python.org/py3k/library/stdtypes.html#str.rsplit and you can easily split your url between 'filename' part and the rest: 

  url.rsplit('/', 1)
  

 So you can get the part you're interested in simply with: 

  url.rsplit('/', 1)[-1]
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/35616485)
 Get the right-most occurence of slash; use the string slice  through  that position in the original string.  The  +1  gets you that final slash at the end. 

  link = "http://127.0.0.1/asdf/login.php"
link[:link.rfind('/')+1]
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/26008393)
 You can use matching groups in order to extract the number with the regex  \/(\d+)- : 

  import re
s = 'http://www.example.com/0/100013573/1585710-key-description-goes-here'
m = re.search(r'\/(\d+)-', s)
print m.group(1) # 1585710
  

 Check out the  http://regex101.com/r/nX9aI9/6  



