Query: selenium how to get the content of href within some targeted class
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/19664702)
 This should do it for you: 

  self.driver.find_element_by_css_selector('.someclass a').get_attribute('href')
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/19664685)
 As far as I am aware you can get the href by searching through the child elements 

  div = self.driver.find_element_by_class_name('someclass')
div.find_element_by_css_selector('a').get_attribute('href')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/36703214)
   .text  returns an empty string because the targeted element is hidden.
So you can either target the visible one holding the sales count : 

  text = driver.find_element_by_css_selector(".shop-info .shop-location + span").text
  

 Or you could directly get the  innerHTML  or  textContent  property : 

  text = driver.find_element_by_css_selector(".shop-sales").get_attribute("textContent")
text = driver.find_element_by_css_selector(".shop-sales").get_attribute("innerHTML")
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/54756258)
 The website loads content on scroll, that's why to get to the social media accounts you need to scroll to the bottom of the page.  
To wait for some conditions you have to use  WebDriverWait  and  expected_conditions , more details about waits you can find https://stackoverflow.com/questions/22656615/what-is-difference-between-implicit-wait-vs-explicit-wait-in-selenium-webdriver. 

 Here your code: 

  from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

driver = webdriver.Chrome()
wait = WebDriverWait(driver, 5)

url = "https://www.digitalrealty.com/"

driver.get(url)

#Scroll to the bottom
driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")

#Wait until presence of the facebook element. Presence of element=exist in the DOM, but can be not visible like here.
facebook = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "a[href*=facebook]")))

#Scroll to element will make element visible and we'll able to click or get text, attribute from it
driver.execute_script("arguments[0].scrollIntoView(true);", facebook)

#Wait for facebook element to be visible and click on it.
fb = wait.until(EC.visibility_of(facebook)).get_attribute("href")
print(fb)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/49838252)
 This should work with BeautifulSoup v3 and v4. 

  content = """
     
"""

soup = BeautifulSoup(content)

onclick = soup.find('img').get('onclick')

js_item = onclick.split(',')[0]

link = js_item.replace('javascript:imgPop(', '').replace("'", "")
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/54737162)
 To extract the  href  attribute of 3M's official website from https://en.wikipedia.org/wiki/3M  Selenium  itself would be sufficient and you need to induce  WebDriverWait  for the desired element to be visible and you can use the following solution: 

  website = WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.XPATH, "//th[@scope='row' and text()='Website']//following::td[1]/span/a[@class='external text']"))).get_attribute("href")
  

  Note  : You have to add the following imports : 

  from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/44217014)
 You have 2 problems: 

 
 you're trying to find  h2  elements instead of  a  
 you're trying to get attribute value from  WebDriver  instance 
 

 Try below code to get required output: 

  driver.find_element_by_css_selector('h2.post-title>a').get_attribute('href')
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/37003507)
 Not sure why would you need  BeautifulSoup  (BS) here. Selenium alone is capable of locating elements and navigating through links on a page. For example, to get all the links to the match details page you can do as follow : 

  >>> matches = driver.find_elements_by_xpath("//td[@class='match-centre']/a")
>>> print [match.get_attribute("href") for match in matches]
  

 As for navigating through the pages, you can use the following XPath : 

  //span[contains(@class,'page-numbers')]/following-sibling::a[1]
  

 The above XPath finds link to the next page. To navigate through all the pages, you can try using a  while  loop; while the link to the next page is found :  

 
 perform a click action on the link,  
 grab all the  href  from current page,  
 locate the next page link. 
 


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/54735820)
 This is a more robust xpath: 

  website = driver.find_element_by_xpath('//*[@class="url"]/a').get_attribute("href")
  

 If you know the text you can use: 

  website = driver.find_element_by_link_text('3M.com').get_attribute("href")
  

 Hope this helps you! 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/32369187)
  

  url = driver.find_element_by_class_name("_4-eo").get_attribute("href")
  

 And if you need the div element first you can do it this way: 

  divElement = driver.find_elements_by_class_name("_5cq3")
url = divElement.find_element_by_class_name("_4-eo").get_attribute("href")
  

 or another way via xpath (given that there is only one link element inside your 5cq3 Elements: 

  url = driver.find_element_by_xpath("//div[@class='_5cq3']/a").get_attribute("href")
  



