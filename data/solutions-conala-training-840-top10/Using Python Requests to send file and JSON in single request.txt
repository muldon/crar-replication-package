Query: Using Python Requests to send file and JSON in single request
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/19440099)
 I'm don't think you can send both data and files in a multipart encoded file, so you need to  make your data a "file" too: 

  files = {
    'data' : data,
    'document': open('file_name.pdf', 'rb')
}

r = requests.post(url, files=files, headers=headers)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/35946962)
 See this thread https://stackoverflow.com/questions/35939761/how-to-send-json-as-part-of-multipart-post-request#comment59538358_35939761 

   Do not set the Content-type header yourself, leave that to pyrequests to generate    

  def send_request():
payload = {"param_1": "value_1", "param_2": "value_2"}
files = {
     'json': (None, json.dumps(payload), 'application/json'),
     'file': (os.path.basename(file), open(file, 'rb'), 'application/octet-stream')
}

r = requests.post(url, files=files)
print(r.content)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/45151965)
  json.load  is not needed replace it with  data_file.read()  

  def do_GET(self):
    self._set_headers()
    with open('test.json') as data_file:    
        data = data_file.read()
    self.wfile.write(data)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/51192072)
 Try using: 

  requests.post(..., json=data)
  

 When you use  data=  requests will send it form encoded, to actually put json in the body you have to use  json=  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/24748562)
 Your problem is that you are using the image metadata as the source of key/value pairs to be posted. Instead of sending it as the value of one of those key/value pairs. 

 The following code will send a request much like the curl statement you provided: 

  url = 'my-url.com/api/endpoint'
headers = {'Authorization': 'my-api-key'}
image_metadata = {'key1': 'value1', 'key2': 'value2'}
data = {'name': 'image.jpg', 'data': json.dumps(image_metadata)}
files = {'file': (FILE, open(PATH, 'rb'), 'image/jpg', {'Expires': '0'})}
r = requests.post(url, files=files, headers=headers, data=data)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/50306113)
 You could use the requests module to send a POST request. 

  import requests


r = requests.post('https://example.com/update.php', data={'key': 'value'})
  

 The requests module will raise an error if it cannot make a secure, https connection. 

 The keys can then be accessed in PHP using: 

  $_POST['key'];
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/25583184)
 You can specify the port for the request with a colon just as you would in a browser, such as
 r = requests.get('http://localhost:4028') . This will block until a response is received, or until the request times out, so you don't need to worry about awaiting a response. 

 You can send JSON data as a POST request using the http://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests, such as 

  import json, requests
payload = {'command': 'summary'}
r = requests.post('http://localhost:4028', data=json.dumps(payload))
  

 Accessing the response is then possible with  r.text  or  r.json() . 

 Note that requests is an HTTP library - if it's not HTTP that you want then I don't believe it's possible to use requests. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/12402180)
 For anything with requests to URLs you might want to check out http://docs.python-requests.org/en/latest/user/quickstart/. For JSON in particular: 

  >>> import requests
>>> r = requests.get('https://github.com/timeline.json')
>>> r.json()
[{u'repository': {u'open_issues': 0, u'url': 'https://github.com/...
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/46265589)
 I see you are using  requests  library. From version 2.4.2 onwards, you can use  json  as parameter. It should have better json encoding than  data . 

  requests.post('https://getpocket.com/v3/send', json={
    'consumer_key': consumer_key,
    'access_token': access_token,
    'actions': [{
        'item_id':'1000000000',
        'action':'archive'
     }]
})
  

 See here for more information: http://docs.python-requests.org/en/master/user/quickstart/#more-complicated-post-requests 

 EDIT: If only  action  key should be a json string, you can try following: 

  import simplejson as json

requests.post('https://getpocket.com/v3/send', data={
        'consumer_key': consumer_key,
        'access_token': access_token,
        'actions': json.dumps([{
            'item_id':'1000000000',
            'action':'archive'
         }])
    })
  

 I would recommend  simplejson  over  json  package as it is updated more frequently. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/17735032)
 You could use http://docs.python-requests.org/en/master/user/advanced/#streaming-uploads: 

  import requests # $ pip install requests

with open("file.ova", "rb") as file:
    requests.post(url, data=file)
  



