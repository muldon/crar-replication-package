Query: Add tuple to a list of tuples
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/23319392)
 Here is the correct code: 

  >>> lst = [(1,2), (3,4), (2,1), (1,2), (2,3), (2,3)]
>>> def count(tuple, list):
...     num = 0
...     for k in list:
...             if sorted(k) == sorted(tuple):
...                     num+=1
...     return num
... 
>>> count((1, 2), lst)
3
>>> newlst = []
>>> for k in lst:
...     num = count(k, lst)
...     new = k+(num,)
...     if new not in newlst:
...             newlst.append(new)
... 
>>> newlst
[(1, 2, 3), (3, 4, 1), (2, 1, 3), (2, 3, 2)]
>>> 
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/4913418)
 . Tuples are immutable. 

 On the containing list, you could replace tuple  ('1', '2', '3', '4')  with a different  ('1', '2', '3', '4', '1234')  tuple though. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/14330498)
 if you want to remove max tuple from each list then: 

  In [17]: a=[(1,2),(4,5),(1,0)]

In [18]: a.remove(max(a, key=sum))

In [19]: a
Out[19]: [(1, 2), (1, 0)]

In [20]: b = [(3,2),(9,4),(2,2)]

In [21]: b.remove(max(b,key=sum))

In [22]: b
Out[22]: [(3, 2), (2, 2)]
  

 or if you want to remove max tuple from one and add that to next one then:: 

  In [34]: a=[(1,2),(4,5),(1,0)]

In [35]: b = [(3,2),(9,4),(2,2)]

In [36]: b.append(a.pop(a.index(max(a,key=sum))))

In [37]: b
Out[37]: [(3, 2), (9, 4), (2, 2), (4, 5)]

In [38]: a
Out[38]: [(1, 2), (1, 0)]
  

 or if you want to remove maxx tuple from each list; and then add them to another list:: 

  In [44]: maxx=[]

In [45]: a=[(1,2),(4,5),(1,0)]

In [46]: b = [(3,2),(9,4),(2,2)]

In [47]: maxx.append(a.pop(a.index(max(a,key=sum))))

In [48]: maxx.append(b.pop(b.index(max(b,key=sum))))

In [49]: a
Out[49]: [(1, 2), (1, 0)]

In [50]: b
Out[50]: [(3, 2), (2, 2)]

In [51]: maxx
Out[51]: [(4, 5), (9, 4)]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/53984423)
 If you are only adding a single element, use 

  a += (5, )
  

  

  a = (*a, 5)
  

 Tuples are immutable, so adding an element will mean you will need to create a new tuple object. I would not recommend casting to a list unless you are going to add many elements in a loop, or such. 

  a_list = list(a)
for elem in iterable:
    result = process(elem)
    a_list.append(result)

a = tuple(a_list)
  

 

 If you want to insert an element in the middle, you can use: 

  m = len(a) // 2
a = (*a[:m], 5, *a[m:])
  

   

  a = a[:m] + (5, ) + a[m:]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/10301630)
 Just map your key to a list, and append tuples to the list. 

  d = {'Key1': [(1.000,2.003,3.0029)]}
  

 .. 

  d['Key1'].append((2.3232,13.5232,1325.123))
  

  

  {'Key1': [(1.0, 2.003, 3.0029), (2.3232, 13.5232, 1325.123)]}
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/1785004)
 You can't change a tuple itself. You have to replace it by a different tuple. 

 When you use a list, you could also add values to it (changing the list itself) without need to replace it: 

  >> a = {'list': (23, 32)}
>> a
{'list': [23, 32]}
>> a['list'].append(99)
>> a
{'list': [23, 32, 99]}
  

 In most cases, lists can be used as replacement for tuples (since as much I know they support all tuple functions -- this is duck typing, man!) 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/10301693)
 I think your questions is somewhat badly formulated. You want to: 

 
 Associate a tuple to a key, if the key is not in the dictionary 
 Replace the tuple with a list of two tuples, if the key is in the dictionary and points to a tuple 
 Append a tuple to the list of tuples associated to a key 
 

 This could be achieved with the following code: 

  def insertTuple(d, k, tup):
    if k not in d:
        d[k] = tup
    elif type(d[k]) == tuple:
        d[k] = [ d[k], tup ]
    else:
        d[k].append(tup)
  


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/5579450)
 tuples are immutable so you need to make a new tuple 

  a=([1],[1,2])
b=a+([],)
  



