Query: datetime.datetime.now() + 1
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2238053)
 you need to use http://docs.python.org/library/datetime.html#datetime.date.today or  datetime.now().date()  instead of  datetime.now : 

  >>> import datetime
>>> datetime.date.today()
datetime.date(2010, 2, 10)
>>> datetime.datetime.now().date()
datetime.date(2010, 2, 10)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/41839508)
 Don't forget to import Datetime 

  import datetime
dt=str(datetime.datetime.now().date())
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/15511621)
 You can use  datetime.timedelta : 

  now = datetime.datetime.now()
yesterday = now - datetime.timedelta(days=1)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/43816535)
 Your call is to  datetime.datetime.now().time()  

 Notice the difference between that, and  datetime.datetime.now()  

  >>> datetime.datetime.now().time()
datetime.time(22, 45, 48, 610362)
>>> datetime.datetime.now()
datetime.datetime(2017, 5, 5, 22, 45, 57, 874420)
  

 You want to remove the  .time()  portion in your  .format() .  

  >>> print('{}'.format(datetime.datetime.now().strftime('%x %X')))
05/05/17 22:47:30
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/49819992)
 From the https://docs.python.org/2/library/datetime.html: 

 
  datetime.now() : returns the current  local  date and time. 
  datetime.utcnow() : returns the current UTC date and time [...]. This is like  now() , but returns the current UTC date and time, as a naive  datetime  
 

 Just an example: 

 Offset 

  In [1]: datetime.datetime.now()
Out[1]: datetime.datetime(2018, 4, 13, 17, 8, 4, 457551)

In [2]: datetime.datetime.utcnow()
Out[2]: datetime.datetime(2018, 4, 13, 15, 8, 5, 385598)
  

 No offset 

  In [3]: datetime.datetime.now(tz=pytz.utc)
Out[3]: datetime.datetime(2018, 4, 13, 15, 8, 59, 590874, tzinfo=<UTC>)

In [4]: datetime.datetime.utcnow()
Out[4]: datetime.datetime(2018, 4, 13, 15, 9, 1, 494370)
  


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/1688738)
 Use  timedelta  in the  datetime  module: 

  import datetime
now = datetime.datetime.now()
past = now - datetime.timedelta(hours=10)
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/19779811)
>Use  timedelta : 

re> datetime.datetime.now() - datetime.timedelta(days=1)
  

 



