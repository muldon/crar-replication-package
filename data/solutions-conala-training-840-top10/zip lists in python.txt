Query: zip lists in python
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/50237138)
 I don't think  zip  returns a list.  zip  returns a generator. You have got to do  list(zip(a, b))  to get a list of tuples. 

  x = [1, 2, 3]
y = [4, 5, 6]
zipped = zip(x, y)
list(zipped)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/5938825)
 You can use  *  to http://docs.python.org/dev/tutorial/controlflow.html#unpacking-argument-lists a list into positional parameters: 

  zip(assignment, *grades)
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/24844077)
 Basically the zip function works on lists, tuples and dictionaries in Python.
If you are using IPython then just type zip? And check what zip() is about. 

 If you are not using IPython then just install it: "pip install ipython" 

 For lists 

  a = ['a', 'b', 'c']
b = ['p', 'q', 'r']
zip(a, b)
  

 The output is  [('a', 'p'), ('b', 'q'), ('c', 'r')  

 For dictionary: 

  c = {'gaurav':'waghs', 'nilesh':'kashid', 'ramesh':'sawant', 'anu':'raje'}
d = {'amit':'wagh', 'swapnil':'dalavi', 'anish':'mane', 'raghu':'rokda'}
zip(c, d)
  

 The output is: 

  [('gaurav', 'amit'),
 ('nilesh', 'swapnil'),
 ('ramesh', 'anish'),
 ('anu', 'raghu')]
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/7474788)
 You want to combine the sublists with the plus operator, and iterate over them in a list comprehension: 

  Lmerge = [i1 + i2 for i1, i2 in zip(L1, L2)]
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/12710694)
 And yet another: 

  map(lambda t, e: t + (e,), a, b)
  

 No need to zip and unpack;  map  can take both lists at once. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/26958771)
 To  zip  some number of slice  []int  lists, 

  package main

import "fmt"

func zip(lists ...[]int) func() []int {
    zip := make([]int, len(lists))
    i := 0
    return func() []int {
        for j := range lists {
            if i >= len(lists[j]) {
                return nil
            }
            zip[j] = lists[j][i]
        }
        i++
        return zip
    }
}

func main() {
    a := []int{1, 2, 3}
    b := []int{4, 5, 6}
    c := []int{7, 8, 9, 0}
    iter := zip(a, b, c)
    for tuple := iter(); tuple != nil; tuple = iter() {
        fmt.Println("tuple:", tuple)
    }
}
  

 Output: 

 
tuple: [1 4 7]
tuple: [2 5 8]
tuple: [3 6 9]
 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/19718470)
 More  zip ! 

  lists = [mylist1, mylist2, mylist3]
selected_lists = (b for a, b in zip(selected, lists) if a)
result = zip(*selected_lists) # itertools if necessary
  



