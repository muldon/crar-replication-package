Query: Remove specific characters from a string
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/904753)
 Without a RE (which I assume is what you want): 

  def remafterellipsis(text):
  where_ellipsis = text.find('...')
  if where_ellipsis == -1:
    return text
  return text[:where_ellipsis + 3]
  

  

  import re

def remwithre(text, there=re.compile(re.escape('...')+'.*')):
  return there.sub('', text)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/51323071)
 You have to reassign your str variable: 

  for char in line:
if char in " ?.!/;:":
    line = line.replace(char,'')
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/51343967)
 You can use  re.sub  to do this 

  >>> import re
>>> my_string = "This is an example string, ex , excatly , index , hyperextension"
>>> re.sub('(?:\s)ex[^, ]*', '', my_string)
'This is an string, , , index , hyperextension'
  



