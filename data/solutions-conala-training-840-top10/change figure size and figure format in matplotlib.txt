Query: change figure size and figure format in matplotlib
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/17109830)
 You can set the figure size if you explicitly create the figure with 

  plt.figure(figsize=(3,4))
  

 To change the format of the saved figure just change the extension in the file name. However I don't know if any of matplotlib backends support tiff 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/45629450)
 You can change the size of the plot by adding this 

  plt.rcParams["figure.figsize"] = [16,9]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/52775058)
 If you need to change the figure size  after  you have created it, use the methods 

  fig = plt.figure()
fig.set_figheight(value_height)
fig.set_figwidth(value_width)
  

 where  value_height  and  value_width  are in inches. For me this is the most practical way. 


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/50671064)
 first import matplotlib and use it to set the size of the figure 

  from matplotlib import pyplot as plt
import seaborn as sns

plt.figure(figsize=(15,8))
ax = sns.barplot(x="Word", y="Frequency", data=boxdata)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/17109681)
 The first part (setting the output size explictly) isn't too hard: 

  import matplotlib.pyplot as plt
list1 = [3,4,5,6,9,12]
list2 = [8,12,14,15,17,20]
fig = plt.figure(figsize=(4,3))
ax = fig.add_subplot(111)
ax.plot(list1, list2)
fig.savefig('fig1.png', dpi = 300)
fig.close()
  

 But after a quick google search on matplotlib + tiff, I'm not convinced that matplotlib can make  tiff  plots.  There is some mention of the http://matplotlib.org/faq/usage_faq.html#what-is-a-backend being able to do it. 

 One option would be to convert the output with a tool like imagemagick's  convert . 

 (Another option is to wait around here until a https://stackoverflow.com/users/325565/joe-kington shows up and proves me wrong ;-) 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/24811670)
 The figure object has a default size that does not know about the number of subplots.  You can change the figure size when you make the figure to suit your needs though.  

  import matplotlib.pyplot as plt

nx = 3
ny = 1

dxs = 8.0
dys = 6.0

fig, ax = plt.subplots(ny, nx, sharey = True, figsize=(dxs*nx, dys*ny) )
for i in range(nx):
    ax[i].plot([1, 2], [1, 2])
  


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/28575650)
 For all backends, the window size is controlled by the  figsize  argument. 

 For example: 

  import matplotlib.pyplot as plt

fig, axes = plt.subplots(5, 5, figsize=(12, 10))
plt.show()
  

 If you're creating the figure and subplots separately, you can specify the size to  plt.figure  (This is exactly equivalent to the snippet above): 

  import matplotlib.pyplot as plt

fig = plt.figure(figsize=(12, 10))
for i in range(1, 26):
    fig.add_subplot(5, 5, i)
plt.show()
  

 In general, for any matplotlib figure object, you can also call  fig.set_size_inches((width, height))  to change the size of the figure. 


-------------------------------------next answer-------------------------------------

Rank:8 (https://stackoverflow.com/questions/22399608)
 Try commenting out the  fig = ...  line 

  %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt

N = 50
x = np.random.rand(N)
y = np.random.rand(N)
area = np.pi * (15 * np.random.rand(N))**2

fig = plt.figure(figsize=(18, 18))
plt.scatter(x, y, s=area, alpha=0.5)
plt.show()
  


-------------------------------------next answer-------------------------------------

Rank:9 (https://stackoverflow.com/questions/24073700)
 Please try a simple code as following: 

  from matplotlib import pyplot as plt
plt.figure(figsize=(1,1))
x = [1,2,3]
plt.plot(x, x)
plt.show()
  

 You need to set the figure size before you plot. 


-------------------------------------next answer-------------------------------------

Rank:10 (https://stackoverflow.com/questions/44724515)
 You don't want to change the figure size. You want to change the dpi (dots per inch). 
Also see https://stackoverflow.com/questions/47633546/relationship-between-dpi-and-figure-size?noredirect=1&lq=1. 

  import matplotlib.pyplot as plt
%matplotlib inline

def plot(dpi):
    fig, ax=plt.subplots(dpi=dpi)
    ax.plot([2,4,1,5], label="Label")
    ax.legend()

for i in range(1,4):
    plot(i*72)
  

 https://i.stack.imgur.com/R6UzJ.png 



