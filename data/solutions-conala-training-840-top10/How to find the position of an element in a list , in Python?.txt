Query: How to find the position of an element in a list , in Python?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/7532611)
 If you know what you're looking for ahead of time you can use the index method: 

  >>> stocks_list = ['AAPL', 'MSFT', 'GOOG']
>>> stocks_list.index('MSFT')
1
>>> stocks_list.index('GOOG')
2
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/54861062)
 Find the position of the keyword: 

  kw = extract.index("keyword")
  

 Find the element with the largest index that contains an  "="  in the sublist of the original list before the position of the keyword: 

  eq = max(i for i,w in enumerate(extract[:kw]) 
         if isinstance(w,str) and "=" in w)
  

 Find the element with the smallest index that contains a  ";"  in the sublist from the previous element to the end: 

  semi = min(i for i,w in enumerate(extract[eq:], eq) 
           if isinstance(w,str) and ';' in w)
  

 Extract the sublist between the two extremes: 

  extract[eq:semi+1]
#['3=', 'fd', 'dfdf', 'keyword', 'ssd', 'sdsd', ';']
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/24628856)
 Use https://docs.python.org/2/library/functions.html#enumerate. It returns both the position and the item: 

  def checkLen():
    days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    for position, day in enumerate(days):
        if day == "Monday":
            print("Found it")
            print(position)
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/24628989)
 Lists have an index method that you can use 

  def checkLen(): 
     days = ["Monday", "Tuesday", "Wednesday", "Thursday" "Friday", "Saturday", "Sunday"]
     try:
         position = days.index("Monday")
         print("Found it") 
     except ValueError:
         position = None # or 0 if you want
         print("Not present") 
     print(position)
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/4772404)
 . 

 If you just want to find index of first occurrence of specific element, you should use http://docs.python.org/tutorial/datastructures.html#more-on-lists method: 

  index = s.index(3)
  

 But if you  

 
   want to find a number that appears
  more than once in the list 
 

 in general (without element value given), seems you can 

 
 either do simple O(N^2) search in array (check all elements of the list for each element, till duplication is found) 
 or do sort, find duplicated element in sorted list and then find index of duplicated element in the original array with list.index() method - this will take O(N*log(N)) because of sort. 
 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/3989029)
  a.index(max(a))
  

 will tell you the index of the first instance of the largest valued element of list  a . 


-------------------------------------next answer-------------------------------------

Rank:7 (https://stackoverflow.com/questions/24628898)
   def checkLen():
    days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    if "Monday" in days:
        print "found"
        print days.index("Monday")
  

 you dont need to loop the days . just use  in  if it is found then  index  



