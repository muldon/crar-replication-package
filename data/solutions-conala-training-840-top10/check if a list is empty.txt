Query: check if a list is empty
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/54458718)
 Check if:  len(list) == 0  returns:  True  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/53787071)
 Use any() function. This return True if exist a element in the list different an empty list. 

  alist = [[],[]]
if not any(alist):
    print("Empty list!")

>> Empty list!
  

 see: https://www.programiz.com/python-programming/methods/built-in/any 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/23814388)
 You can just check if there is the element  ''   in the list: 

  if '' in lst:
     # ...

if '' in lst[:1]:  # for your example
     # ...
  

 Here is an example: 

  >>> lst = ['John', '', 'Foo', '0']
>>> lst2 = ['John', 'Bar', '0']
>>> '' in lst
True
>>> '' in lst2
False
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/1593612)
 A simple recursive check would be enough, and return as early as possible, we assume it input is not a list or contains non-lists it is not empty 

  def isEmpty(alist):
    try:
        for a in alist:
            if not isEmpty(a):
                return False
    except:
        # we will reach here if alist is not a iterator/list
        return False

    return True

alist = []
blist = [alist]               # [[]]
clist = [alist, alist, alist] # [[], [], []]
dlist = [blist]               # [[[]]]
elist = [1, isEmpty, dlist]

if isEmpty(alist): 
    print "alist is empty"

if isEmpty(dlist): 
    print "dlist is empty"

if not isEmpty(elist): 
    print "elist is not empty"
  

 You can further improve it to check for recursive list or no list objects, or may be empty dicts etc. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/23814369)
  

  if any('' in s for s in row[1:]):
  

  

  if '' in your_list:
  

 where  your_list  is name of list you are examining. 


-------------------------------------next answer-------------------------------------

Rank:6 (https://stackoverflow.com/questions/53626309)
 You just need a simple check at the beginning to see if it's empty, then return an empty list if it is. You can also use a list comprehension to simplify it so it's not so many lines: 

  def yourFunction():
    # Return an empty list if the dict is empty.
    if not self.belongings:
        return []

    # Can use a list comprehension to simplify code.    
    return [item for item, count in self.belongings.items() if count >= 1]
  

 Honestly you don't even need the beginning check since if it's an empty  dict  then the list comprehension will return you an empty list like you want: 

  def yourFunction():   
    return [item for item, count in self.belongings.items() if count >= 1]
  



