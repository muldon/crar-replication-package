######### Must be set
spring.datasource.url=jdbc:postgresql://localhost:5432/stackoverflow2019journaldycrokage

CRAR_HOME=/home/rodrigo/Dropbox/projects/crar-replication-package-project
spring.datasource.username=postgres
spring.datasource.password=lascampostgres5k

#CRAR_HOME=YOUR_CRAR_HOME_FOLDER
#spring.datasource.username=your_db_user
#spring.datasource.password=your_db_password

################ Main parameters: ################################### 
# compareAllBaselines					  = test all approaches for Java, Php and Python 
# extractAnswers						  = generate summaries with code sentences and explanations. subAction = saveCache|useRecommendedCache. saveCache will save in a file the recommended results for each query. useRecommendedCache will use these saved results instead of calling approach. Test in lowercase.

action=compareAllBaselines
#action=trainDL
#action=trainWeights
#action=dummy
#action=extractAnswers
server.port= 8083
#luceneSearchAsClient=true
luceneSearchAsClient=false
backend.service.port=8081
serverUrlGetCandidadeBuckets=http://isel.ufu.br:${backend.service.port}/crokage/query/getcandidateanswers
serverUrlGetCandidadeThreads=http://isel.ufu.br:${backend.service.port}/crokage/query/getcandidatethreads
serverUrlGetAllBuckets=http://isel.ufu.br:${backend.service.port}/crokage/query/getallanswersfortag
serverUrlGetAllThreads=http://isel.ufu.br:${backend.service.port}/crokage/query/getallthreadsfortag


#--------------------------------------------if action=extractAnswers--------------------------------------------------- 

#userecommendedcache|savecache
extractAnswersParams=userecommendedcache

#any value > 0
saveQueryMetric=false
#saveQueryMetric=true

############################################### Do not change #################################################


#BIKER summaries answers
BIKER_ANSWERS_SUMMARIES_TEST=${CRAR_HOME}/data/bikerAnswersTest

######### Must to be generated or provided for tests

 #for tests - static file - must be provided
NLP2API_GOLD_SET_FILE = ${CRAR_HOME}/data/nlp2ApiGoldSet.txt
INPUT_QUERIES_FILE_NLP2API = ${CRAR_HOME}/data/inputQueriesNlp2Api.txt

INPUT_QUERIES_FILE_TRAINING=${CRAR_HOME}/data/selectedqueries-training49.txt
INPUT_QUERIES_FILE_TEST=${CRAR_HOME}/data/selectedqueries-test48.txt
INPUT_QUERIES_FILE_USER_STUDY=${CRAR_HOME}/data/selectedqueries-user-study.txt

STOP_WORDS_FILE_PATH=${CRAR_HOME}/data/stanford_stop_words.txt

RECOMMENDED_ANSWERS_QUERIES_CACHE =${CRAR_HOME}/data/recommendedAnswersQueriesCache
GROUND_TRUTH_THREADS_FOR_QUERIES =${CRAR_HOME}/data/groundTruthThreadsForQueries
GROUND_TRUTH_ANSWERS_FOR_QUERIES =${CRAR_HOME}/data/groundTruthAnswersForQueries
######### Automatically generated files

#generated to be read by BIKER

CRAR_HOME_DATA_FOLDER= ${CRAR_HOME}/data/

#generated after calling NLP2Api jar
RACK_OUTPUT_QUERIES_FILE = rackApiQueriesOutput.txt

#generated after calling NLP2Api jar
NLP2API_OUTPUT_QUERIES_FILE = nlp2apiQueriesOutput.txt

MATRIX_KAPPA_BEFORE_AGREEMENT = ${CRAR_HOME}/data/MatrixForKappaBeforeAgreement.csv
MATRIX_KAPPA_AFTER_AGREEMENT = ${CRAR_HOME}/data/MatrixForKappaAfterAgreement.csv

############################## Database and Spring parameters ######################################

DL_CNN_INTPUT_TRAINING = ${CRAR_HOME_DATA_FOLDER}cnninput.txt
DL_CNN_OUTPUT_TRAINING = ${CRAR_HOME_DATA_FOLDER}cnnouput.zip

debug=false

#server.port= 80

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.database.driverClassName=org.postgresql.Driver
spring.devtools.livereload.enabled = false

endpoints.cors.allowed-origins=*
logging.config = classpath:logback.xml

